/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).BS={})}(this,(function(e){"use strict";function t(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function s(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const i=!0,n="undefined"!=typeof window&&void 0!==window?.document,a="undefined"!=typeof process&&null!=process?.versions?.node,r=n&&navigator.userAgent||"";let o=!1;n?o=Boolean(navigator.bluetooth):a&&(o=!0);const c=n&&/Bluefy/i.test(r),h=n&&/WebBLE/i.test(r),l=n&&/Android/i.test(r),u=n&&/Safari/i.test(r)&&!/Chrome/i.test(r),f=n&&/iPad|iPhone|iPod/i.test(r),g=n&&/Macintosh/i.test(r),d=!n&&!a&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var m,p,v,w,y=Object.freeze({__proto__:null,isAndroid:l,get isBluetoothSupported(){return o},isIOS:f,isInBluefy:c,isInBrowser:n,isInDev:i,isInLensStudio:d,isInNode:a,isInProduction:false,isInWebBLE:h,isMac:g,isSafari:u});if(d){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(w={}).log=e,w.warn=e.bind(w,"WARNING"),w.error=e.bind(w,"ERROR")}else w=console;if(!w.assert){const e=(e,...t)=>{e||w.warn(...t)};w.assert=e}if(!w.table){const e=(...e)=>{w.log(...e)};w.table=e}function b(){}const S=w.log.bind(w),E=w.warn.bind(w),C=w.error.bind(w),M=w.table.bind(w),D=w.assert.bind(w);class k{constructor(e){if(v.set(this,{log:i,warn:i,assert:!0,error:!0,table:!0}),t(m,m,"f",p)[e])throw new Error(`"${e}" console already exists`);t(m,m,"f",p)[e]=this}setLevelFlags(e){Object.assign(t(this,v,"f"),e)}static setLevelFlagsForType(e,s){if(!t(this,m,"f",p)[e])throw new Error(`no console found with type "${e}"`);t(this,m,"f",p)[e].setLevelFlags(s)}static setAllLevelFlags(e){for(const s in t(this,m,"f",p))t(this,m,"f",p)[s].setLevelFlags(e)}static create(e,s){const i=t(this,m,"f",p)[e]||new m(e);return s&&i.setLevelFlags(s),i}get log(){return t(this,v,"f").log?S:b}get warn(){return t(this,v,"f").warn?E:b}get error(){return t(this,v,"f").error?C:b}get assert(){return t(this,v,"f").assert?D:b}get table(){return t(this,v,"f").table?M:b}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function T(e,t){return k.create(e,t)}m=k,v=new WeakMap,p={value:{}};class W{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push({listener:t,once:s.once})}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((e=>e.listener!==t)))}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);if(!this.listeners[e])return;const s=this.listeners[e];s.forEach(((i,n)=>{i.listener({type:e,target:this.target,message:t}),i.once&&s.splice(n,1)}))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var I,_,L;const F=T("Timer",{log:!1});class U{get callback(){return t(this,I,"f")}set callback(e){F.assertTypeWithError(e,"function"),F.log({newCallback:e}),s(this,I,e,"f"),this.isRunning&&this.restart()}get interval(){return t(this,_,"f")}set interval(e){F.assertTypeWithError(e,"number"),F.assertWithError(e>0,"interval must be above 0"),F.log({newInterval:e}),s(this,_,e,"f"),this.isRunning&&this.restart()}constructor(e,t){I.set(this,void 0),_.set(this,void 0),L.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=t(this,L,"f")}start(){this.isRunning?F.log("interval already running"):(F.log("starting interval"),s(this,L,setInterval(t(this,I,"f"),t(this,_,"f")),"f"))}stop(){this.isRunning?(F.log("stopping interval"),clearInterval(t(this,L,"f")),s(this,L,void 0,"f")):F.log("interval already not running")}restart(){this.stop(),this.start()}}function x(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}I=new WeakMap,_=new WeakMap,L=new WeakMap,T("checksum",{log:!0});const R=new Uint32Array(256);for(let e=0;e<256;++e)R[e]=x(e);function A(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(R[i^n]^s>>>8)>>>0}return s}var O,$;O="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,$="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const N=new O,B=new $,P=T("ArrayBufferUtils",{log:!1});function V(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return z(e)}if(e instanceof Array){return V(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return z(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function z(e){const t=N.encode(e);return V(t.byteLength,t)}function j(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),P.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function q(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}var G,H,J,Q,Z,K,X,Y,ee,te,se,ie,ne,ae,re,oe,ce,he,le,ue,fe,ge,de,me,pe,ve,we,ye,be,Se,Ee,Ce,Me,De;const ke=T("FileTransferManager",{log:!0}),Te=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock"],We=["tflite"],Ie=["idle","sending","receiving"],_e=["startReceive","startSend","cancel"],Le=[...Te,"fileTransferProgress","fileTransferComplete","fileReceived"];class Fe{constructor(){G.add(this),ee.set(this,H.MaxLength),ne.set(this,void 0),ce.set(this,0),fe.set(this,0),ve.set(this,"idle"),Ee.set(this,[])}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return t(this,H,"f",Y)}get maxLength(){return t(this,ee,"f")}get type(){return t(this,ne,"f")}get length(){return t(this,ce,"f")}get checksum(){return t(this,fe,"f")}get status(){return t(this,ve,"f")}parseMessage(e,s){switch(ke.log({messageType:e}),e){case"maxFileLength":t(this,G,"m",te).call(this,s);break;case"getFileType":case"setFileType":t(this,G,"m",ae).call(this,s);break;case"getFileLength":case"setFileLength":t(this,G,"m",he).call(this,s);break;case"getFileChecksum":case"setFileChecksum":t(this,G,"m",ge).call(this,s);break;case"fileTransferStatus":t(this,G,"m",we).call(this,s);break;case"getFileBlock":t(this,G,"m",Ce).call(this,s);break;default:throw Error(`uncaught messageType ${e}`)}}async send(e,s){t(this,G,"m",be).call(this),t(this,G,"m",Q).call(this,e);const i=await q(s),n=[];n.push(t(this,G,"m",oe).call(this,e,!1));const a=i.byteLength;n.push(t(this,G,"m",ue).call(this,a,!1));const r=A(i);n.push(t(this,G,"m",me).call(this,r,!1)),n.push(t(this,G,"m",pe).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await t(this,G,"m",Me).call(this,i)}async receive(e){t(this,G,"m",be).call(this),t(this,G,"m",Q).call(this,e),await t(this,G,"m",oe).call(this,e),await t(this,G,"m",pe).call(this,"startReceive")}async cancel(){t(this,G,"m",Se).call(this),await t(this,G,"m",pe).call(this,"cancel")}}H=Fe,ee=new WeakMap,ne=new WeakMap,ce=new WeakMap,fe=new WeakMap,ve=new WeakMap,Ee=new WeakMap,G=new WeakSet,J=function(){return this.eventDispatcher.dispatchEvent},Q=function(e){ke.assertEnumWithError(e,We)},Z=function(e){ke.assertWithError(e in We,`invalid typeEnum ${e}`)},K=function(e){ke.assertWithError(e in Ie,`invalid statusEnum ${e}`)},X=function(e){ke.assertEnumWithError(e,_e)},te=function(e){ke.log("parseFileMaxLength",e);const s=e.getUint32(0,!0);ke.log(`maxLength: ${s/1024}kB`),t(this,G,"m",se).call(this,s)},se=function(e){ke.log({maxLength:e}),s(this,ee,e,"f"),t(this,G,"a",J).call(this,"maxFileLength",{maxFileLength:e})},ie=function(e){ke.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},ae=function(e){ke.log("parseFileType",e);const s=e.getUint8(0);t(this,G,"m",Z).call(this,s);const i=We[s];t(this,G,"m",re).call(this,i)},re=function(e){ke.log({fileTransferType:e}),s(this,ne,e,"f"),t(this,G,"a",J).call(this,"getFileType",{fileType:e})},oe=async function(e,s){if(t(this,G,"m",Q).call(this,e),this.type==e)return void ke.log(`redundant type assignment ${e}`);const i=this.waitForEvent("getFileType"),n=We.indexOf(e);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},he=function(e){ke.log("parseFileLength",e);const s=e.getUint32(0,!0);t(this,G,"m",le).call(this,s)},le=function(e){ke.log(`length: ${e/1024}kB`),s(this,ce,e,"f"),t(this,G,"a",J).call(this,"getFileLength",{fileLength:e})},ue=async function(e,s){if(ke.assertTypeWithError(e,"number"),t(this,G,"m",ie).call(this,e),this.length==e)return void ke.log(`redundant length assignment ${e}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,e,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},ge=function(e){ke.log("checksum",e);const s=e.getUint32(0,!0);t(this,G,"m",de).call(this,s)},de=function(e){ke.log({checksum:e}),s(this,fe,e,"f"),t(this,G,"a",J).call(this,"getFileChecksum",{fileChecksum:e})},me=async function(e,t){if(ke.assertTypeWithError(e,"number"),this.checksum==e)return void ke.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},pe=async function(e,s){t(this,G,"m",X).call(this,e);const i=this.waitForEvent("fileTransferStatus"),n=_e.indexOf(e);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},we=function(e){ke.log("parseFileStatus",e);const s=e.getUint8(0);t(this,G,"m",K).call(this,s);const i=Ie[s];t(this,G,"m",ye).call(this,i)},ye=function(e){ke.log({status:e}),s(this,ve,e,"f"),t(this,G,"a",J).call(this,"fileTransferStatus",{fileTransferStatus:e}),t(this,Ee,"f").length=0},be=function(){ke.assertWithError("idle"==t(this,ve,"f"),"status is not idle")},Se=function(){ke.assertWithError("idle"!=t(this,ve,"f"),"status is idle")},Ce=async function(e){ke.log("parseFileBlock",e),t(this,Ee,"f").push(e.buffer);const s=t(this,Ee,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/t(this,ce,"f");if(ke.log(`received ${s} of ${t(this,ce,"f")} bytes (${100*i}%)`),t(this,G,"a",J).call(this,"fileTransferProgress",{progress:i}),s!=t(this,ce,"f"))return;ke.log("file transfer complete");let n,a=(new Date).toLocaleString();if("tflite"===this.type)a+=".tflite";n="undefined"!=typeof File?new File(t(this,Ee,"f"),a):new Blob(t(this,Ee,"f"));const r=A(await n.arrayBuffer());ke.log({checksum:r}),r==t(this,fe,"f")?(ke.log("received file",n),t(this,G,"a",J).call(this,"getFileBlock",{fileTransferBlock:e}),t(this,G,"a",J).call(this,"fileTransferComplete",{direction:"receiving"}),t(this,G,"a",J).call(this,"fileReceived",{file:n})):ke.error(`wrong checksum - expected ${t(this,fe,"f")}, got ${r}`)},Me=async function(e){return t(this,G,"m",De).call(this,e)},De=async function e(s,i=0){if("sending"!=this.status)return;const n=s.slice(i,i+(this.mtu-3-3));ke.log("slicedBuffer",n);const a=1-(s.byteLength-i)/s.byteLength;if(ke.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*a}%)`),t(this,G,"a",J).call(this,"fileTransferProgress",{progress:a}),0!=n.byteLength)return this.sendMessage([{type:"setFileBlock",data:n}]),t(this,G,"m",e).call(this,s,i+n.byteLength);ke.log("finished sending buffer"),t(this,G,"a",J).call(this,"fileTransferComplete",{direction:"sending"})},Y={value:0};const Ue=65536;function xe(e,t){const s=Date.now();var i;return(i=s)-i%Ue+e.getUint16(t,!0)}var Re;const Ae={min:1/0,max:-1/0,range:0};class Oe{constructor(){Re.set(this,Object.assign({},Ae))}reset(){Object.assign(t(this,Re,"f"),Ae)}update(e){t(this,Re,"f").min=Math.min(e,t(this,Re,"f").min),t(this,Re,"f").max=Math.max(e,t(this,Re,"f").max),t(this,Re,"f").range=t(this,Re,"f").max-t(this,Re,"f").min}getNormalization(e){return t(this,Re,"f").range*e||0}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}var $e,Ne,Be,Pe;Re=new WeakMap;class Ve{constructor(){$e.set(this,{x:new Oe,y:new Oe})}reset(){t(this,$e,"f").x.reset(),t(this,$e,"f").y.reset()}update(e){t(this,$e,"f").x.update(e.x),t(this,$e,"f").y.update(e.y)}getNormalization(e){return{x:t(this,$e,"f").x.getNormalization(e.x),y:t(this,$e,"f").y.getNormalization(e.y)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}$e=new WeakMap;const ze=T("PressureDataManager",{log:!0}),je=["pressure"],qe=je;class Ge{constructor(){Ne.set(this,[]),Be.set(this,void 0),Pe.set(this,new Ve)}get positions(){return t(this,Ne,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const t=[];for(let s=0,i=0;i<e.byteLength;s++,i+=2)t.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;ze.log({positions:t}),s(this,Ne,t,"f"),s(this,Be,(i=this.numberOfSensors,n=()=>new Oe,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){t(this,Be,"f").forEach((e=>e.reset())),t(this,Pe,"f").reset()}parseData(e,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,a=0;a<e.byteLength;n++,a+=2){const r=e.getUint16(a,!0),o=r*s,c=t(this,Be,"f")[n].updateAndGetNormalization(o),h=this.positions[n];i.sensors[n]={rawValue:r,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=t(this,Pe,"f").updateAndGetNormalization(i.center)),ze.log({pressure:i}),i}}Ne=new WeakMap,Be=new WeakMap,Pe=new WeakMap;const He=T("MotionSensorDataManager",{log:!0}),Je=["still","walking","running","bicycle","vehicle","tilting"],Qe=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class Ze{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const a={x:s,y:i,z:n};return He.log({vector:a}),a}parseQuaternion(e,t){let[s,i,n,a]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const r={x:s,y:i,z:n,w:a};return He.log({quaternion:r}),r}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1;const a={heading:s,pitch:i,roll:n};return He.log({euler:a}),a}parseStepCounter(e){He.log("parseStepCounter",e);const t=e.getUint32(0,!0);return He.log({stepCount:t}),t}parseActivity(e){He.log("parseActivity",e);const t={},s=e.getUint8(0);return He.log("activityBitfield",s.toString(2)),Je.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),He.log("activity",t),t}parseDeviceOrientation(e){He.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=Qe[t];return He.assertWithError(s,"undefined deviceOrientation"),He.log({deviceOrientation:s}),s}}var Ke,Xe;const Ye=["barometer"],et=Ye,tt=T("BarometerSensorDataManager",{log:!0});class st{constructor(){Ke.add(this)}parseData(e,s){const i=e.getUint32(0,!0)*s,n=t(this,Ke,"m",Xe).call(this,i);return tt.log({pressure:i,altitude:n}),{pressure:i}}}Ke=new WeakSet,Xe=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const it=T("ParseUtils",{log:!0});function nt(e,t=0){const s=e.getUint8(t++);return{string:B.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function at(e,t,s,i,n=!1){let a=0;for(;a<e.byteLength;){const r=e.getUint8(a++);it.assertWithError(r in t,`invalid messageTypeEnum ${r}`);const o=t[r];let c;n?(c=e.getUint16(a,!0),a+=2):c=e.getUint8(a++),it.log({messageTypeEnum:r,messageType:o,messageLength:c,dataView:e,byteOffset:a});const h=j(e,a,c);it.log({_dataView:h}),s(o,h,i),a+=c}}const rt=T("SensorDataManager",{log:!0}),ot=["acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...je,...Ye],ct=["acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...qe,...et],ht=["getPressurePositions","getSensorScalars","sensorData"],lt=[...ht,...ot];class ut{constructor(){this.pressureSensorDataManager=new Ge,this.motionSensorDataManager=new Ze,this.barometerSensorDataManager=new st,this.scalars=new Map}static AssertValidSensorType(e){rt.assertEnumWithError(e,ot)}static AssertValidSensorTypeEnum(e){rt.assertTypeWithError(e,"number"),rt.assertWithError(e in ot,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(rt.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(e){for(let t=0;t<e.byteLength;t+=5){const s=e.getUint8(t),i=ot[s];if(!i){rt.warn(`unknown sensorType index ${s}`);continue}const n=e.getFloat32(t+1,!0);rt.log({sensorType:i,sensorScalar:n}),this.scalars.set(i,n)}}parseData(e){rt.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=xe(e,t);t+=2;at(new DataView(e.buffer,t),ot,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(e,t,{timestamp:s}){const i=this.scalars.get(e)||1;let n=null;switch(e){case"pressure":n=this.pressureSensorDataManager.parseData(t,i);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":n=this.motionSensorDataManager.parseVector3(t,i);break;case"gameRotation":case"rotation":n=this.motionSensorDataManager.parseQuaternion(t,i);break;case"orientation":n=this.motionSensorDataManager.parseEuler(t,i);break;case"stepCounter":n=this.motionSensorDataManager.parseStepCounter(t);break;case"stepDetector":n={};break;case"activity":n=this.motionSensorDataManager.parseActivity(t);break;case"deviceOrientation":n=this.motionSensorDataManager.parseDeviceOrientation(t);break;case"barometer":n=this.barometerSensorDataManager.parseData(t,i);break;default:rt.error(`uncaught sensorType "${e}"`)}rt.assertWithError(null!=n,`no sensorData defined for sensorType "${e}"`),rt.log({sensorType:e,sensorData:n}),this.dispatchEvent(e,{sensorType:e,[e]:n,timestamp:s}),this.dispatchEvent("sensorData",{sensorType:e,[e]:n,timestamp:s})}}var ft,gt,dt,mt,pt,vt,wt,yt,bt,St,Et,Ct,Mt,Dt,kt;const Tt=T("SensorConfigurationManager",{log:!0}),Wt=["getSensorConfiguration","setSensorConfiguration"];class It{constructor(){ft.add(this),mt.set(this,void 0),vt.set(this,void 0)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return t(this,vt,"f")}async setConfiguration(e,s){if(s&&(e=Object.assign({...this.zeroSensorConfiguration},e)),Tt.log({newSensorConfiguration:e}),t(this,ft,"m",yt).call(this,e))return void Tt.log("redundant sensor configuration");const i=t(this,ft,"m",Dt).call(this,e);Tt.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get MaxSensorRate(){return t(this,gt,"f",St)}get maxSensorRate(){return gt.MaxSensorRate}static get SensorRateStep(){return t(this,gt,"f",Et)}get sensorRateStep(){return gt.SensorRateStep}static get ZeroSensorConfiguration(){return t(this,gt,"f",kt)}get zeroSensorConfiguration(){const e={};return ot.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(e,s){switch(Tt.log({messageType:e}),e){case"getSensorConfiguration":case"setSensorConfiguration":const i=t(this,ft,"m",bt).call(this,s);t(this,ft,"m",wt).call(this,i);break;default:throw Error(`uncaught messageType ${e}`)}}}var _t,Lt,Ft,Ut,xt,Rt,At,Ot,$t,Nt,Bt,Pt,Vt,zt,jt,qt,Gt,Ht,Jt,Qt,Zt,Kt,Xt,Yt,es,ts,ss,is,ns,as,rs,os;gt=It,mt=new WeakMap,vt=new WeakMap,ft=new WeakSet,dt=function(){return this.eventDispatcher.dispatchEvent},pt=function(e){Tt.assertWithError(t(this,mt,"f"),"must get initial sensorConfiguration");const s=t(this,mt,"f")?.includes(e);return Tt.assert(s,`unavailable sensor type "${e}"`),s},wt=function(e){s(this,vt,e,"f"),Tt.log({updatedConfiguration:t(this,vt,"f")}),t(this,ft,"a",dt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},yt=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},bt=function(e){const t={};for(let s=0;s<e.byteLength;s+=3){const i=e.getUint8(s),n=ot[i];if(!n){Tt.warn(`unknown sensorType index ${i}`);continue}const a=e.getUint16(s+1,!0);Tt.log({sensorType:n,sensorRate:a}),t[n]=a}return Tt.log({parsedSensorConfiguration:t}),s(this,mt,Object.keys(t),"f"),t},Ct=function(e){Tt.assertTypeWithError(e,"number"),Tt.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),Tt.assertWithError(e<this.MaxSensorRate,`sensorRate must be 0 or greater (got ${e})`),Tt.assertWithError(e%this.SensorRateStep==0,`sensorRate must be multiple of ${this.SensorRateStep}`)},Mt=function(e){t(gt,gt,"m",Ct).call(gt,e)},Dt=function(e){let s=Object.keys(e);s=s.filter((e=>t(this,ft,"m",pt).call(this,e)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{ut.AssertValidSensorType(s);const a=ot.indexOf(s);i.setUint8(3*n,a);const r=e[s];t(this,ft,"m",Mt).call(this,r),i.setUint16(3*n+1,r,!0)})),Tt.log({sensorConfigurationData:i}),i},St={value:65535},Et={value:5},kt={value:{}},ot.forEach((e=>{t(gt,gt,"f",kt)[e]=0}));const cs=T("TfliteManager",{log:!0}),hs=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],ls=hs,us=["classification","regression"];class fs{constructor(){_t.add(this),Rt.set(this,void 0),$t.set(this,void 0),Pt.set(this,void 0),qt.set(this,[]),Jt.set(this,void 0),Xt.set(this,void 0),ts.set(this,void 0),ns.set(this,void 0)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return t(this,Rt,"f")}async setName(e,t){if(cs.assertTypeWithError(e,"string"),this.name==e)return void cs.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=N.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return t(this,$t,"f")}async setTask(e,s){if(t(this,_t,"m",Ft).call(this,e),this.task==e)return void cs.log(`redundant task assignment ${e}`);const i=this.waitForEvent("getTfliteTask"),n=us.indexOf(e);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return t(this,Pt,"f")}async setSampleRate(e,s){if(cs.assertTypeWithError(e,"number"),e-=e%It.SensorRateStep,cs.assertWithError(e>=It.SensorRateStep,`sampleRate must be multiple of ${It.SensorRateStep} greater than 0 (got ${e})`),t(this,Pt,"f")==e)return void cs.log(`redundant sampleRate assignment ${e}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,e,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static get SensorTypes(){return t(this,Lt,"f",jt)}static AssertValidSensorType(e){ut.AssertValidSensorType(e),cs.assertWithError(t(this,Lt,"f",jt).includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return t(this,qt,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{Lt.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>ot.indexOf(e))).sort();cs.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return t(this,Jt,"f")}get captureDelay(){return t(this,Xt,"f")}async setCaptureDelay(e,s){if(cs.assertTypeWithError(e,"number"),t(this,Xt,"f")==e)return void cs.log(`redundant captureDelay assignment ${e}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,e,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return t(this,ts,"f")}async setThreshold(e,s){if(cs.assertTypeWithError(e,"number"),cs.assertWithError(e>=0,`threshold must be positive (got ${e})`),t(this,ts,"f")==e)return void cs.log(`redundant threshold assignment ${e}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,e,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return t(this,ns,"f")}async setInferencingEnabled(e,s=!0){if(cs.assertTypeWithError(e,"boolean"),!e&&!this.isReady)return;if(t(this,_t,"m",Kt).call(this),t(this,ns,"f")==e)return void cs.log(`redundant inferencingEnabled assignment ${e}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(e)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(e,s){switch(cs.log({messageType:e}),e){case"getTfliteName":case"setTfliteName":t(this,_t,"m",At).call(this,s);break;case"getTfliteTask":case"setTfliteTask":t(this,_t,"m",Nt).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":t(this,_t,"m",Vt).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":t(this,_t,"m",Gt).call(this,s);break;case"tfliteIsReady":t(this,_t,"m",Qt).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":t(this,_t,"m",Yt).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":t(this,_t,"m",ss).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":t(this,_t,"m",as).call(this,s);break;case"tfliteInference":t(this,_t,"m",os).call(this,s);break;default:throw Error(`uncaught messageType ${e}`)}}}var gs,ds,ms,ps,vs;Lt=fs,Rt=new WeakMap,$t=new WeakMap,Pt=new WeakMap,qt=new WeakMap,Jt=new WeakMap,Xt=new WeakMap,ts=new WeakMap,ns=new WeakMap,_t=new WeakSet,Ft=function(e){cs.assertEnumWithError(e,us)},Ut=function(e){cs.assertWithError(e in us,`invalid taskEnum ${e}`)},xt=function(){return this.eventDispatcher.dispatchEvent},At=function(e){cs.log("parseName",e);const s=B.decode(e.buffer);t(this,_t,"m",Ot).call(this,s)},Ot=function(e){cs.log({name:e}),s(this,Rt,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteName",{tfliteName:e})},Nt=function(e){cs.log("parseTask",e);const s=e.getUint8(0);t(this,_t,"m",Ut).call(this,s);const i=us[s];t(this,_t,"m",Bt).call(this,i)},Bt=function(e){cs.log({task:e}),s(this,$t,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteTask",{tfliteTask:e})},Vt=function(e){cs.log("parseSampleRate",e);const s=e.getUint16(0,!0);t(this,_t,"m",zt).call(this,s)},zt=function(e){cs.log({sampleRate:e}),s(this,Pt,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteSampleRate",{tfliteSampleRate:e})},Gt=function(e){cs.log("parseSensorTypes",e);const s=[];for(let t=0;t<e.byteLength;t++){const i=e.getUint8(t),n=ot[i];n?s.push(n):cs.error(`invalid sensorTypeEnum ${i}`)}t(this,_t,"m",Ht).call(this,s)},Ht=function(e){cs.log({sensorTypes:e}),s(this,qt,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:e})},Qt=function(e){cs.log("parseIsReady",e);const s=Boolean(e.getUint8(0));t(this,_t,"m",Zt).call(this,s)},Zt=function(e){cs.log({isReady:e}),s(this,Jt,e,"f"),t(this,_t,"a",xt).call(this,"tfliteIsReady",{tfliteIsReady:e})},Kt=function(){cs.assertWithError(this.isReady,"tflite is not ready")},Yt=function(e){cs.log("parseCaptureDelay",e);const s=e.getUint16(0,!0);t(this,_t,"m",es).call(this,s)},es=function(e){cs.log({captureDelay:e}),s(this,Xt,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:e})},ss=function(e){cs.log("parseThreshold",e);const s=e.getFloat32(0,!0);t(this,_t,"m",is).call(this,s)},is=function(e){cs.log({threshold:e}),s(this,ts,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteThreshold",{tfliteThreshold:e})},as=function(e){cs.log("parseInferencingEnabled",e);const s=Boolean(e.getUint8(0));t(this,_t,"m",rs).call(this,s)},rs=function(e){cs.log({inferencingEnabled:e}),s(this,ns,e,"f"),t(this,_t,"a",xt).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:e})},os=function(e){cs.log("parseInference",e);const s=xe(e,0);cs.log({timestamp:s});const i=[];for(let t=0,s=2;s<e.byteLength;t++,s+=4){const t=e.getFloat32(s,!0);i.push(t)}cs.log("values",i);const n={timestamp:s,values:i};t(this,_t,"a",xt).call(this,"tfliteInference",{tfliteInference:n})},jt={value:["pressure","linearAcceleration","gyroscope","magnetometer"]};const ws=T("DeviceInformationManager",{log:!0}),ys=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],bs=[...ys,"deviceInformation"];class Ss{constructor(){gs.add(this),ms.set(this,{})}get information(){return t(this,ms,"f")}clear(){s(this,ms,{},"f")}parseMessage(e,s){switch(ws.log({messageType:e}),e){case"manufacturerName":const i=B.decode(s.buffer);ws.log({manufacturerName:i}),t(this,gs,"m",vs).call(this,{manufacturerName:i});break;case"modelNumber":const n=B.decode(s.buffer);ws.log({modelNumber:n}),t(this,gs,"m",vs).call(this,{modelNumber:n});break;case"softwareRevision":const a=B.decode(s.buffer);ws.log({softwareRevision:a}),t(this,gs,"m",vs).call(this,{softwareRevision:a});break;case"hardwareRevision":const r=B.decode(s.buffer);ws.log({hardwareRevision:r}),t(this,gs,"m",vs).call(this,{hardwareRevision:r});break;case"firmwareRevision":const o=B.decode(s.buffer);ws.log({firmwareRevision:o}),t(this,gs,"m",vs).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),ws.log({pnpId:c}),t(this,gs,"m",vs).call(this,{pnpId:c});break;case"serialNumber":const h=B.decode(s.buffer);ws.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${e}`)}}}var Es,Cs,Ms,Ds,ks,Ts,Ws,Is,_s,Ls,Fs,Us,xs,Rs,As;ms=new WeakMap,gs=new WeakSet,ds=function(){return this.eventDispatcher.dispatchEvent},ps=function(){return ys.every((e=>e in t(this,ms,"f")))},vs=function(e){ws.log({partialDeviceInformation:e});Object.keys(e).forEach((s=>{t(this,gs,"a",ds).call(this,s,{[s]:e[s]})})),Object.assign(t(this,ms,"f"),e),ws.log({deviceInformation:t(this,ms,"f")}),t(this,gs,"a",ps)&&(ws.log("completed deviceInformation"),t(this,gs,"a",ds).call(this,"deviceInformation",{deviceInformation:this.information}))};const Os=T("InformationManager",{log:!0}),$s=["leftInsole","rightInsole"],Ns=["left","right"],Bs=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],Ps=Bs;class Vs{constructor(){Es.add(this),Ms.set(this,!1),Ds.set(this,void 0),ks.set(this,void 0),Ts.set(this,""),Ws.set(this,void 0),Fs.set(this,0),xs.set(this,!1)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return t(this,Ms,"f")}updateIsCharging(e){Os.assertTypeWithError(e,"boolean"),s(this,Ms,e,"f"),Os.log({isCharging:t(this,Ms,"f")}),t(this,Es,"a",Cs).call(this,"isCharging",{isCharging:t(this,Ms,"f")})}get batteryCurrent(){return t(this,Ds,"f")}async getBatteryCurrent(){Os.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}updateBatteryCurrent(e){Os.assertTypeWithError(e,"number"),s(this,Ds,e,"f"),Os.log({batteryCurrent:t(this,Ds,"f")}),t(this,Es,"a",Cs).call(this,"getBatteryCurrent",{batteryCurrent:t(this,Ds,"f")})}get id(){return t(this,ks,"f")}updateId(e){Os.assertTypeWithError(e,"string"),s(this,ks,e,"f"),Os.log({id:t(this,ks,"f")}),t(this,Es,"a",Cs).call(this,"getId",{id:t(this,ks,"f")})}get name(){return t(this,Ts,"f")}updateName(e){Os.assertTypeWithError(e,"string"),s(this,Ts,e,"f"),Os.log({updatedName:t(this,Ts,"f")}),t(this,Es,"a",Cs).call(this,"getName",{name:t(this,Ts,"f")})}static get MinNameLength(){return 2}get minNameLength(){return Vs.MinNameLength}static get MaxNameLength(){return 30}get maxNameLength(){return Vs.MaxNameLength}async setName(e){Os.assertTypeWithError(e,"string"),Os.assertWithError(e.length>=this.minNameLength,`name must be greater than ${this.minNameLength} characters long ("${e}" is ${e.length} characters long)`),Os.assertWithError(e.length<this.maxNameLength,`name must be less than ${this.maxNameLength} characters long ("${e}" is ${e.length} characters long)`);const t=N.encode(e);Os.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return t(this,Ws,"f")}get typeEnum(){return $s.indexOf(this.type)}updateType(e){t(this,Es,"m",Is).call(this,e),e!=this.type?(s(this,Ws,e,"f"),Os.log({updatedType:t(this,Ws,"f")}),t(this,Es,"a",Cs).call(this,"getType",{type:t(this,Ws,"f")})):Os.log("redundant type assignment")}async setType(e){t(this,Es,"m",Is).call(this,e);const s=$s.indexOf(e);t(this,Es,"m",Ls).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return t(this,Fs,"f")}get isCurrentTimeSet(){return t(this,xs,"f")}parseMessage(e,s){switch(Os.log({messageType:e}),e){case"isCharging":const i=Boolean(s.getUint8(0));Os.log({isCharging:i}),this.updateIsCharging(i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);Os.log({batteryCurrent:n}),this.updateBatteryCurrent(n);break;case"getId":const a=B.decode(s.buffer);Os.log({id:a}),this.updateId(a);break;case"getName":case"setName":const r=B.decode(s.buffer);Os.log({name:r}),this.updateName(r);break;case"getType":case"setType":const o=s.getUint8(0),c=$s[o];Os.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);Os.log({mtu:h}),t(this,Es,"m",Us).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));t(this,Es,"m",Rs).call(this,l);break;default:throw Error(`uncaught messageType ${e}`)}}clear(){s(this,xs,!1,"f")}}Ms=new WeakMap,Ds=new WeakMap,ks=new WeakMap,Ts=new WeakMap,Ws=new WeakMap,Fs=new WeakMap,xs=new WeakMap,Es=new WeakSet,Cs=function(){return this.eventDispatcher.dispatchEvent},Is=function(e){Os.assertEnumWithError(e,$s)},_s=function(e){Os.assertTypeWithError(e,"number"),Os.assertWithError(e in $s,`invalid typeEnum ${e}`)},Ls=async function(e){t(this,Es,"m",_s).call(this,e);const s=Uint8Array.from([e]);Os.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Us=function(e){Os.assertTypeWithError(e,"number"),t(this,Fs,"f")!=e?(s(this,Fs,e,"f"),t(this,Es,"a",Cs).call(this,"getMtu",{mtu:t(this,Fs,"f")})):Os.log("redundant mtu assignment",e)},Rs=function(e){Os.log({currentTime:e}),s(this,xs,0!=e,"f"),t(this,xs,"f")||t(this,Es,"m",As).call(this)},As=async function(){Os.log("setting current time...");const e=new DataView(new ArrayBuffer(8));e.setBigUint64(0,BigInt(Date.now()),!0);const t=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:e.buffer}]),await t};const zs=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var js,qs,Gs,Hs,Js,Qs,Zs,Ks,Xs,Ys,ei,ti,si,ii,ni,ai,ri,oi,ci,hi,li,ui,fi;const gi=T("VibrationManager"),di=["front","rear"],mi=["waveformEffect","waveform"];class pi{constructor(){js.add(this)}static get MaxWaveformEffectSegmentDelay(){return t(this,qs,"f",Ks)}get maxWaveformEffectSegmentDelay(){return qs.MaxWaveformEffectSegmentDelay}static get MaxWaveformEffectSegmentLoopCount(){return t(this,qs,"f",Ys)}get maxWaveformEffectSegmentLoopCount(){return qs.MaxWaveformEffectSegmentLoopCount}static get MaxNumberOfWaveformEffectSegments(){return t(this,qs,"f",ti)}get maxNumberOfWaveformEffectSegments(){return qs.MaxNumberOfWaveformEffectSegments}static get MaxWaveformEffectSequenceLoopCount(){return t(this,qs,"f",ii)}get maxWaveformEffectSequenceLoopCount(){return qs.MaxWaveformEffectSequenceLoopCount}static get MaxWaveformSegmentDuration(){return t(this,qs,"f",ai)}get maxWaveformSegmentDuration(){return qs.MaxWaveformSegmentDuration}static get MaxNumberOfWaveformSegments(){return t(this,qs,"f",oi)}get maxNumberOfWaveformSegments(){return qs.MaxNumberOfWaveformSegments}async triggerVibration(e,s=!0){let i;e.forEach((e=>{const{type:s}=e;let n,{locations:a}=e;switch(a=a||di.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=e;n=t(this,js,"m",hi).call(this,a,s,i)}break;case"waveform":{const{segments:s}=e;n=t(this,js,"m",li).call(this,a,s)}break;default:throw Error(`invalid vibration type "${s}"`)}gi.log({type:s,arrayBuffer:n}),i=V(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var vi,wi,yi,bi,Si,Ei,Ci,Mi,Di,ki,Ti,Wi,Ii,_i,Li,Fi;qs=pi,js=new WeakSet,Gs=function(e){gi.assertTypeWithError(e,"string"),gi.assertWithError(di.includes(e),`invalid location "${e}"`)},Hs=function(e){t(this,js,"m",Qs).call(this,e),e.forEach((e=>{t(this,js,"m",Gs).call(this,e)}))},Js=function(e){t(this,js,"m",Hs).call(this,e);let s=0;return e.forEach((e=>{const t=di.indexOf(e);s|=1<<t})),gi.log({locationsBitmask:s}),gi.assertWithError(s>0,"locationsBitmask must not be zero"),s},Qs=function(e){gi.assertWithError(Array.isArray(e),"passed non-array"),gi.assertWithError(e.length>0,"passed empty array")},Zs=function(e){gi.assertWithError(zs.includes(e),`invalid waveformEffect "${e}"`)},Xs=function(e){if(null!=e.effect){const s=e.effect;t(this,js,"m",Zs).call(this,s)}else{if(null==e.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:t}=e;gi.assertWithError(t>=0,`delay must be 0ms or greater (got ${t})`),gi.assertWithError(t<=this.maxWaveformEffectSegmentDelay,`delay must be ${this.maxWaveformEffectSegmentDelay}ms or less (got ${t})`)}}if(null!=e.loopCount){const{loopCount:s}=e;t(this,js,"m",ei).call(this,s)}},ei=function(e){gi.assertTypeWithError(e,"number"),gi.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),gi.assertWithError(e<=this.maxWaveformEffectSegmentLoopCount,`waveformEffectSegmentLoopCount must be ${this.maxWaveformEffectSegmentLoopCount} or fewer (got ${e})`)},si=function(e){t(this,js,"m",Qs).call(this,e),gi.assertWithError(e.length<=this.maxNumberOfWaveformEffectSegments,`must have ${this.maxNumberOfWaveformEffectSegments} waveformEffectSegments or fewer (got ${e.length})`),e.forEach((e=>{t(this,js,"m",Xs).call(this,e)}))},ni=function(e){gi.assertTypeWithError(e,"number"),gi.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),gi.assertWithError(e<=this.maxWaveformEffectSequenceLoopCount,`waveformEffectSequenceLoopCount must be ${this.maxWaveformEffectSequenceLoopCount} or fewer (got ${e})`)},ri=function(e){gi.assertTypeWithError(e.amplitude,"number"),gi.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),gi.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),gi.assertTypeWithError(e.duration,"number"),gi.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),gi.assertWithError(e.duration<=this.maxWaveformSegmentDuration,`duration must be ${this.maxWaveformSegmentDuration}ms or less (got ${e.duration}ms)`)},ci=function(e){t(this,js,"m",Qs).call(this,e),gi.assertWithError(e.length<=this.maxNumberOfWaveformSegments,`must have ${this.maxNumberOfWaveformSegments} waveformSegments or fewer (got ${e.length})`),e.forEach((e=>{t(this,js,"m",ri).call(this,e)}))},hi=function(e,s,i=0){t(this,js,"m",si).call(this,s),t(this,js,"m",ni).call(this,i);let n=[],a=0;const r=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||r&&e<this.maxNumberOfWaveformEffectSegments;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[a++]=zs.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[a++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<this.maxNumberOfWaveformEffectSegments;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[a]=0);const i=e%4*2;n[a]|=t<<i,3!=e&&7!=e||a++}0!=i&&(n[a++]=i);const c=new DataView(Uint8Array.from(n).buffer);return gi.log({dataArray:n,dataView:c}),t(this,js,"m",fi).call(this,e,"waveformEffect",c)},li=function(e,s){t(this,js,"m",ci).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),gi.log({dataView:i}),t(this,js,"m",fi).call(this,e,"waveform",i)},ui=function(e){gi.assertTypeWithError(e,"string"),gi.assertWithError(mi.includes(e),`invalid vibrationType "${e}"`)},fi=function(e,s,i){gi.assertWithError(i?.byteLength>0,"no data received");const n=t(this,js,"m",Js).call(this,e);t(this,js,"m",ui).call(this,s);const a=mi.indexOf(s);gi.log({locationsBitmask:n,vibrationTypeIndex:a,dataView:i});const r=V(n,a,i.byteLength,i);return gi.log({data:r}),r},Ks={value:1270},Ys={value:3},ti={value:8},ii={value:6},ai={value:2550},oi={value:20};const Ui=T("BaseConnectionManager",{log:!0}),xi=["not connected","connecting","connected","disconnecting"],Ri=[...Bs,...Wt,...lt,"triggerVibration",...hs,...Te],Ai=[...ys,"batteryLevel","smp","rx","tx",...Ri];class Oi{static get isSupported(){return!1}get isSupported(){return t(this,vi,"a",bi).isSupported}get type(){return t(this,vi,"a",bi).type}constructor(){vi.add(this),Ci.set(this,"not connected"),Ii.set(this,[]),Li.set(this,new U(t(this,vi,"m",Fi).bind(this),5e3)),t(this,vi,"m",Ei).call(this),t(this,vi,"m",Si).call(this),this.sendSmpMessage=this.sendSmpMessage.bind(this)}get status(){return t(this,Ci,"f")}set status(e){Ui.assertEnumWithError(e,xi),t(this,Ci,"f")!=e?(Ui.log(`new connection status "${e}"`),s(this,Ci,e,"f"),this.onStatusUpdated(this.status),this.isConnected?t(this,Li,"f").start():t(this,Li,"f").stop(),"not connected"==t(this,Ci,"f")&&(this.mtu=void 0)):Ui.log(`tried to assign same connection status "${e}"`)}get isConnected(){return"connected"==this.status}async connect(){t(this,vi,"m",Mi).call(this),t(this,vi,"m",Di).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){t(this,vi,"m",Mi).call(this),t(this,vi,"m",Di).call(this),Ui.assert(this.canReconnect,"unable to reconnect")}async disconnect(){t(this,vi,"m",ki).call(this),t(this,vi,"m",Ti).call(this),this.status="disconnecting",Ui.log("disconnecting from device...")}async sendSmpMessage(e){t(this,vi,"m",Wi).call(this),Ui.log("sending smp message",e)}async sendTxMessages(e,s=!0){if(t(this,vi,"m",Wi).call(this),e&&t(this,Ii,"f").push(...e),!s)return;Ui.log("sendTxMessages",t(this,Ii,"f").slice());const i=t(this,Ii,"f").map((e=>{t(wi,wi,"m",yi).call(wi,e.type);const s=Ri.indexOf(e.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,e.data?.byteLength||0,!0),V(s,i,e.data)}));if(this.mtu)for(;i.length>0;){let e=0,t=0;i.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=i.splice(0,t);Ui.log({arrayBufferCount:t,arrayBuffersToSend:s});const n=V(...s);Ui.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=V(...i);Ui.log("sending arrayBuffer",e),await this.sendTxData(e)}t(this,Ii,"f").length=0}async sendTxData(e){Ui.log("sendTxData",e)}parseRxMessage(e){at(e,Ri,t(this,vi,"m",_i).bind(this),null,!0)}}wi=Oi,Ci=new WeakMap,Ii=new WeakMap,Li=new WeakMap,vi=new WeakSet,yi=function(e){Ui.assertEnumWithError(e,Ri)},bi=function(){return this.constructor},Si=function(){Ui.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Ei=function(){Ui.assertWithError(this.constructor!=wi,`${this.constructor.name} must be subclassed`)},Mi=function(){Ui.assertWithError(!this.isConnected,"device is already connected")},Di=function(){Ui.assertWithError("connecting"!=this.status,"device is already connecting")},ki=function(){Ui.assertWithError(this.isConnected,"device is not connected")},Ti=function(){Ui.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Wi=function(){t(this,vi,"m",ki).call(this),t(this,vi,"m",Ti).call(this)},_i=function(e,t){Ui.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Fi=function(){this.isConnected||(Ui.log("timer detected disconnection"),this.status="not connected")};const $i=T("EventUtils",{log:!1});function Ni(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;$i.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function Bi(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;$i.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Pi=T("bluetoothUUIDs",{log:!1});if(n)var Vi=window.BluetoothUUID;function zi(e){return Pi.assertTypeWithError(e,"string"),Pi.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function ji(e){return Vi?.getCharacteristic?.(e)}function qi(e){return Vi?.getService?.(e)}const Gi=Object.freeze({services:{deviceInformation:{uuid:qi("device_information"),characteristics:{manufacturerName:{uuid:ji("manufacturer_name_string")},modelNumber:{uuid:ji("model_number_string")},hardwareRevision:{uuid:ji("hardware_revision_string")},firmwareRevision:{uuid:ji("firmware_revision_string")},softwareRevision:{uuid:ji("software_revision_string")},pnpId:{uuid:ji("pnp_id")},serialNumber:{uuid:ji("serial_number_string")}}},battery:{uuid:qi("battery_service"),characteristics:{batteryLevel:{uuid:ji("battery_level")}}},main:{uuid:zi("0000"),characteristics:{rx:{uuid:zi("1000")},tx:{uuid:zi("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),Hi=[Gi.services.main.uuid],Ji=[Gi.services.deviceInformation.uuid,Gi.services.battery.uuid,Gi.services.smp.uuid];function Qi(e){e=e.toString().toLowerCase();return Object.keys(Gi.services).find((t=>{let s=Gi.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const Zi=[],Ki=[];function Xi(e){var t;return e=e.toString().toLowerCase(),Object.values(Gi.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function Yi(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}switch(e){case"tx":case"smp":t.writeWithoutResponse=!0}return t}Object.values(Gi.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];Hi.includes(e.uuid)&&(Zi.push(i.uuid),t.push(s)),Ki.push(i.uuid)}))}),[]);const en=T("BluetoothConnectionManager",{log:!0});class tn extends Oi{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){en.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var sn,nn,an,rn,on,cn,hn,ln,un,fn,gn;const dn=T("WebBluetoothConnectionManager",{log:!0});var mn;n&&(mn=window.navigator.bluetooth);class pn extends tn{constructor(){super(...arguments),sn.add(this),nn.set(this,{characteristicvaluechanged:t(this,sn,"m",un).bind(this)}),an.set(this,{gattserverdisconnected:t(this,sn,"m",gn).bind(this)}),rn.set(this,void 0),on.set(this,new Map),cn.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(mn)}static get type(){return"webBluetooth"}get device(){return t(this,rn,"f")}set device(e){t(this,rn,"f")!=e?(t(this,rn,"f")&&Bi(t(this,rn,"f"),t(this,an,"f")),e&&Ni(e,t(this,an,"f")),s(this,rn,e,"f")):dn.log("tried to assign the same BluetoothDevice")}get server(){return t(this,rn,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const e=await mn.requestDevice({filters:[{services:Hi}],optionalServices:n?Ji:[]});dn.log("got BluetoothDevice"),this.device=e,dn.log("connecting to device...");const s=await this.server.connect();dn.log(`connected to device? ${s.connected}`),await t(this,sn,"m",hn).call(this),dn.log("fully connected"),this.status="connected"}catch(e){dn.error(e),this.status="not connected",this.server?.disconnect(),t(this,sn,"m",ln).call(this)}}async disconnect(){await t(this,sn,"m",ln).call(this),await super.disconnect(),this.server?.disconnect(),this.status="not connected"}async writeCharacteristic(e,s){super.writeCharacteristic(e,s);const i=t(this,cn,"f").get(e);dn.assertWithError(i,`${e} characteristic not found`),dn.log("writing characteristic",i,s);const n=i.properties||Yi(e);n.writeWithoutResponse?(dn.log("writing without response"),await i.writeValueWithoutResponse(s)):(dn.log("writing with response"),await i.writeValueWithResponse(s)),dn.log("wrote characteristic"),n.read&&!n.notify&&(dn.log("reading value after write..."),await i.readValue(),(c||h)&&t(this,sn,"m",fn).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),dn.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){dn.error(e),this.isInRange=!1}this.isConnected?(dn.log("successfully reconnected!"),await t(this,sn,"m",hn).call(this),this.status="connected"):(dn.log("unable to reconnect"),this.status="not connected")}}nn=new WeakMap,an=new WeakMap,rn=new WeakMap,on=new WeakMap,cn=new WeakMap,sn=new WeakSet,hn=async function(){t(this,sn,"m",ln).call(this),dn.log("getting services...");const e=await this.server.getPrimaryServices();dn.log("got services",e.length),await this.server.getPrimaryService("8d53dc1d-1db7-4cd3-868b-8a527460aa84"),dn.log("getting characteristics...");for(const s in e){const i=e[s];dn.log({service:i});const n=Qi(i.uuid);dn.assertWithError(n,`no name found for service uuid "${i.uuid}"`),dn.log(`got "${n}" service`),i.name=n,t(this,on,"f").set(n,i),dn.log(`getting characteristics for "${n}" service`);const a=await i.getCharacteristics();dn.log(`got characteristics for "${n}" service`);for(const e in a){const s=a[e];dn.log({characteristic:s});const i=Xi(s.uuid);dn.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),dn.log(`got "${i}" characteristic in "${n}" service`),s.name=i,t(this,cn,"f").set(i,s),Ni(s,t(this,nn,"f"));const r=s.properties||Yi(i);r.notify&&(dn.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),r.read&&(dn.log(`reading "${i}" characteristic...`),await s.readValue(),(c||h)&&t(this,sn,"m",fn).call(this,s))}}},ln=async function(){this.device&&Bi(this.device,t(this,an,"f"));const e=Array.from(t(this,cn,"f").keys()).map((e=>{const s=t(this,cn,"f").get(e);Bi(s,t(this,nn,"f"));if((s.properties||Yi(e)).notify)return dn.log(`stopping notifications for "${e}" characteristic`),s.stopNotifications()}));return Promise.allSettled(e)},un=function(e){dn.log("oncharacteristicvaluechanged");const s=e.target;t(this,sn,"m",fn).call(this,s)},fn=function(e){dn.log("onCharacteristicValue");const t=e.name;dn.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),dn.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;dn.assertWithError(s,`no data found for "${t}" characteristic`),dn.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){dn.error(e)}},gn=function(){dn.log("gattserverdisconnected"),this.status="not connected"};const vn=4294967296,wn=9007199254740992;const yn={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function a(e){let a=s.byteLength;const r=n+e;for(;a<r;)a<<=1;if(a!==s.byteLength){const e=i;s=new ArrayBuffer(a),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function r(){n+=t}function o(e){r(a(1).setUint8(n,e))}function c(e){const t=a(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);r()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){r(a(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){r(a(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%vn,s=(e-t)/vn,i=a(8);i.setUint32(n,s),i.setUint32(n+4,t),r()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=wn)return h(0,t);if(-wn<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){r(a(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),u=new DataView(l);for(let e=0;e<n;++e)u.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function a(e,t){return n+=e,t}function r(t){return a(t,new Uint8Array(e,n,t))}function o(){return a(1,i.getUint8(n))}function c(){return a(2,i.getUint16(n))}function h(){return a(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function u(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*vn+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function f(e){const t=o();if(255===t)return-1;const s=u(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function g(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const a=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==a)return(i?-1:1)*a*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|a<<13),t.getFloat32(0)}();case 26:return a(4,i.getFloat32(n));case 27:return a(8,i.getFloat64(n))}if(v=u(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=f(d))>=0;)t+=v,e.push(r(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return r(v);case 3:if(v<0)for(;(v=f(d))>=0;)g(w,v);else g(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},bn=T("mcumgr",{log:!0}),Sn=0,En=1,Cn=2,Mn=3,Dn=0,kn=1,Tn=8,Wn=0,In=2,_n=3,Ln=5,Fn=0,Un=1,xn=5,Rn=0;class An{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(yn.encode(i))]);const a=255&n.length,r=[e,0,n.length>>8,a,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,r}_notification(e){bn.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,a,,r]=e,o=yn.decode(e.slice(8).buffer),c=256*s+i,h=256*n+a;return bn.log("mcumgr - Process Message - Group: "+h+", Id: "+r+", Off: "+o.off),h===kn&&r===Un&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===Mn&&h===Tn&&r===Rn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===En&&h===Tn&&r===Rn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),bn.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:r,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:r,data:o,length:c}))}cmdReset(){return this._getMessage(Cn,Dn,Ln)}smpEcho(e){return this._getMessage(Cn,Dn,Wn,{d:e})}cmdImageState(){return this._getMessage(Sn,kn,Fn)}cmdImageErase(){return this._getMessage(Cn,kn,xn,{})}cmdImageTest(e){return this._getMessage(Cn,kn,Fn,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(Cn,kn,Fn,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-yn.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(Cn,kn,Un,e);bn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?bn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?bn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(bn.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-yn.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(Cn,Tn,Rn,e);bn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?bn.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage(Sn,Tn,Rn,e);bn.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const a=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=a,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var On,$n,Nn,Bn,Pn,Vn,zn,jn,qn,Gn,Hn,Jn,Qn,Zn,Kn,Xn,Yn,ea,ta,sa,ia;const na=T("FirmwareManager",{log:!0}),aa=["smp"],ra=[...aa,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],oa=["idle","uploading","uploaded","pending","testing","erasing"];class ca{constructor(){On.add(this),Nn.set(this,"idle"),Pn.set(this,void 0),jn.set(this,void 0),qn.set(this,new An),t(this,On,"m",Gn).call(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(e,s){if(na.log({messageType:e}),"smp"!==e)throw Error(`uncaught messageType ${e}`);t(this,qn,"f")._notification(Array.from(new Uint8Array(s.buffer))),t(this,On,"a",$n).call(this,"smp",{dataView:s})}async uploadFirmware(e){na.log("uploadFirmware",e);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await q(e),n=await t(this,qn,"f").imageInfo(i);na.log({imageInfo:n}),t(this,qn,"f").cmdUpload(i,1),t(this,On,"m",Bn).call(this,"uploading"),await s}get status(){return t(this,Nn,"f")}get images(){return t(this,Pn,"f")}async getImages(){const e=this.waitForEvent("firmwareImages");na.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(t(this,qn,"f").cmdImageState()).buffer),await e}async testImage(e=1){if(t(this,On,"m",zn).call(this,e),t(this,On,"m",Vn).call(this),!t(this,Pn,"f")[e])return void na.log(`image ${e} not found`);if(1==t(this,Pn,"f")[e].pending)return void na.log(`image ${e} is already pending`);if(t(this,Pn,"f")[e].empty)return void na.log(`image ${e} is empty`);const s=this.waitForEvent("smp");na.log("testing firmware image..."),this.sendMessage(Uint8Array.from(t(this,qn,"f").cmdImageTest(t(this,Pn,"f")[e].hash)).buffer),await s}async eraseImage(){t(this,On,"m",Vn).call(this);const e=this.waitForEvent("smp");na.log("erasing image..."),this.sendMessage(Uint8Array.from(t(this,qn,"f").cmdImageErase()).buffer),t(this,On,"m",Bn).call(this,"erasing"),await e,await this.getImages()}async confirmImage(e=0){if(t(this,On,"m",zn).call(this,e),t(this,On,"m",Vn).call(this),!0===t(this,Pn,"f")[e].confirmed)return void na.log(`image ${e} is already confirmed`);const s=this.waitForEvent("smp");na.log("confirming image..."),this.sendMessage(Uint8Array.from(t(this,qn,"f").cmdImageConfirm(t(this,Pn,"f")[e].hash)).buffer),await s}async echo(e){na.assertTypeWithError(e,"string");const s=this.waitForEvent("smp");na.log("sending echo..."),this.sendMessage(Uint8Array.from(t(this,qn,"f").smpEcho(e)).buffer),await s}async reset(){const e=this.waitForEvent("smp");na.log("resetting..."),this.sendMessage(Uint8Array.from(t(this,qn,"f").cmdReset()).buffer),await e}get mtu(){return t(this,jn,"f")}set mtu(e){s(this,jn,e,"f"),t(this,qn,"f")._mtu=e}}var ha,la,ua,fa,ga,da,ma,pa,va,wa,ya,ba,Sa,Ea,Ca,Ma,Da,ka,Ta,Wa,Ia,_a,La,Fa,Ua,xa,Ra,Aa,Oa,$a,Na,Ba,Pa,Va,za,ja,qa,Ga,Ha,Ja,Qa,Za,Ka,Xa,Ya,er,tr,sr,ir;Nn=new WeakMap,Pn=new WeakMap,jn=new WeakMap,qn=new WeakMap,On=new WeakSet,$n=function(){return this.eventDispatcher.dispatchEvent},Bn=function(e){na.assertEnumWithError(e,oa),t(this,Nn,"f")!=e?(s(this,Nn,e,"f"),na.log({firmwareStatus:t(this,Nn,"f")}),t(this,On,"a",$n).call(this,"firmwareStatus",{firmwareStatus:t(this,Nn,"f")})):na.log(`redundant firmwareStatus assignment "${e}"`)},Vn=function(){na.assertWithError(t(this,Pn,"f"),"didn't get imageState")},zn=function(e){na.assertTypeWithError(e,"number"),na.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},Gn=function(){t(this,qn,"f").onMessage(t(this,On,"m",Hn).bind(this)),t(this,qn,"f").onFileDownloadNext(t(this,On,"m",Jn)),t(this,qn,"f").onFileDownloadProgress(t(this,On,"m",Qn).bind(this)),t(this,qn,"f").onFileDownloadFinished(t(this,On,"m",Zn).bind(this)),t(this,qn,"f").onFileUploadNext(t(this,On,"m",Kn).bind(this)),t(this,qn,"f").onFileUploadProgress(t(this,On,"m",Xn).bind(this)),t(this,qn,"f").onFileUploadFinished(t(this,On,"m",Yn).bind(this)),t(this,qn,"f").onImageUploadNext(t(this,On,"m",ea).bind(this)),t(this,qn,"f").onImageUploadProgress(t(this,On,"m",ta).bind(this)),t(this,qn,"f").onImageUploadFinished(t(this,On,"m",sa).bind(this))},Hn=function({op:e,group:s,id:i,data:n,length:a}){switch(na.log("onMcuMessage",...arguments),s){case Dn:switch(i){case Wn:na.log(`echo "${n.r}"`);break;case In:na.table(n.tasks);break;case _n:na.log(n)}break;case kn:if(i===Fn)t(this,On,"m",ia).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},Jn=function(){na.log("onMcuFileDownloadNext",...arguments)},Qn=function(){na.log("onMcuFileDownloadProgress",...arguments)},Zn=function(){na.log("onMcuFileDownloadFinished",...arguments)},Kn=function(){na.log("onMcuFileUploadNext")},Xn=function(){na.log("onMcuFileUploadProgress")},Yn=function(){na.log("onMcuFileUploadFinished")},ea=function({packet:e}){na.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},ta=function({percentage:e}){const s=e/100;na.log("onMcuImageUploadProgress",...arguments),t(this,On,"a",$n).call(this,"firmwareUploadProgress",{progress:s})},sa=async function(){na.log("onMcuImageUploadFinished",...arguments),await this.getImages(),t(this,On,"a",$n).call(this,"firmwareUploadProgress",{progress:100}),t(this,On,"a",$n).call(this,"firmwareUploadComplete",{})},ia=function({images:e}){if(!e)return void na.log("no images found");s(this,Pn,e,"f"),na.log("images",t(this,Pn,"f"));let i="idle";2==t(this,Pn,"f").length&&(t(this,Pn,"f")[1].bootable?t(this,Pn,"f")[0].confirmed?t(this,Pn,"f")[1].pending?(na.log("reset to upload to the new firmware image"),i="pending"):(na.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(na.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):na.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==t(this,Pn,"f").length&&(t(this,Pn,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),na.log("Select a firmware upload image to upload to slot 1.")),t(this,On,"m",Bn).call(this,i),t(this,On,"a",$n).call(this,"firmwareImages",{firmwareImages:t(this,Pn,"f")})};const nr=T("Device",{log:!0}),ar=[...[...xi,"connectionStatus","isConnected"],...Ai,"connectionMessage",...Ps,...bs,...lt,...Le,...ls,...ra];class rr{get bluetoothId(){return t(this,da,"f")?.bluetoothId}constructor(){ha.add(this),fa.set(this,new W(this,ar)),da.set(this,void 0),this.sendTxMessages=t(this,ha,"m",ma).bind(this),pa.set(this,!1),Ca.set(this,la.ReconnectOnDisconnection),Ma.set(this,void 0),this.latestConnectionMessage=new Map,_a.set(this,new Ss),La.set(this,0),Ua.set(this,new Vs),xa.set(this,new It),Aa.set(this,la.ClearSensorConfigurationOnLeave),$a.set(this,new ut),Na.set(this,new pi),Ba.set(this,new Fe),Pa.set(this,new fs),Va.set(this,new ca),t(this,_a,"f").eventDispatcher=t(this,fa,"f"),t(this,Ua,"f").sendMessage=this.sendTxMessages,t(this,Ua,"f").eventDispatcher=t(this,fa,"f"),t(this,xa,"f").sendMessage=this.sendTxMessages,t(this,xa,"f").eventDispatcher=t(this,fa,"f"),t(this,$a,"f").eventDispatcher=t(this,fa,"f"),t(this,Na,"f").sendMessage=this.sendTxMessages,t(this,Pa,"f").sendMessage=this.sendTxMessages,t(this,Pa,"f").eventDispatcher=t(this,fa,"f"),t(this,Ba,"f").sendMessage=this.sendTxMessages,t(this,Ba,"f").eventDispatcher=t(this,fa,"f"),t(this,Va,"f").sendMessage=this.sendSmpMessage,t(this,Va,"f").eventDispatcher=t(this,fa,"f"),this.addEventListener("getMtu",(()=>{t(this,Va,"f").mtu=this.mtu,t(this,Ba,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),this.addEventListener("getType",(()=>{t(la,la,"f",ja)&&t(la,la,"m",Ka).call(la,this)})),n&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),a&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),this.addEventListener("isConnected",(()=>{t(la,la,"m",tr).call(la,this)}))}get addEventListener(){return t(this,fa,"f").addEventListener}get removeEventListener(){return t(this,fa,"f").removeEventListener}get waitForEvent(){return t(this,fa,"f").waitForEvent}get connectionManager(){return t(this,da,"f")}set connectionManager(e){this.connectionManager!=e?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0),e&&(e.onStatusUpdated=t(this,ha,"m",Da).bind(this),e.onMessageReceived=t(this,ha,"m",Ia).bind(this)),s(this,da,e,"f"),nr.log("assigned new connectionManager",t(this,da,"f"))):nr.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=t(la,la,"m",ua).call(la)),t(this,ha,"m",Wa).call(this),this.connectionManager.connect()}get isConnected(){return t(this,pa,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return t(this,ha,"m",Wa).call(this),this.connectionManager?.reconnect()}static get ReconnectOnDisconnection(){return t(this,la,"f",Ea)}static set ReconnectOnDisconnection(e){nr.assertTypeWithError(e,"boolean"),s(this,la,e,"f",Ea)}get reconnectOnDisconnection(){return t(this,Ca,"f")}set reconnectOnDisconnection(e){nr.assertTypeWithError(e,"boolean"),s(this,Ca,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return t(this,ha,"m",va).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(t(this,da,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"not connected":case"connecting":case"disconnecting":return t(this,da,"f").status;default:return"not connected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return t(this,_a,"f").information}get batteryLevel(){return t(this,La,"f")}get id(){return t(this,Ua,"f").id}get isCharging(){return t(this,Ua,"f").isCharging}get batteryCurrent(){return t(this,Ua,"f").batteryCurrent}async getBatteryCurrent(){await t(this,Ua,"f").getBatteryCurrent()}get name(){return t(this,Ua,"f").name}get setName(){return t(this,Ua,"f").setName}get type(){return t(this,Ua,"f").type}get setType(){return t(this,Ua,"f").setType}get isInsole(){return t(this,Ua,"f").isInsole}get insoleSide(){return t(this,Ua,"f").insoleSide}get mtu(){return t(this,Ua,"f").mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return this.sensorTypes.filter((e=>ct.includes(e)))}get sensorConfiguration(){return t(this,xa,"f").configuration}async setSensorConfiguration(e,s){await t(this,xa,"f").setConfiguration(e,s)}async clearSensorConfiguration(){return t(this,xa,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return t(this,la,"f",Ra)}static set ClearSensorConfigurationOnLeave(e){nr.assertTypeWithError(e,"boolean"),s(this,la,e,"f",Ra)}get clearSensorConfigurationOnLeave(){return t(this,Aa,"f")}set clearSensorConfigurationOnLeave(e){nr.assertTypeWithError(e,"boolean"),s(this,Aa,e,"f")}static get DefaultNumberOfPressureSensors(){return t(this,la,"f",Oa)}get numberOfPressureSensors(){return t(this,$a,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){t(this,$a,"f").pressureSensorDataManager.resetRange()}async triggerVibration(e,s){t(this,Na,"f").triggerVibration(e,s)}get maxFileLength(){return t(this,Ba,"f").maxLength}async sendFile(e,s){const i=this.waitForEvent("fileTransferComplete");t(this,Ba,"f").send(e,s),await i}async receiveFile(e){const s=this.waitForEvent("fileTransferComplete");t(this,Ba,"f").receive(e),await s}get fileTransferStatus(){return t(this,Ba,"f").status}cancelFileTransfer(){t(this,Ba,"f").cancel()}get tfliteName(){return t(this,Pa,"f").name}get setTfliteName(){return t(this,Pa,"f").setName}static get TfliteTasks(){return us}get tfliteTask(){return t(this,Pa,"f").task}get setTfliteTask(){return t(this,Pa,"f").setTask}get tfliteSampleRate(){return t(this,Pa,"f").sampleRate}get setTfliteSampleRate(){return t(this,Pa,"f").setSampleRate}get tfliteSensorTypes(){return t(this,Pa,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>fs.SensorTypes.includes(e)))}get setTfliteSensorTypes(){return t(this,Pa,"f").setSensorTypes}get tfliteIsReady(){return t(this,Pa,"f").isReady}get tfliteInferencingEnabled(){return t(this,Pa,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return t(this,Pa,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return t(this,Pa,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return t(this,Pa,"f").captureDelay}get setTfliteCaptureDelay(){return t(this,Pa,"f").setCaptureDelay}get tfliteThreshold(){return t(this,Pa,"f").threshold}get setTfliteThreshold(){return t(this,Pa,"f").setThreshold}sendSmpMessage(e){return t(this,da,"f").sendSmpMessage(e)}get uploadFirmware(){return t(this,Va,"f").uploadFirmware}async reset(){return await t(this,Va,"f").reset(),t(this,da,"f").disconnect()}get firmwareStatus(){return t(this,Va,"f").status}get getFirmwareImages(){return t(this,Va,"f").getImages}get firmwareImages(){return t(this,Va,"f").images}get eraseFirmwareImage(){return t(this,Va,"f").eraseImage}get confirmFirmwareImage(){return t(this,Va,"f").confirmImage}get testFirmwareImage(){return t(this,Va,"f").testImage}static get ConnectedDevices(){return t(this,la,"f",za)}static get UseLocalStorage(){return t(this,la,"f",ja)}static set UseLocalStorage(e){t(this,la,"m",Ha).call(this),nr.assertTypeWithError(e,"boolean"),s(this,la,e,"f",ja),t(this,la,"f",ja)&&!t(this,la,"f",Ga)&&t(this,la,"m",Za).call(this)}static get CanUseLocalStorage(){return n&&window.localStorage}static get AvailableDevices(){return t(this,la,"f",Xa)}static get CanGetDevices(){return n&&navigator.bluetooth?.getDevices&&!c}static async GetDevices(){if(!n)return void nr.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void nr.warn("bluetooth is not available in this browser");if(c)return void nr.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void nr.warn("bluetooth.getDevices() is not available in this browser");t(this,la,"f",Ga)||t(this,la,"m",Za).call(this);const e=t(this,la,"f",Ga);if(!e.devices||0==e.devices.length)return void nr.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return nr.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=e.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const a=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(a)return void(n&&n?.bluetoothId==a.bluetoothId&&n!=a&&(this.AvailableDevices[t(this,la,"f",Xa).indexOf(a)]=n));if(n)return void this.AvailableDevices.push(n);const r=new la,o=new pn;o.device=s,s.name&&t(r,Ua,"f").updateName(s.name),t(r,Ua,"f").updateType(i.type),r.connectionManager=o,this.AvailableDevices.push(r)})),t(this,la,"m",sr).call(this),this.AvailableDevices}static get AddEventListener(){return t(this,la,"f",Ya).addEventListener}static get RemoveEventListener(){return t(this,la,"f",Ya).removeEventListener}static async Connect(){const e=new la;return await e.connect(),e}}var or,cr,hr,lr,ur;la=rr,fa=new WeakMap,da=new WeakMap,pa=new WeakMap,Ca=new WeakMap,Ma=new WeakMap,_a=new WeakMap,La=new WeakMap,Ua=new WeakMap,xa=new WeakMap,Aa=new WeakMap,$a=new WeakMap,Na=new WeakMap,Ba=new WeakMap,Pa=new WeakMap,Va=new WeakMap,ha=new WeakSet,ua=function(){return new pn},ga=function(){return t(this,fa,"f").dispatchEvent},ma=async function(e,s){await(t(this,da,"f")?.sendTxMessages(e,s))},va=function(){nr.assertWithError(this.isConnected,"not connected")},ya=function(){return t(la,la,"f",wa)},ba=function(){return t(this,ha,"a",ya).every((e=>this.latestConnectionMessage.has(e)))},Sa=function(){const e=t(this,ha,"a",ya).map((e=>({type:e})));t(this,ha,"m",ma).call(this,e)},Da=function(e){if(nr.log({connectionStatus:e}),"not connected"==e?this.canReconnect&&this.reconnectOnDisconnection&&(nr.log("starting reconnect interval..."),s(this,Ma,setInterval((()=>{nr.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=t(this,Ma,"f")&&(nr.log("clearing reconnect interval"),clearInterval(t(this,Ma,"f")),s(this,Ma,void 0,"f")),t(this,ha,"m",Ta).call(this),"connected"!=e||t(this,pa,"f")||t(this,ha,"m",Sa).call(this),"not connected"==e&&!this.canReconnect&&t(la,la,"f",Xa).includes(this)){const e=t(la,la,"f",Xa).indexOf(this);la.AvailableDevices.splice(e,1),t(la,la,"m",sr).call(la)}},ka=function(e=!1){t(this,ha,"a",ga).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),t(this,ha,"a",ga).call(this,this.connectionStatus,{}),e&&t(this,ha,"a",ga).call(this,"isConnected",{isConnected:this.isConnected})},Ta=function(){switch(s(this,pa,Boolean(this.connectionManager?.isConnected)&&t(this,ha,"a",ba)&&t(this,Ua,"f").isCurrentTimeSet,"f"),this.connectionStatus){case"connected":t(this,pa,"f")&&t(this,ha,"m",ka).call(this,!0);break;case"not connected":t(this,ha,"m",ka).call(this,!0);break;default:t(this,ha,"m",ka).call(this,!1)}},Wa=function(){this.latestConnectionMessage.clear(),t(this,Ua,"f").clear(),t(this,_a,"f").clear()},Ia=function(e,s){if(nr.log({messageType:e,dataView:s}),"batteryLevel"===e){const e=s.getUint8(0);nr.log("received battery level",{batteryLevel:e}),t(this,ha,"m",Fa).call(this,e)}else if(Te.includes(e))t(this,Ba,"f").parseMessage(e,s);else if(hs.includes(e))t(this,Pa,"f").parseMessage(e,s);else if(ht.includes(e))t(this,$a,"f").parseMessage(e,s);else if(aa.includes(e))t(this,Va,"f").parseMessage(e,s);else if(ys.includes(e))t(this,_a,"f").parseMessage(e,s);else if(Bs.includes(e))t(this,Ua,"f").parseMessage(e,s);else{if(!Wt.includes(e))throw Error(`uncaught messageType ${e}`);t(this,xa,"f").parseMessage(e,s)}this.latestConnectionMessage.set(e,s),t(this,ha,"a",ga).call(this,"connectionMessage",{messageType:e,dataView:s}),!this.isConnected&&t(this,ha,"a",ba)&&t(this,ha,"m",Ta).call(this)},Fa=function(e){nr.assertTypeWithError(e,"number"),t(this,La,"f")!=e?(s(this,La,e,"f"),nr.log({updatedBatteryLevel:t(this,La,"f")}),t(this,ha,"a",ga).call(this,"batteryLevel",{batteryLevel:t(this,La,"f")})):nr.log(`duplicate batteryLevel assignment ${e}`)},Ha=function(){nr.assertWithError(n,"localStorage is only available in the browser"),nr.assertWithError(window.localStorage,"localStorage not found")},Qa=function(){t(this,la,"m",Ha).call(this),localStorage.setItem(t(this,la,"f",Ja),JSON.stringify(t(this,la,"f",Ga)))},Za=async function(){t(this,la,"m",Ha).call(this);let e=localStorage.getItem(t(this,la,"f",Ja));if("string"!=typeof e)return nr.log("no info found in localStorage"),s(this,la,Object.assign({},t(this,la,"f",qa)),"f",Ga),void t(this,la,"m",Qa).call(this);try{const t=JSON.parse(e);nr.log({configuration:t}),s(this,la,t,"f",Ga),this.CanGetDevices&&await this.GetDevices()}catch(e){nr.error(e)}},Ka=function(e){if("webBluetooth"!=e.connectionType)return void nr.log("localStorage is only for webBluetooth devices");t(this,la,"m",Ha).call(this);const s=t(this,la,"f",Ga).devices.findIndex((t=>t.bluetoothId==e.bluetoothId));-1!=s&&(t(this,la,"f",Ga).devices[s].type=e.type,t(this,la,"m",Qa).call(this))},er=function(){return t(this,la,"f",Ya).dispatchEvent},tr=function(e){if(e.isConnected)if(t(this,la,"f",za).includes(e))nr.log("device already included");else{if(nr.log("adding device",e),t(this,la,"f",za).push(e),this.UseLocalStorage&&"webBluetooth"==e.connectionType){const s={type:e.type,bluetoothId:e.bluetoothId},i=t(this,la,"f",Ga).devices.findIndex((e=>e.bluetoothId==s.bluetoothId));-1==i?t(this,la,"f",Ga).devices.push(s):t(this,la,"f",Ga).devices[i]=s,t(this,la,"m",Qa).call(this)}t(this,la,"a",er).call(this,"deviceConnected",{device:e}),t(this,la,"a",er).call(this,"deviceIsConnected",{device:e}),t(this,la,"m",ir).call(this)}else t(this,la,"f",za).includes(e)?(nr.log("removing device",e),t(this,la,"f",za).splice(t(this,la,"f",za).indexOf(e),1),t(this,la,"a",er).call(this,"deviceDisconnected",{device:e}),t(this,la,"a",er).call(this,"deviceIsConnected",{device:e}),t(this,la,"m",ir).call(this)):nr.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),e.isConnected&&!this.AvailableDevices.includes(e)){const s=this.AvailableDevices.find((t=>t.bluetoothId==e.bluetoothId));nr.log({existingAvailableDevice:s}),s?this.AvailableDevices[this.AvailableDevices.indexOf(s)]=e:this.AvailableDevices.push(e),t(this,la,"m",sr).call(this)}},sr=function(){nr.log({AvailableDevices:this.AvailableDevices}),t(this,la,"a",er).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},ir=function(){nr.log({ConnectedDevices:this.ConnectedDevices}),t(this,la,"a",er).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},wa={value:["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"]},Ea={value:!1},Ra={value:!0},Oa={value:8},za={value:[]},ja={value:!1},qa={value:{devices:[]}},Ga={value:void 0},Ja={value:"BS.Device"},Xa={value:[]},Ya={value:new W(la,["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"])},la.CanUseLocalStorage&&(la.UseLocalStorage=!0);const fr=T("DevicePairPressureSensorDataManager",{log:!0});class gr{constructor(){or.add(this),cr.set(this,{}),hr.set(this,new Ve)}resetPressureRange(){t(this,hr,"f").reset()}onDevicePressureData(e){const{pressure:s}=e.message,i=e.target.insoleSide;if(fr.log({pressure:s,insoleSide:i}),t(this,cr,"f")[i]=s,t(this,or,"a",lr))return t(this,or,"m",ur).call(this);fr.log("doesn't have all pressure data yet...")}}var dr;cr=new WeakMap,hr=new WeakMap,or=new WeakSet,lr=function(){return Ns.every((e=>e in t(this,cr,"f")))},ur=function(){const e={rawSum:0,normalizedSum:0};return Ns.forEach((s=>{e.rawSum+=t(this,cr,"f")[s].scaledSum,e.normalizedSum+=t(this,cr,"f")[s].normalizedSum})),e.normalizedSum>0&&(e.center={x:0,y:0},Ns.forEach((s=>{const i=t(this,cr,"f")[s],n=i.normalizedSum/e.normalizedSum;n>0&&(e.center.y+=i.normalizedCenter.y*n,"right"==s&&(e.center.x=n))})),e.normalizedCenter=t(this,hr,"f").updateAndGetNormalization(e.center)),fr.log({devicePairPressure:e}),e};const mr=T("DevicePairSensorDataManager",{log:!0}),pr=["pressure","sensorData"];class vr{constructor(){dr.set(this,{}),this.pressureSensorDataManager=new gr}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(e){const{timestamp:s,sensorType:i}=e.message;let n;if(mr.log({sensorType:i,timestamp:s,event:e}),t(this,dr,"f")[i]||(t(this,dr,"f")[i]={}),t(this,dr,"f")[i][e.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(e);else mr.log(`uncaught sensorType "${i}"`);if(n){const e=Object.assign({},t(this,dr,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:e,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:e,[i]:n})}else mr.log("no value received")}}var wr,yr,br,Sr,Er,Cr,Mr,Dr,kr,Tr,Wr,Ir,_r,Lr;dr=new WeakMap;const Fr=T("DevicePair",{log:!0});function Ur(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const xr=["isConnected",...pr,...ar.map((e=>Ur(e)))];class Rr{constructor(){wr.add(this),br.set(this,new W(this,xr)),Er.set(this,void 0),Cr.set(this,void 0),Dr.set(this,{connectionStatus:t(this,wr,"m",kr).bind(this),isConnected:t(this,wr,"m",Tr).bind(this),sensorData:t(this,wr,"m",_r).bind(this),getSensorConfiguration:t(this,wr,"m",kr).bind(this),getType:t(this,wr,"m",Wr).bind(this)}),Ir.set(this,new vr),t(this,Ir,"f").eventDispatcher=t(this,br,"f")}get addEventListener(){return t(this,br,"f").addEventListener}get removeEventListener(){return t(this,br,"f").removeEventListener}get waitForEvent(){return t(this,br,"f").waitForEvent}get left(){return t(this,Er,"f")}get right(){return t(this,Cr,"f")}get isConnected(){return Ns.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return Ns.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(e){if(!e.isInsole)return void Fr.warn("device is not an insole");const i=e.insoleSide,n=this[i];if(e!=n){switch(n&&Bi(n,t(this,Dr,"f")),Ni(e,t(this,Dr,"f")),i){case"left":s(this,Er,e,"f");break;case"right":s(this,Cr,e,"f")}return Fr.log(`assigned ${i} insole`,e),this.resetPressureRange(),t(this,wr,"a",Sr).call(this,"isConnected",{isConnected:this.isConnected}),t(this,wr,"a",Sr).call(this,"deviceIsConnected",{device:e,isConnected:e.isConnected,side:i}),n}Fr.log("device already assigned")}setSensorConfiguration(e){Ns.forEach((t=>{this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){t(this,Ir,"f").resetPressureRange()}async triggerVibration(e,t){const s=Ns.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return t(this,yr,"f",Lr)}}yr=Rr,br=new WeakMap,Er=new WeakMap,Cr=new WeakMap,Dr=new WeakMap,Ir=new WeakMap,wr=new WeakSet,Sr=function(){return t(this,br,"f").dispatchEvent},Mr=function(e){const s=Ns.some((s=>this[s]==e&&(Fr.log(`removing ${s} insole`,e),Bi(e,t(this,Dr,"f")),delete this[s],!0)));return s&&t(this,wr,"a",Sr).call(this,"isConnected",{isConnected:this.isConnected}),s},kr=function(e){const{type:s,target:i,message:n}=e;t(this,wr,"a",Sr).call(this,Ur(s),{...n,device:i,side:i.insoleSide})},Tr=function(e){t(this,wr,"m",kr).call(this,e),t(this,wr,"a",Sr).call(this,"isConnected",{isConnected:this.isConnected})},Wr=function(e){const{target:s}=e;if(this[s.insoleSide]==s)return;t(this,wr,"m",Mr).call(this,s)&&this.assignInsole(s)},_r=function(e){t(this,wr,"m",kr).call(this,e),this.isConnected&&t(this,Ir,"f").onDeviceSensorData(e)},Lr={value:new yr},rr.AddEventListener("deviceConnected",(e=>{const s=e.message.device;s.isInsole&&t(yr,yr,"f",Lr).assignInsole(s)}));const Ar=T("ServerUtils",{log:!1}),Or=["ping","pong","isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function $r(e,...t){Ar.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=V(...t.data),i=s.byteLength;Ar.assertEnumWithError(t.type,e);return V(e.indexOf(t.type),Uint16Array.from([i]),s)}));return Ar.log("messageBuffers",...s),V(...s)}function Nr(...e){return Ar.log("createServerMessage",...e),$r(Or,...e)}function Br(...e){return Ar.log("createClientDeviceMessage",...e),$r(Ai,...e)}Nr("ping"),Nr("pong"),Nr("isScanningAvailable"),Nr("isScanning"),Nr("startScan"),Nr("stopScan");const Pr=Nr("discoveredDevices");var Vr,zr,jr,qr,Gr,Hr,Jr,Qr;const Zr=T("WebSocketClientConnectionManager",{log:!0});class Kr extends Oi{constructor(){super(...arguments),Vr.add(this),jr.set(this,void 0),qr.set(this,!1)}static get isSupported(){return n}static get type(){return"webSocketClient"}get bluetoothId(){return t(this,jr,"f")}set bluetoothId(e){Zr.assertTypeWithError(e,"string"),t(this,jr,"f")!=e?s(this,jr,e,"f"):Zr.log("redundant bluetoothId assignment")}get isConnected(){return t(this,qr,"f")}set isConnected(e){Zr.assertTypeWithError(e,"boolean"),t(this,qr,"f")!=e?(s(this,qr,e,"f"),this.status=t(this,qr,"f")?"connected":"not connected",this.isConnected&&t(this,Vr,"m",Jr).call(this)):Zr.log("redundant newIsConnected assignment",e)}async connect(){await super.connect(),this.sendWebSocketConnectMessage()}async disconnect(){await super.disconnect(),this.sendWebSocketDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),Zr.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendWebSocketMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendWebSocketMessage({type:"tx",data:e})}onWebSocketMessage(e){Zr.log({dataView:e}),at(e,ar,t(this,Vr,"m",Qr).bind(this),null,!0)}}var Xr,Yr,eo,to,so,io,no,ao,ro,oo,co,ho,lo,uo,fo,go,mo,po,vo,wo,yo,bo,So,Eo,Co;zr=Kr,jr=new WeakMap,qr=new WeakMap,Vr=new WeakSet,Hr=function(){return t(zr,zr,"f",Gr)},Jr=function(){this.sendWebSocketMessage(...t(this,Vr,"a",Hr))},Qr=function(e,t){let s=0;switch(e){case"isConnected":const i=Boolean(t.getUint8(s++));Zr.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}},Gr={value:[...ys,"batteryLevel"]};const Mo=T("WebSocketClient",{log:!0}),Do=["not connected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class ko{constructor(){Xr.add(this),to.set(this,{}),so.set(this,new W(this,Do)),no.set(this,t(t(this,Xr,"a",eo),Yr,"f",io)),ao.set(this,"not connected"),this.pingTimer=new U(t(this,Xr,"m",oo).bind(this),3e7),ho.set(this,!1),go.set(this,!1),bo.set(this,{})}get devices(){return t(this,to,"f")}get addEventListener(){return t(this,so,"f").addEventListener}get dispatchEvent(){return t(this,so,"f").dispatchEvent}get removeEventListener(){return t(this,so,"f").removeEventListener}get waitForEvent(){return t(this,so,"f").waitForEvent}assertConnection(){Mo.assertWithError(this.isConnected,"not connected")}assertDisconnection(){Mo.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return t(this,Yr,"f",io)}static set ReconnectOnDisconnection(e){Mo.assertTypeWithError(e,"boolean"),s(this,Yr,e,"f",io)}get reconnectOnDisconnection(){return t(this,no,"f")}set reconnectOnDisconnection(e){Mo.assertTypeWithError(e,"boolean"),s(this,no,e,"f")}sendServerMessage(...e){this.sendMessage(Nr(...e))}get _connectionStatus(){return t(this,ao,"f")}set _connectionStatus(e){switch(Mo.assertTypeWithError(e,"string"),Mo.log({newConnectionStatus:e}),s(this,ao,e,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),e){case"connected":case"not connected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):(s(this,Xr,!1,"a",uo),s(this,Xr,!1,"a",po))}}get connectionStatus(){return this._connectionStatus}parseMessage(e){Mo.log("parseMessage",{dataView:e}),at(e,Or,t(this,Xr,"m",ro).bind(this),null,!0)}get isScanningAvailable(){return t(this,Xr,"a",lo)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return t(this,Xr,"a",mo)}startScan(){t(this,Xr,"m",yo).call(this),this.sendServerMessage("startScan")}stopScan(){t(this,Xr,"m",wo).call(this),this.sendServerMessage("stopScan")}toggleScan(){t(this,Xr,"m",fo).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return t(this,bo,"f")}onDiscoveredDevice(e){Mo.log({discoveredDevice:e}),t(this,bo,"f")[e.bluetoothId]=e,this.dispatchEvent("discoveredDevice",{discoveredDevice:e})}requestDiscoveredDevices(){this.sendMessage(Pr)}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(e){this.assertConnection(),Mo.assertTypeWithError(e,"string");const s=t(this,Xr,"m",Eo).call(this,e);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendMessage(this.createConnectToDeviceMessage(e))}createConnectToDeviceMessage(e){return Nr({type:"connectToDevice",data:e})}onConnectedBluetoothDeviceIds(e){Mo.log({bluetoothIds:e}),e.forEach((e=>{t(this,Xr,"m",Eo).call(this,e).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),Mo.assertTypeWithError(e,"string");const t=this.devices[e];return Mo.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(e){this.sendMessage(t(this,Xr,"m",Co).call(this,e))}sendDeviceMessage(e,...t){this.sendMessage(this.createDeviceMessage(e,...t))}createDeviceMessage(e,...t){return Nr({type:"deviceMessage",data:[e,Br(...t)]})}}var To,Wo,Io,_o,Lo,Fo,Uo;Yr=ko,to=new WeakMap,so=new WeakMap,no=new WeakMap,ao=new WeakMap,ho=new WeakMap,go=new WeakMap,bo=new WeakMap,Xr=new WeakSet,eo=function(){return this.constructor},ro=function(e,i){let n=0;switch(e){case"ping":t(this,Xr,"m",co).call(this);break;case"pong":break;case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));Mo.log({isScanningAvailable:e}),s(this,Xr,e,"a",uo)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));Mo.log({isScanning:e}),s(this,Xr,e,"a",po)}break;case"discoveredDevice":{const{string:e}=nt(i,n);Mo.log({discoveredDeviceString:e});const t=JSON.parse(e);Mo.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:e}=nt(i,n);t(this,Xr,"m",So).call(this,e)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=nt(i,n);Mo.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);Mo.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:e,byteOffset:s}=nt(i,n);n=s;const a=t(this,to,"f")[e];Mo.assertWithError(a,`no device found for id ${e}`);const r=a.connectionManager,o=j(i,n);r.onWebSocketMessage(o)}break;default:Mo.error(`uncaught messageType "${e}"`)}},oo=function(){this.sendServerMessage("ping")},co=function(){this.sendServerMessage("pong")},lo=function(){return t(this,ho,"f")},uo=function(e){Mo.assertTypeWithError(e,"boolean"),s(this,ho,e,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&t(this,Xr,"m",vo).call(this)},fo=function(){this.assertConnection(),Mo.assertWithError(this.isScanningAvailable,"scanning is not available")},mo=function(){return t(this,go,"f")},po=function(e){Mo.assertTypeWithError(e,"boolean"),s(this,go,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},vo=function(){this.sendServerMessage("isScanning")},wo=function(){Mo.assertWithError(this.isScanning,"is not scanning")},yo=function(){Mo.assertWithError(!this.isScanning,"is already scanning")},So=function(e){Mo.log({expiredBluetoothDeviceId:e});const s=t(this,bo,"f")[e];s?(Mo.log({expiredDiscoveredDevice:s}),delete t(this,bo,"f")[e],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):Mo.warn(`no discoveredDevice found with id "${e}"`)},Eo=function(e){let s=t(this,to,"f")[e];return s||(s=this.createDevice(e),t(this,to,"f")[e]=s),s},Co=function(e){return Nr({type:"disconnectFromDevice",data:e})},io={value:!0};const xo=T("WebSocketClient",{log:!0});Wo=new WeakMap,Io=new WeakMap,To=new WeakSet,_o=function(e){xo.log("webSocket.open",e),this.pingTimer.start(),this._connectionStatus="connected"},Lo=async function(e){xo.log("webSocket.message",e),this.pingTimer.restart();const t=await e.data.arrayBuffer(),s=new DataView(t);this.parseMessage(s)},Fo=function(e){xo.log("webSocket.close",e),this._connectionStatus="not connected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),this.pingTimer.stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},Uo=function(e){xo.error("webSocket.error",e.message)},e.Device=rr,e.DevicePair=Rr,e.Environment=y,e.WebSocketClient=class extends ko{constructor(){super(...arguments),To.add(this),Wo.set(this,void 0),Io.set(this,{open:t(this,To,"m",_o).bind(this),message:t(this,To,"m",Lo).bind(this),close:t(this,To,"m",Fo).bind(this),error:t(this,To,"m",Uo).bind(this)})}get webSocket(){return t(this,Wo,"f")}set webSocket(e){t(this,Wo,"f")!=e?(xo.log("assigning webSocket",e),t(this,Wo,"f")&&Bi(t(this,Wo,"f"),t(this,Io,"f")),Ni(e,t(this,Io,"f")),s(this,Wo,e,"f"),xo.log("assigned webSocket")):xo.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.webSocket=new WebSocket(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(e){this.assertConnection(),t(this,Wo,"f").send(e)}createDevice(e){const t=new rr,s=new Kr;return s.bluetoothId=e,s.sendWebSocketMessage=this.sendDeviceMessage.bind(this,e),s.sendWebSocketConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendWebSocketDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}},e.setAllConsoleLevelFlags=function(e){k.setAllLevelFlags(e)},e.setConsoleLevelFlagsForType=function(e,t){k.setLevelFlagsForType(e,t)}}));
