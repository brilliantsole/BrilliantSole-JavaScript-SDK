/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports):"function"==typeof define&&define.amd?define(["exports"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).BS={})}(this,(function(e){"use strict";function t(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function s(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const i=!0,n="undefined"!=typeof window&&void 0!==window?.document,a="undefined"!=typeof process&&null!=process?.versions?.node,r=n&&navigator.userAgent||"";let o=!1;n?o=Boolean(navigator.bluetooth):a&&(o=!0);const c=n&&/Bluefy/i.test(r),h=n&&/WebBLE/i.test(r),l=n&&/Android/i.test(r),u=n&&/Safari/i.test(r)&&!/Chrome/i.test(r),f=n&&/iPad|iPhone|iPod/i.test(r),g=n&&/Macintosh/i.test(r),d=!n&&!a&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var m,p,v,w,y=Object.freeze({__proto__:null,isAndroid:l,get isBluetoothSupported(){return o},isIOS:f,isInBluefy:c,isInBrowser:n,isInDev:i,isInLensStudio:d,isInNode:a,isInProduction:false,isInWebBLE:h,isMac:g,isSafari:u});if(d){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(w={}).log=e,w.warn=e.bind(w,"WARNING"),w.error=e.bind(w,"ERROR")}else w=console;if(!w.assert){const e=(e,...t)=>{e||w.warn(...t)};w.assert=e}if(!w.table){const e=(...e)=>{w.log(...e)};w.table=e}function b(){}const S=w.log.bind(w),E=w.warn.bind(w),C=w.error.bind(w),D=w.table.bind(w),M=w.assert.bind(w);class k{constructor(e){if(v.set(this,{log:i,warn:i,assert:!0,error:!0,table:!0}),t(m,m,"f",p)[e])throw new Error(`"${e}" console already exists`);t(m,m,"f",p)[e]=this}setLevelFlags(e){Object.assign(t(this,v,"f"),e)}static setLevelFlagsForType(e,s){if(!t(this,m,"f",p)[e])throw new Error(`no console found with type "${e}"`);t(this,m,"f",p)[e].setLevelFlags(s)}static setAllLevelFlags(e){for(const s in t(this,m,"f",p))t(this,m,"f",p)[s].setLevelFlags(e)}static create(e,s){const i=t(this,m,"f",p)[e]||new m(e);return s&&i.setLevelFlags(s),i}get log(){return t(this,v,"f").log?S:b}get warn(){return t(this,v,"f").warn?E:b}get error(){return t(this,v,"f").error?C:b}get assert(){return t(this,v,"f").assert?M:b}get table(){return t(this,v,"f").table?D:b}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function T(e,t){return k.create(e,t)}m=k,v=new WeakMap,p={value:{}};class W{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push({listener:t,once:s.once})}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((e=>e.listener!==t)))}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);if(!this.listeners[e])return;const s=this.listeners[e];s.forEach(((i,n)=>{i.listener({type:e,target:this.target,message:t}),i.once&&s.splice(n,1)}))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var I,_,L;const F=T("Timer",{log:!1});class U{get callback(){return t(this,I,"f")}set callback(e){F.assertTypeWithError(e,"function"),F.log({newCallback:e}),s(this,I,e,"f"),this.isRunning&&this.restart()}get interval(){return t(this,_,"f")}set interval(e){F.assertTypeWithError(e,"number"),F.assertWithError(e>0,"interval must be above 0"),F.log({newInterval:e}),s(this,_,e,"f"),this.isRunning&&this.restart()}constructor(e,t){I.set(this,void 0),_.set(this,void 0),L.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=t(this,L,"f")}start(){this.isRunning?F.log("interval already running"):(F.log("starting interval"),s(this,L,setInterval(t(this,I,"f"),t(this,_,"f")),"f"))}stop(){this.isRunning?(F.log("stopping interval"),clearInterval(t(this,L,"f")),s(this,L,void 0,"f")):F.log("interval already not running")}restart(){this.stop(),this.start()}}function x(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}I=new WeakMap,_=new WeakMap,L=new WeakMap,T("checksum",{log:!0});const R=new Uint32Array(256);for(let e=0;e<256;++e)R[e]=x(e);function A(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(R[i^n]^s>>>8)>>>0}return s}var O,$;O="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,$="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const N=new O,B=new $,P=T("ArrayBufferUtils",{log:!1});function V(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return z(e)}if(e instanceof Array){return V(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return z(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function z(e){const t=N.encode(e);return V(t.byteLength,t)}function j(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),P.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function q(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}var G,H,J,Q,Z,K,X,Y,ee,te,se,ie,ne,ae,re,oe,ce,he,le,ue,fe,ge,de,me,pe,ve,we,ye,be,Se,Ee,Ce,De,Me;const ke=T("FileTransferManager",{log:!0}),Te=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock"],We=["tflite"],Ie=["idle","sending","receiving"],_e=["startReceive","startSend","cancel"],Le=[...Te,"fileTransferProgress","fileTransferComplete","fileReceived"];class Fe{constructor(){G.add(this),ee.set(this,H.MaxLength),ne.set(this,void 0),ce.set(this,0),fe.set(this,0),ve.set(this,"idle"),Ee.set(this,[])}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return t(this,H,"f",Y)}get maxLength(){return t(this,ee,"f")}get type(){return t(this,ne,"f")}get length(){return t(this,ce,"f")}get checksum(){return t(this,fe,"f")}get status(){return t(this,ve,"f")}parseMessage(e,s){switch(ke.log({messageType:e}),e){case"maxFileLength":t(this,G,"m",te).call(this,s);break;case"getFileType":case"setFileType":t(this,G,"m",ae).call(this,s);break;case"getFileLength":case"setFileLength":t(this,G,"m",he).call(this,s);break;case"getFileChecksum":case"setFileChecksum":t(this,G,"m",ge).call(this,s);break;case"fileTransferStatus":t(this,G,"m",we).call(this,s);break;case"getFileBlock":t(this,G,"m",Ce).call(this,s);break;default:throw Error(`uncaught messageType ${e}`)}}async send(e,s){t(this,G,"m",be).call(this),t(this,G,"m",Q).call(this,e);const i=await q(s),n=[];n.push(t(this,G,"m",oe).call(this,e,!1));const a=i.byteLength;n.push(t(this,G,"m",ue).call(this,a,!1));const r=A(i);n.push(t(this,G,"m",me).call(this,r,!1)),n.push(t(this,G,"m",pe).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await t(this,G,"m",De).call(this,i)}async receive(e){t(this,G,"m",be).call(this),t(this,G,"m",Q).call(this,e),await t(this,G,"m",oe).call(this,e),await t(this,G,"m",pe).call(this,"startReceive")}async cancel(){t(this,G,"m",Se).call(this),await t(this,G,"m",pe).call(this,"cancel")}}H=Fe,ee=new WeakMap,ne=new WeakMap,ce=new WeakMap,fe=new WeakMap,ve=new WeakMap,Ee=new WeakMap,G=new WeakSet,J=function(){return this.eventDispatcher.dispatchEvent},Q=function(e){ke.assertEnumWithError(e,We)},Z=function(e){ke.assertWithError(e in We,`invalid typeEnum ${e}`)},K=function(e){ke.assertWithError(e in Ie,`invalid statusEnum ${e}`)},X=function(e){ke.assertEnumWithError(e,_e)},te=function(e){ke.log("parseFileMaxLength",e);const s=e.getUint32(0,!0);ke.log(`maxLength: ${s/1024}kB`),t(this,G,"m",se).call(this,s)},se=function(e){ke.log({maxLength:e}),s(this,ee,e,"f"),t(this,G,"a",J).call(this,"maxFileLength",{maxFileLength:e})},ie=function(e){ke.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},ae=function(e){ke.log("parseFileType",e);const s=e.getUint8(0);t(this,G,"m",Z).call(this,s);const i=We[s];t(this,G,"m",re).call(this,i)},re=function(e){ke.log({fileTransferType:e}),s(this,ne,e,"f"),t(this,G,"a",J).call(this,"getFileType",{fileType:e})},oe=async function(e,s){if(t(this,G,"m",Q).call(this,e),this.type==e)return void ke.log(`redundant type assignment ${e}`);const i=this.waitForEvent("getFileType"),n=We.indexOf(e);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},he=function(e){ke.log("parseFileLength",e);const s=e.getUint32(0,!0);t(this,G,"m",le).call(this,s)},le=function(e){ke.log(`length: ${e/1024}kB`),s(this,ce,e,"f"),t(this,G,"a",J).call(this,"getFileLength",{fileLength:e})},ue=async function(e,s){if(ke.assertTypeWithError(e,"number"),t(this,G,"m",ie).call(this,e),this.length==e)return void ke.log(`redundant length assignment ${e}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,e,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},ge=function(e){ke.log("checksum",e);const s=e.getUint32(0,!0);t(this,G,"m",de).call(this,s)},de=function(e){ke.log({checksum:e}),s(this,fe,e,"f"),t(this,G,"a",J).call(this,"getFileChecksum",{fileChecksum:e})},me=async function(e,t){if(ke.assertTypeWithError(e,"number"),this.checksum==e)return void ke.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},pe=async function(e,s){t(this,G,"m",X).call(this,e);const i=this.waitForEvent("fileTransferStatus"),n=_e.indexOf(e);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},we=function(e){ke.log("parseFileStatus",e);const s=e.getUint8(0);t(this,G,"m",K).call(this,s);const i=Ie[s];t(this,G,"m",ye).call(this,i)},ye=function(e){ke.log({status:e}),s(this,ve,e,"f"),t(this,G,"a",J).call(this,"fileTransferStatus",{fileTransferStatus:e}),t(this,Ee,"f").length=0},be=function(){ke.assertWithError("idle"==t(this,ve,"f"),"status is not idle")},Se=function(){ke.assertWithError("idle"!=t(this,ve,"f"),"status is idle")},Ce=async function(e){ke.log("parseFileBlock",e),t(this,Ee,"f").push(e.buffer);const s=t(this,Ee,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/t(this,ce,"f");if(ke.log(`received ${s} of ${t(this,ce,"f")} bytes (${100*i}%)`),t(this,G,"a",J).call(this,"fileTransferProgress",{progress:i}),s!=t(this,ce,"f"))return;ke.log("file transfer complete");let n,a=(new Date).toLocaleString();if("tflite"===this.type)a+=".tflite";n="undefined"!=typeof File?new File(t(this,Ee,"f"),a):new Blob(t(this,Ee,"f"));const r=A(await n.arrayBuffer());ke.log({checksum:r}),r==t(this,fe,"f")?(ke.log("received file",n),t(this,G,"a",J).call(this,"getFileBlock",{fileTransferBlock:e}),t(this,G,"a",J).call(this,"fileTransferComplete",{direction:"receiving"}),t(this,G,"a",J).call(this,"fileReceived",{file:n})):ke.error(`wrong checksum - expected ${t(this,fe,"f")}, got ${r}`)},De=async function(e){return t(this,G,"m",Me).call(this,e)},Me=async function e(s,i=0){if("sending"!=this.status)return;const n=s.slice(i,i+(this.mtu-3-3));ke.log("slicedBuffer",n);const a=1-(s.byteLength-i)/s.byteLength;if(ke.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*a}%)`),t(this,G,"a",J).call(this,"fileTransferProgress",{progress:a}),0!=n.byteLength)return this.sendMessage([{type:"setFileBlock",data:n}]),t(this,G,"m",e).call(this,s,i+n.byteLength);ke.log("finished sending buffer"),t(this,G,"a",J).call(this,"fileTransferComplete",{direction:"sending"})},Y={value:0};const Ue=65536;function xe(e,t){const s=Date.now();var i;return(i=s)-i%Ue+e.getUint16(t,!0)}var Re;const Ae={min:1/0,max:-1/0,range:0};class Oe{constructor(){Re.set(this,Object.assign({},Ae))}reset(){Object.assign(t(this,Re,"f"),Ae)}update(e){t(this,Re,"f").min=Math.min(e,t(this,Re,"f").min),t(this,Re,"f").max=Math.max(e,t(this,Re,"f").max),t(this,Re,"f").range=t(this,Re,"f").max-t(this,Re,"f").min}getNormalization(e){return t(this,Re,"f").range*e||0}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}var $e,Ne,Be,Pe;Re=new WeakMap;class Ve{constructor(){$e.set(this,{x:new Oe,y:new Oe})}reset(){t(this,$e,"f").x.reset(),t(this,$e,"f").y.reset()}update(e){t(this,$e,"f").x.update(e.x),t(this,$e,"f").y.update(e.y)}getNormalization(e){return{x:t(this,$e,"f").x.getNormalization(e.x),y:t(this,$e,"f").y.getNormalization(e.y)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}$e=new WeakMap;const ze=T("PressureDataManager",{log:!0}),je=["pressure"],qe=je;class Ge{constructor(){Ne.set(this,[]),Be.set(this,void 0),Pe.set(this,new Ve)}get positions(){return t(this,Ne,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const t=[];for(let s=0,i=0;i<e.byteLength;s++,i+=2)t.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;ze.log({positions:t}),s(this,Ne,t,"f"),s(this,Be,(i=this.numberOfSensors,n=()=>new Oe,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){t(this,Be,"f").forEach((e=>e.reset())),t(this,Pe,"f").reset()}parseData(e,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,a=0;a<e.byteLength;n++,a+=2){const r=e.getUint16(a,!0),o=r*s,c=t(this,Be,"f")[n].updateAndGetNormalization(o),h=this.positions[n];i.sensors[n]={rawValue:r,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=t(this,Pe,"f").updateAndGetNormalization(i.center)),ze.log({pressure:i}),i}}Ne=new WeakMap,Be=new WeakMap,Pe=new WeakMap;const He=T("MotionSensorDataManager",{log:!0}),Je=["still","walking","running","bicycle","vehicle","tilting"],Qe=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class Ze{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const a={x:s,y:i,z:n};return He.log({vector:a}),a}parseQuaternion(e,t){let[s,i,n,a]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const r={x:s,y:i,z:n,w:a};return He.log({quaternion:r}),r}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1;const a={heading:s,pitch:i,roll:n};return He.log({euler:a}),a}parseStepCounter(e){He.log("parseStepCounter",e);const t=e.getUint32(0,!0);return He.log({stepCount:t}),t}parseActivity(e){He.log("parseActivity",e);const t={},s=e.getUint8(0);return He.log("activityBitfield",s.toString(2)),Je.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),He.log("activity",t),t}parseDeviceOrientation(e){He.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=Qe[t];return He.assertWithError(s,"undefined deviceOrientation"),He.log({deviceOrientation:s}),s}}var Ke,Xe;const Ye=["barometer"],et=Ye,tt=T("BarometerSensorDataManager",{log:!0});class st{constructor(){Ke.add(this)}parseData(e,s){const i=e.getUint32(0,!0)*s,n=t(this,Ke,"m",Xe).call(this,i);return tt.log({pressure:i,altitude:n}),{pressure:i}}}Ke=new WeakSet,Xe=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const it=T("ParseUtils",{log:!0});function nt(e,t=0){const s=e.getUint8(t++);return{string:B.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function at(e,t,s,i,n=!1){let a=0;for(;a<e.byteLength;){const r=e.getUint8(a++);it.assertWithError(r in t,`invalid messageTypeEnum ${r}`);const o=t[r];let c;n?(c=e.getUint16(a,!0),a+=2):c=e.getUint8(a++),it.log({messageTypeEnum:r,messageType:o,messageLength:c,dataView:e,byteOffset:a});const h=j(e,a,c);it.log({_dataView:h}),s(o,h,i),a+=c}}const rt=T("SensorDataManager",{log:!0}),ot=["acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...je,...Ye],ct=["acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...qe,...et],ht=["getPressurePositions","getSensorScalars","sensorData"],lt=[...ht,...ot];class ut{constructor(){this.pressureSensorDataManager=new Ge,this.motionSensorDataManager=new Ze,this.barometerSensorDataManager=new st,this.scalars=new Map}static AssertValidSensorType(e){rt.assertEnumWithError(e,ot)}static AssertValidSensorTypeEnum(e){rt.assertTypeWithError(e,"number"),rt.assertWithError(e in ot,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(rt.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(e){for(let t=0;t<e.byteLength;t+=5){const s=e.getUint8(t),i=ot[s];if(!i){rt.warn(`unknown sensorType index ${s}`);continue}const n=e.getFloat32(t+1,!0);rt.log({sensorType:i,sensorScalar:n}),this.scalars.set(i,n)}}parseData(e){rt.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=xe(e,t);t+=2;at(new DataView(e.buffer,t),ot,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(e,t,{timestamp:s}){const i=this.scalars.get(e)||1;let n=null;switch(e){case"pressure":n=this.pressureSensorDataManager.parseData(t,i);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":n=this.motionSensorDataManager.parseVector3(t,i);break;case"gameRotation":case"rotation":n=this.motionSensorDataManager.parseQuaternion(t,i);break;case"orientation":n=this.motionSensorDataManager.parseEuler(t,i);break;case"stepCounter":n=this.motionSensorDataManager.parseStepCounter(t);break;case"stepDetector":n={};break;case"activity":n=this.motionSensorDataManager.parseActivity(t);break;case"deviceOrientation":n=this.motionSensorDataManager.parseDeviceOrientation(t);break;case"barometer":n=this.barometerSensorDataManager.parseData(t,i);break;default:rt.error(`uncaught sensorType "${e}"`)}rt.assertWithError(null!=n,`no sensorData defined for sensorType "${e}"`),rt.log({sensorType:e,sensorData:n}),this.dispatchEvent(e,{sensorType:e,[e]:n,timestamp:s}),this.dispatchEvent("sensorData",{sensorType:e,[e]:n,timestamp:s})}}var ft,gt,dt,mt,pt,vt,wt,yt,bt,St,Et,Ct,Dt,Mt,kt;const Tt=T("SensorConfigurationManager",{log:!0}),Wt=["getSensorConfiguration","setSensorConfiguration"];class It{constructor(){ft.add(this),mt.set(this,void 0),vt.set(this,void 0)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return t(this,vt,"f")}async setConfiguration(e,s){if(s&&(e=Object.assign({...this.zeroSensorConfiguration},e)),Tt.log({newSensorConfiguration:e}),t(this,ft,"m",yt).call(this,e))return void Tt.log("redundant sensor configuration");const i=t(this,ft,"m",Mt).call(this,e);Tt.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get MaxSensorRate(){return t(this,gt,"f",St)}get maxSensorRate(){return gt.MaxSensorRate}static get SensorRateStep(){return t(this,gt,"f",Et)}get sensorRateStep(){return gt.SensorRateStep}static get ZeroSensorConfiguration(){return t(this,gt,"f",kt)}get zeroSensorConfiguration(){const e={};return ot.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(e,s){switch(Tt.log({messageType:e}),e){case"getSensorConfiguration":case"setSensorConfiguration":const i=t(this,ft,"m",bt).call(this,s);t(this,ft,"m",wt).call(this,i);break;default:throw Error(`uncaught messageType ${e}`)}}}var _t,Lt,Ft,Ut,xt,Rt,At,Ot,$t,Nt,Bt,Pt,Vt,zt,jt,qt,Gt,Ht,Jt,Qt,Zt,Kt,Xt,Yt,es,ts,ss,is,ns,as;gt=It,mt=new WeakMap,vt=new WeakMap,ft=new WeakSet,dt=function(){return this.eventDispatcher.dispatchEvent},pt=function(e){Tt.assertWithError(t(this,mt,"f"),"must get initial sensorConfiguration");const s=t(this,mt,"f")?.includes(e);return Tt.assert(s,`unavailable sensor type "${e}"`),s},wt=function(e){s(this,vt,e,"f"),Tt.log({updatedConfiguration:t(this,vt,"f")}),t(this,ft,"a",dt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},yt=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},bt=function(e){const t={};for(let s=0;s<e.byteLength;s+=3){const i=e.getUint8(s),n=ot[i];if(!n){Tt.warn(`unknown sensorType index ${i}`);continue}const a=e.getUint16(s+1,!0);Tt.log({sensorType:n,sensorRate:a}),t[n]=a}return Tt.log({parsedSensorConfiguration:t}),s(this,mt,Object.keys(t),"f"),t},Ct=function(e){Tt.assertTypeWithError(e,"number"),Tt.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),Tt.assertWithError(e<this.MaxSensorRate,`sensorRate must be 0 or greater (got ${e})`),Tt.assertWithError(e%this.SensorRateStep==0,`sensorRate must be multiple of ${this.SensorRateStep}`)},Dt=function(e){t(gt,gt,"m",Ct).call(gt,e)},Mt=function(e){let s=Object.keys(e);s=s.filter((e=>t(this,ft,"m",pt).call(this,e)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{ut.AssertValidSensorType(s);const a=ot.indexOf(s);i.setUint8(3*n,a);const r=e[s];t(this,ft,"m",Dt).call(this,r),i.setUint16(3*n+1,r,!0)})),Tt.log({sensorConfigurationData:i}),i},St={value:65535},Et={value:5},kt={value:{}},ot.forEach((e=>{t(gt,gt,"f",kt)[e]=0}));const rs=T("TfliteManager",{log:!0}),os=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],cs=os,hs=["classification","regression"],ls=["pressure","linearAcceleration","gyroscope","magnetometer"];class us{constructor(){_t.add(this),xt.set(this,void 0),Ot.set(this,void 0),Bt.set(this,void 0),zt.set(this,[]),Gt.set(this,void 0),Zt.set(this,void 0),Yt.set(this,void 0),ss.set(this,void 0)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return t(this,xt,"f")}async setName(e,t){if(rs.assertTypeWithError(e,"string"),this.name==e)return void rs.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=N.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return t(this,Ot,"f")}async setTask(e,s){if(t(this,_t,"m",Lt).call(this,e),this.task==e)return void rs.log(`redundant task assignment ${e}`);const i=this.waitForEvent("getTfliteTask"),n=hs.indexOf(e);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return t(this,Bt,"f")}async setSampleRate(e,s){if(rs.assertTypeWithError(e,"number"),e-=e%It.SensorRateStep,rs.assertWithError(e>=It.SensorRateStep,`sampleRate must be multiple of ${It.SensorRateStep} greater than 0 (got ${e})`),t(this,Bt,"f")==e)return void rs.log(`redundant sampleRate assignment ${e}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,e,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static AssertValidSensorType(e){ut.AssertValidSensorType(e),rs.assertWithError(ls.includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return t(this,zt,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{us.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>ot.indexOf(e))).sort();rs.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return t(this,Gt,"f")}get captureDelay(){return t(this,Zt,"f")}async setCaptureDelay(e,s){if(rs.assertTypeWithError(e,"number"),t(this,Zt,"f")==e)return void rs.log(`redundant captureDelay assignment ${e}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,e,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return t(this,Yt,"f")}async setThreshold(e,s){if(rs.assertTypeWithError(e,"number"),rs.assertWithError(e>=0,`threshold must be positive (got ${e})`),t(this,Yt,"f")==e)return void rs.log(`redundant threshold assignment ${e}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,e,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return t(this,ss,"f")}async setInferencingEnabled(e,s=!0){if(rs.assertTypeWithError(e,"boolean"),!e&&!this.isReady)return;if(t(this,_t,"m",Qt).call(this),t(this,ss,"f")==e)return void rs.log(`redundant inferencingEnabled assignment ${e}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(e)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(e,s){switch(rs.log({messageType:e}),e){case"getTfliteName":case"setTfliteName":t(this,_t,"m",Rt).call(this,s);break;case"getTfliteTask":case"setTfliteTask":t(this,_t,"m",$t).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":t(this,_t,"m",Pt).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":t(this,_t,"m",jt).call(this,s);break;case"tfliteIsReady":t(this,_t,"m",Ht).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":t(this,_t,"m",Kt).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":t(this,_t,"m",es).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":t(this,_t,"m",is).call(this,s);break;case"tfliteInference":t(this,_t,"m",as).call(this,s);break;default:throw Error(`uncaught messageType ${e}`)}}}var fs,gs,ds,ms,ps;xt=new WeakMap,Ot=new WeakMap,Bt=new WeakMap,zt=new WeakMap,Gt=new WeakMap,Zt=new WeakMap,Yt=new WeakMap,ss=new WeakMap,_t=new WeakSet,Lt=function(e){rs.assertEnumWithError(e,hs)},Ft=function(e){rs.assertWithError(e in hs,`invalid taskEnum ${e}`)},Ut=function(){return this.eventDispatcher.dispatchEvent},Rt=function(e){rs.log("parseName",e);const s=B.decode(e.buffer);t(this,_t,"m",At).call(this,s)},At=function(e){rs.log({name:e}),s(this,xt,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteName",{tfliteName:e})},$t=function(e){rs.log("parseTask",e);const s=e.getUint8(0);t(this,_t,"m",Ft).call(this,s);const i=hs[s];t(this,_t,"m",Nt).call(this,i)},Nt=function(e){rs.log({task:e}),s(this,Ot,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteTask",{tfliteTask:e})},Pt=function(e){rs.log("parseSampleRate",e);const s=e.getUint16(0,!0);t(this,_t,"m",Vt).call(this,s)},Vt=function(e){rs.log({sampleRate:e}),s(this,Bt,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteSampleRate",{tfliteSampleRate:e})},jt=function(e){rs.log("parseSensorTypes",e);const s=[];for(let t=0;t<e.byteLength;t++){const i=e.getUint8(t),n=ot[i];n?s.push(n):rs.error(`invalid sensorTypeEnum ${i}`)}t(this,_t,"m",qt).call(this,s)},qt=function(e){rs.log({sensorTypes:e}),s(this,zt,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:e})},Ht=function(e){rs.log("parseIsReady",e);const s=Boolean(e.getUint8(0));t(this,_t,"m",Jt).call(this,s)},Jt=function(e){rs.log({isReady:e}),s(this,Gt,e,"f"),t(this,_t,"a",Ut).call(this,"tfliteIsReady",{tfliteIsReady:e})},Qt=function(){rs.assertWithError(this.isReady,"tflite is not ready")},Kt=function(e){rs.log("parseCaptureDelay",e);const s=e.getUint16(0,!0);t(this,_t,"m",Xt).call(this,s)},Xt=function(e){rs.log({captureDelay:e}),s(this,Zt,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:e})},es=function(e){rs.log("parseThreshold",e);const s=e.getFloat32(0,!0);t(this,_t,"m",ts).call(this,s)},ts=function(e){rs.log({threshold:e}),s(this,Yt,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteThreshold",{tfliteThreshold:e})},is=function(e){rs.log("parseInferencingEnabled",e);const s=Boolean(e.getUint8(0));t(this,_t,"m",ns).call(this,s)},ns=function(e){rs.log({inferencingEnabled:e}),s(this,ss,e,"f"),t(this,_t,"a",Ut).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:e})},as=function(e){rs.log("parseInference",e);const s=xe(e,0);rs.log({timestamp:s});const i=[];for(let t=0,s=2;s<e.byteLength;t++,s+=4){const t=e.getFloat32(s,!0);i.push(t)}rs.log("values",i);const n={timestamp:s,values:i};t(this,_t,"a",Ut).call(this,"tfliteInference",{tfliteInference:n})};const vs=T("DeviceInformationManager",{log:!0}),ws=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],ys=[...ws,"deviceInformation"];class bs{constructor(){fs.add(this),ds.set(this,{})}get information(){return t(this,ds,"f")}clear(){s(this,ds,{},"f")}parseMessage(e,s){switch(vs.log({messageType:e}),e){case"manufacturerName":const i=B.decode(s.buffer);vs.log({manufacturerName:i}),t(this,fs,"m",ps).call(this,{manufacturerName:i});break;case"modelNumber":const n=B.decode(s.buffer);vs.log({modelNumber:n}),t(this,fs,"m",ps).call(this,{modelNumber:n});break;case"softwareRevision":const a=B.decode(s.buffer);vs.log({softwareRevision:a}),t(this,fs,"m",ps).call(this,{softwareRevision:a});break;case"hardwareRevision":const r=B.decode(s.buffer);vs.log({hardwareRevision:r}),t(this,fs,"m",ps).call(this,{hardwareRevision:r});break;case"firmwareRevision":const o=B.decode(s.buffer);vs.log({firmwareRevision:o}),t(this,fs,"m",ps).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),vs.log({pnpId:c}),t(this,fs,"m",ps).call(this,{pnpId:c});break;case"serialNumber":const h=B.decode(s.buffer);vs.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${e}`)}}}var Ss,Es,Cs,Ds,Ms,ks,Ts,Ws,Is,_s,Ls,Fs,Us,xs,Rs;ds=new WeakMap,fs=new WeakSet,gs=function(){return this.eventDispatcher.dispatchEvent},ms=function(){return ws.every((e=>e in t(this,ds,"f")))},ps=function(e){vs.log({partialDeviceInformation:e});Object.keys(e).forEach((s=>{t(this,fs,"a",gs).call(this,s,{[s]:e[s]})})),Object.assign(t(this,ds,"f"),e),vs.log({deviceInformation:t(this,ds,"f")}),t(this,fs,"a",ms)&&(vs.log("completed deviceInformation"),t(this,fs,"a",gs).call(this,"deviceInformation",{deviceInformation:this.information}))};const As=T("InformationManager",{log:!0}),Os=["leftInsole","rightInsole"],$s=["left","right"],Ns=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],Bs=Ns;class Ps{constructor(){Ss.add(this),Cs.set(this,!1),Ds.set(this,void 0),Ms.set(this,void 0),ks.set(this,""),Ts.set(this,void 0),Ls.set(this,0),Us.set(this,!1)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return t(this,Cs,"f")}updateIsCharging(e){As.assertTypeWithError(e,"boolean"),s(this,Cs,e,"f"),As.log({isCharging:t(this,Cs,"f")}),t(this,Ss,"a",Es).call(this,"isCharging",{isCharging:t(this,Cs,"f")})}get batteryCurrent(){return t(this,Ds,"f")}async getBatteryCurrent(){As.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}updateBatteryCurrent(e){As.assertTypeWithError(e,"number"),s(this,Ds,e,"f"),As.log({batteryCurrent:t(this,Ds,"f")}),t(this,Ss,"a",Es).call(this,"getBatteryCurrent",{batteryCurrent:t(this,Ds,"f")})}get id(){return t(this,Ms,"f")}updateId(e){As.assertTypeWithError(e,"string"),s(this,Ms,e,"f"),As.log({id:t(this,Ms,"f")}),t(this,Ss,"a",Es).call(this,"getId",{id:t(this,Ms,"f")})}get name(){return t(this,ks,"f")}updateName(e){As.assertTypeWithError(e,"string"),s(this,ks,e,"f"),As.log({updatedName:t(this,ks,"f")}),t(this,Ss,"a",Es).call(this,"getName",{name:t(this,ks,"f")})}static get MinNameLength(){return 2}get minNameLength(){return Ps.MinNameLength}static get MaxNameLength(){return 30}get maxNameLength(){return Ps.MaxNameLength}async setName(e){As.assertTypeWithError(e,"string"),As.assertWithError(e.length>=this.minNameLength,`name must be greater than ${this.minNameLength} characters long ("${e}" is ${e.length} characters long)`),As.assertWithError(e.length<this.maxNameLength,`name must be less than ${this.maxNameLength} characters long ("${e}" is ${e.length} characters long)`);const t=N.encode(e);As.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return t(this,Ts,"f")}get typeEnum(){return Os.indexOf(this.type)}updateType(e){t(this,Ss,"m",Ws).call(this,e),e!=this.type?(s(this,Ts,e,"f"),As.log({updatedType:t(this,Ts,"f")}),t(this,Ss,"a",Es).call(this,"getType",{type:t(this,Ts,"f")})):As.log("redundant type assignment")}async setType(e){t(this,Ss,"m",Ws).call(this,e);const s=Os.indexOf(e);t(this,Ss,"m",_s).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return t(this,Ls,"f")}get isCurrentTimeSet(){return t(this,Us,"f")}parseMessage(e,s){switch(As.log({messageType:e}),e){case"isCharging":const i=Boolean(s.getUint8(0));As.log({isCharging:i}),this.updateIsCharging(i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);As.log({batteryCurrent:n}),this.updateBatteryCurrent(n);break;case"getId":const a=B.decode(s.buffer);As.log({id:a}),this.updateId(a);break;case"getName":case"setName":const r=B.decode(s.buffer);As.log({name:r}),this.updateName(r);break;case"getType":case"setType":const o=s.getUint8(0),c=Os[o];As.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);As.log({mtu:h}),t(this,Ss,"m",Fs).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));t(this,Ss,"m",xs).call(this,l);break;default:throw Error(`uncaught messageType ${e}`)}}clear(){s(this,Us,!1,"f")}}Cs=new WeakMap,Ds=new WeakMap,Ms=new WeakMap,ks=new WeakMap,Ts=new WeakMap,Ls=new WeakMap,Us=new WeakMap,Ss=new WeakSet,Es=function(){return this.eventDispatcher.dispatchEvent},Ws=function(e){As.assertEnumWithError(e,Os)},Is=function(e){As.assertTypeWithError(e,"number"),As.assertWithError(e in Os,`invalid typeEnum ${e}`)},_s=async function(e){t(this,Ss,"m",Is).call(this,e);const s=Uint8Array.from([e]);As.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Fs=function(e){As.assertTypeWithError(e,"number"),t(this,Ls,"f")!=e?(s(this,Ls,e,"f"),t(this,Ss,"a",Es).call(this,"getMtu",{mtu:t(this,Ls,"f")})):As.log("redundant mtu assignment",e)},xs=function(e){As.log({currentTime:e}),s(this,Us,0!=e,"f"),t(this,Us,"f")||t(this,Ss,"m",Rs).call(this)},Rs=async function(){As.log("setting current time...");const e=new DataView(new ArrayBuffer(8));e.setBigUint64(0,BigInt(Date.now()),!0);const t=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:e.buffer}]),await t};const Vs=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var zs,js,qs,Gs,Hs,Js,Qs,Zs,Ks,Xs,Ys,ei,ti,si,ii,ni,ai,ri,oi,ci,hi,li,ui;const fi=T("VibrationManager"),gi=["front","rear"],di=["waveformEffect","waveform"];class mi{constructor(){zs.add(this)}static get MaxWaveformEffectSegmentDelay(){return t(this,js,"f",Zs)}get maxWaveformEffectSegmentDelay(){return js.MaxWaveformEffectSegmentDelay}static get MaxWaveformEffectSegmentLoopCount(){return t(this,js,"f",Xs)}get maxWaveformEffectSegmentLoopCount(){return js.MaxWaveformEffectSegmentLoopCount}static get MaxNumberOfWaveformEffectSegments(){return t(this,js,"f",ei)}get maxNumberOfWaveformEffectSegments(){return js.MaxNumberOfWaveformEffectSegments}static get MaxWaveformEffectSequenceLoopCount(){return t(this,js,"f",si)}get maxWaveformEffectSequenceLoopCount(){return js.MaxWaveformEffectSequenceLoopCount}static get MaxWaveformSegmentDuration(){return t(this,js,"f",ni)}get maxWaveformSegmentDuration(){return js.MaxWaveformSegmentDuration}static get MaxNumberOfWaveformSegments(){return t(this,js,"f",ri)}get maxNumberOfWaveformSegments(){return js.MaxNumberOfWaveformSegments}async triggerVibration(e,s=!0){let i;e.forEach((e=>{const{type:s}=e;let n,{locations:a}=e;switch(a=a||gi.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=e;n=t(this,zs,"m",ci).call(this,a,s,i)}break;case"waveform":{const{segments:s}=e;n=t(this,zs,"m",hi).call(this,a,s)}break;default:throw Error(`invalid vibration type "${s}"`)}fi.log({type:s,arrayBuffer:n}),i=V(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var pi,vi,wi,yi,bi,Si,Ei,Ci,Di,Mi,ki,Ti,Wi,Ii,_i,Li;js=mi,zs=new WeakSet,qs=function(e){fi.assertTypeWithError(e,"string"),fi.assertWithError(gi.includes(e),`invalid location "${e}"`)},Gs=function(e){t(this,zs,"m",Js).call(this,e),e.forEach((e=>{t(this,zs,"m",qs).call(this,e)}))},Hs=function(e){t(this,zs,"m",Gs).call(this,e);let s=0;return e.forEach((e=>{const t=gi.indexOf(e);s|=1<<t})),fi.log({locationsBitmask:s}),fi.assertWithError(s>0,"locationsBitmask must not be zero"),s},Js=function(e){fi.assertWithError(Array.isArray(e),"passed non-array"),fi.assertWithError(e.length>0,"passed empty array")},Qs=function(e){fi.assertWithError(Vs.includes(e),`invalid waveformEffect "${e}"`)},Ks=function(e){if(null!=e.effect){const s=e.effect;t(this,zs,"m",Qs).call(this,s)}else{if(null==e.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:t}=e;fi.assertWithError(t>=0,`delay must be 0ms or greater (got ${t})`),fi.assertWithError(t<=this.maxWaveformEffectSegmentDelay,`delay must be ${this.maxWaveformEffectSegmentDelay}ms or less (got ${t})`)}}if(null!=e.loopCount){const{loopCount:s}=e;t(this,zs,"m",Ys).call(this,s)}},Ys=function(e){fi.assertTypeWithError(e,"number"),fi.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),fi.assertWithError(e<=this.maxWaveformEffectSegmentLoopCount,`waveformEffectSegmentLoopCount must be ${this.maxWaveformEffectSegmentLoopCount} or fewer (got ${e})`)},ti=function(e){t(this,zs,"m",Js).call(this,e),fi.assertWithError(e.length<=this.maxNumberOfWaveformEffectSegments,`must have ${this.maxNumberOfWaveformEffectSegments} waveformEffectSegments or fewer (got ${e.length})`),e.forEach((e=>{t(this,zs,"m",Ks).call(this,e)}))},ii=function(e){fi.assertTypeWithError(e,"number"),fi.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),fi.assertWithError(e<=this.maxWaveformEffectSequenceLoopCount,`waveformEffectSequenceLoopCount must be ${this.maxWaveformEffectSequenceLoopCount} or fewer (got ${e})`)},ai=function(e){fi.assertTypeWithError(e.amplitude,"number"),fi.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),fi.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),fi.assertTypeWithError(e.duration,"number"),fi.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),fi.assertWithError(e.duration<=this.maxWaveformSegmentDuration,`duration must be ${this.maxWaveformSegmentDuration}ms or less (got ${e.duration}ms)`)},oi=function(e){t(this,zs,"m",Js).call(this,e),fi.assertWithError(e.length<=this.maxNumberOfWaveformSegments,`must have ${this.maxNumberOfWaveformSegments} waveformSegments or fewer (got ${e.length})`),e.forEach((e=>{t(this,zs,"m",ai).call(this,e)}))},ci=function(e,s,i=0){t(this,zs,"m",ti).call(this,s),t(this,zs,"m",ii).call(this,i);let n=[],a=0;const r=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||r&&e<this.maxNumberOfWaveformEffectSegments;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[a++]=Vs.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[a++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<this.maxNumberOfWaveformEffectSegments;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[a]=0);const i=e%4*2;n[a]|=t<<i,3!=e&&7!=e||a++}0!=i&&(n[a++]=i);const c=new DataView(Uint8Array.from(n).buffer);return fi.log({dataArray:n,dataView:c}),t(this,zs,"m",ui).call(this,e,"waveformEffect",c)},hi=function(e,s){t(this,zs,"m",oi).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),fi.log({dataView:i}),t(this,zs,"m",ui).call(this,e,"waveform",i)},li=function(e){fi.assertTypeWithError(e,"string"),fi.assertWithError(di.includes(e),`invalid vibrationType "${e}"`)},ui=function(e,s,i){fi.assertWithError(i?.byteLength>0,"no data received");const n=t(this,zs,"m",Hs).call(this,e);t(this,zs,"m",li).call(this,s);const a=di.indexOf(s);fi.log({locationsBitmask:n,vibrationTypeIndex:a,dataView:i});const r=V(n,a,i.byteLength,i);return fi.log({data:r}),r},Zs={value:1270},Xs={value:3},ei={value:8},si={value:6},ni={value:2550},ri={value:20};const Fi=T("BaseConnectionManager",{log:!0}),Ui=["not connected","connecting","connected","disconnecting"],xi=[...Ns,...Wt,...ht,"triggerVibration",...os,...Te],Ri=[...ws,"batteryLevel","smp","rx","tx",...xi];class Ai{static get isSupported(){return!1}get isSupported(){return t(this,pi,"a",yi).isSupported}get type(){return t(this,pi,"a",yi).type}constructor(){pi.add(this),Ei.set(this,"not connected"),Wi.set(this,[]),_i.set(this,new U(t(this,pi,"m",Li).bind(this),5e3)),t(this,pi,"m",Si).call(this),t(this,pi,"m",bi).call(this),this.sendSmpMessage=this.sendSmpMessage.bind(this)}get status(){return t(this,Ei,"f")}set status(e){Fi.assertEnumWithError(e,Ui),t(this,Ei,"f")!=e?(Fi.log(`new connection status "${e}"`),s(this,Ei,e,"f"),this.onStatusUpdated(this.status),this.isConnected?t(this,_i,"f").start():t(this,_i,"f").stop(),"not connected"==t(this,Ei,"f")&&(this.mtu=void 0)):Fi.log(`tried to assign same connection status "${e}"`)}get isConnected(){return"connected"==this.status}async connect(){t(this,pi,"m",Ci).call(this),t(this,pi,"m",Di).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){t(this,pi,"m",Ci).call(this),t(this,pi,"m",Di).call(this),Fi.assert(this.canReconnect,"unable to reconnect")}async disconnect(){t(this,pi,"m",Mi).call(this),t(this,pi,"m",ki).call(this),this.status="disconnecting",Fi.log("disconnecting from device...")}async sendSmpMessage(e){t(this,pi,"m",Ti).call(this),Fi.log("sending smp message",e)}async sendTxMessages(e,s=!0){if(t(this,pi,"m",Ti).call(this),e&&t(this,Wi,"f").push(...e),!s)return;Fi.log("sendTxMessages",t(this,Wi,"f").slice());const i=t(this,Wi,"f").map((e=>{t(vi,vi,"m",wi).call(vi,e.type);const s=xi.indexOf(e.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,e.data?.byteLength||0,!0),V(s,i,e.data)}));if(this.mtu)for(;i.length>0;){let e=0,t=0;i.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=i.splice(0,t);Fi.log({arrayBufferCount:t,arrayBuffersToSend:s});const n=V(...s);Fi.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=V(...i);Fi.log("sending arrayBuffer",e),await this.sendTxData(e)}t(this,Wi,"f").length=0}async sendTxData(e){Fi.log("sendTxData",e)}parseRxMessage(e){at(e,xi,t(this,pi,"m",Ii).bind(this),null,!0)}}vi=Ai,Ei=new WeakMap,Wi=new WeakMap,_i=new WeakMap,pi=new WeakSet,wi=function(e){Fi.assertEnumWithError(e,xi)},yi=function(){return this.constructor},bi=function(){Fi.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Si=function(){Fi.assertWithError(this.constructor!=vi,`${this.constructor.name} must be subclassed`)},Ci=function(){Fi.assertWithError(!this.isConnected,"device is already connected")},Di=function(){Fi.assertWithError("connecting"!=this.status,"device is already connecting")},Mi=function(){Fi.assertWithError(this.isConnected,"device is not connected")},ki=function(){Fi.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Ti=function(){t(this,pi,"m",Mi).call(this),t(this,pi,"m",ki).call(this)},Ii=function(e,t){Fi.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Li=function(){this.isConnected||(Fi.log("timer detected disconnection"),this.status="not connected")};const Oi=T("EventUtils",{log:!1});function $i(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;Oi.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function Ni(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;Oi.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Bi=T("bluetoothUUIDs",{log:!1});if(n)var Pi=window.BluetoothUUID;function Vi(e){return Bi.assertTypeWithError(e,"string"),Bi.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function zi(e){return Pi?.getCharacteristic?.(e)}function ji(e){return Pi?.getService?.(e)}const qi=Object.freeze({services:{deviceInformation:{uuid:ji("device_information"),characteristics:{manufacturerName:{uuid:zi("manufacturer_name_string")},modelNumber:{uuid:zi("model_number_string")},hardwareRevision:{uuid:zi("hardware_revision_string")},firmwareRevision:{uuid:zi("firmware_revision_string")},softwareRevision:{uuid:zi("software_revision_string")},pnpId:{uuid:zi("pnp_id")},serialNumber:{uuid:zi("serial_number_string")}}},battery:{uuid:ji("battery_service"),characteristics:{batteryLevel:{uuid:zi("battery_level")}}},main:{uuid:Vi("0000"),characteristics:{rx:{uuid:Vi("1000")},tx:{uuid:Vi("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),Gi=[qi.services.main.uuid],Hi=[qi.services.deviceInformation.uuid,qi.services.battery.uuid,qi.services.smp.uuid];function Ji(e){e=e.toString().toLowerCase();return Object.keys(qi.services).find((t=>{let s=qi.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const Qi=[],Zi=[];function Ki(e){var t;return e=e.toString().toLowerCase(),Object.values(qi.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function Xi(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}switch(e){case"tx":case"smp":t.writeWithoutResponse=!0}return t}Object.values(qi.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];Gi.includes(e.uuid)&&(Qi.push(i.uuid),t.push(s)),Zi.push(i.uuid)}))}),[]);const Yi=T("BluetoothConnectionManager",{log:!0});class en extends Ai{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){Yi.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var tn,sn,nn,an,rn,on,cn,hn,ln,un,fn;const gn=T("WebBluetoothConnectionManager",{log:!0});var dn;n&&(dn=window.navigator.bluetooth);class mn extends en{constructor(){super(...arguments),tn.add(this),sn.set(this,{characteristicvaluechanged:t(this,tn,"m",ln).bind(this)}),nn.set(this,{gattserverdisconnected:t(this,tn,"m",fn).bind(this)}),an.set(this,void 0),rn.set(this,new Map),on.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(dn)}static get type(){return"webBluetooth"}get device(){return t(this,an,"f")}set device(e){t(this,an,"f")!=e?(t(this,an,"f")&&Ni(t(this,an,"f"),t(this,nn,"f")),e&&$i(e,t(this,nn,"f")),s(this,an,e,"f")):gn.log("tried to assign the same BluetoothDevice")}get server(){return t(this,an,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const e=await dn.requestDevice({filters:[{services:Gi}],optionalServices:n?Hi:[]});gn.log("got BluetoothDevice"),this.device=e,gn.log("connecting to device...");const s=await this.server.connect();gn.log(`connected to device? ${s.connected}`),await t(this,tn,"m",cn).call(this),gn.log("fully connected"),this.status="connected"}catch(e){gn.error(e),this.status="not connected",this.server?.disconnect(),t(this,tn,"m",hn).call(this)}}async disconnect(){await t(this,tn,"m",hn).call(this),await super.disconnect(),this.server?.disconnect(),this.status="not connected"}async writeCharacteristic(e,s){super.writeCharacteristic(e,s);const i=t(this,on,"f").get(e);gn.assertWithError(i,`${e} characteristic not found`),gn.log("writing characteristic",i,s);const n=i.properties||Xi(e);n.writeWithoutResponse?(gn.log("writing without response"),await i.writeValueWithoutResponse(s)):(gn.log("writing with response"),await i.writeValueWithResponse(s)),gn.log("wrote characteristic"),n.read&&!n.notify&&(gn.log("reading value after write..."),await i.readValue(),(c||h)&&t(this,tn,"m",un).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),gn.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){gn.error(e),this.isInRange=!1}this.isConnected?(gn.log("successfully reconnected!"),await t(this,tn,"m",cn).call(this),this.status="connected"):(gn.log("unable to reconnect"),this.status="not connected")}}sn=new WeakMap,nn=new WeakMap,an=new WeakMap,rn=new WeakMap,on=new WeakMap,tn=new WeakSet,cn=async function(){t(this,tn,"m",hn).call(this),gn.log("getting services...");const e=await this.server.getPrimaryServices();gn.log("got services",e.length),await this.server.getPrimaryService("8d53dc1d-1db7-4cd3-868b-8a527460aa84"),gn.log("getting characteristics...");for(const s in e){const i=e[s];gn.log({service:i});const n=Ji(i.uuid);gn.assertWithError(n,`no name found for service uuid "${i.uuid}"`),gn.log(`got "${n}" service`),i.name=n,t(this,rn,"f").set(n,i),gn.log(`getting characteristics for "${n}" service`);const a=await i.getCharacteristics();gn.log(`got characteristics for "${n}" service`);for(const e in a){const s=a[e];gn.log({characteristic:s});const i=Ki(s.uuid);gn.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),gn.log(`got "${i}" characteristic in "${n}" service`),s.name=i,t(this,on,"f").set(i,s),$i(s,t(this,sn,"f"));const r=s.properties||Xi(i);r.notify&&(gn.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),r.read&&(gn.log(`reading "${i}" characteristic...`),await s.readValue(),(c||h)&&t(this,tn,"m",un).call(this,s))}}},hn=async function(){this.device&&Ni(this.device,t(this,nn,"f"));const e=Array.from(t(this,on,"f").keys()).map((e=>{const s=t(this,on,"f").get(e);Ni(s,t(this,sn,"f"));if((s.properties||Xi(e)).notify)return gn.log(`stopping notifications for "${e}" characteristic`),s.stopNotifications()}));return Promise.allSettled(e)},ln=function(e){gn.log("oncharacteristicvaluechanged");const s=e.target;t(this,tn,"m",un).call(this,s)},un=function(e){gn.log("onCharacteristicValue");const t=e.name;gn.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),gn.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;gn.assertWithError(s,`no data found for "${t}" characteristic`),gn.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){gn.error(e)}},fn=function(){gn.log("gattserverdisconnected"),this.status="not connected"};const pn=4294967296,vn=9007199254740992;const wn={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function a(e){let a=s.byteLength;const r=n+e;for(;a<r;)a<<=1;if(a!==s.byteLength){const e=i;s=new ArrayBuffer(a),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function r(){n+=t}function o(e){r(a(1).setUint8(n,e))}function c(e){const t=a(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);r()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){r(a(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){r(a(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%pn,s=(e-t)/pn,i=a(8);i.setUint32(n,s),i.setUint32(n+4,t),r()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=vn)return h(0,t);if(-vn<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){r(a(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),u=new DataView(l);for(let e=0;e<n;++e)u.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function a(e,t){return n+=e,t}function r(t){return a(t,new Uint8Array(e,n,t))}function o(){return a(1,i.getUint8(n))}function c(){return a(2,i.getUint16(n))}function h(){return a(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function u(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*pn+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function f(e){const t=o();if(255===t)return-1;const s=u(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function g(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const a=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==a)return(i?-1:1)*a*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|a<<13),t.getFloat32(0)}();case 26:return a(4,i.getFloat32(n));case 27:return a(8,i.getFloat64(n))}if(v=u(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=f(d))>=0;)t+=v,e.push(r(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return r(v);case 3:if(v<0)for(;(v=f(d))>=0;)g(w,v);else g(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},yn=T("mcumgr",{log:!0}),bn=0,Sn=1,En=2,Cn=3,Dn=0,Mn=1,kn=8,Tn=0,Wn=2,In=3,_n=5,Ln=0,Fn=1,Un=5,xn=0;class Rn{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(wn.encode(i))]);const a=255&n.length,r=[e,0,n.length>>8,a,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,r}_notification(e){yn.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,a,,r]=e,o=wn.decode(e.slice(8).buffer),c=256*s+i,h=256*n+a;return yn.log("mcumgr - Process Message - Group: "+h+", Id: "+r+", Off: "+o.off),h===Mn&&r===Fn&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===Cn&&h===kn&&r===xn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===Sn&&h===kn&&r===xn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),yn.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:r,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:r,data:o,length:c}))}cmdReset(){return this._getMessage(En,Dn,_n)}smpEcho(e){return this._getMessage(En,Dn,Tn,{d:e})}cmdImageState(){return this._getMessage(bn,Mn,Ln)}cmdImageErase(){return this._getMessage(En,Mn,Un,{})}cmdImageTest(e){return this._getMessage(En,Mn,Ln,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(En,Mn,Ln,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-wn.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(En,Mn,Fn,e);yn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?yn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?yn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(yn.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-wn.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(En,kn,xn,e);yn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?yn.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage(bn,kn,xn,e);yn.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const a=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=a,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var An,On,$n,Nn,Bn,Pn,Vn,zn,jn,qn,Gn,Hn,Jn,Qn,Zn,Kn,Xn,Yn,ea,ta,sa;const ia=T("FirmwareManager",{log:!0}),na=["smp"],aa=[...na,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],ra=["idle","uploading","uploaded","pending","testing","erasing"];class oa{constructor(){An.add(this),$n.set(this,"idle"),Bn.set(this,void 0),zn.set(this,void 0),jn.set(this,new Rn),t(this,An,"m",qn).call(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(e,s){if(ia.log({messageType:e}),"smp"!==e)throw Error(`uncaught messageType ${e}`);t(this,jn,"f")._notification(Array.from(new Uint8Array(s.buffer))),t(this,An,"a",On).call(this,"smp",{dataView:s})}async uploadFirmware(e){ia.log("uploadFirmware",e);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await q(e),n=await t(this,jn,"f").imageInfo(i);ia.log({imageInfo:n}),t(this,jn,"f").cmdUpload(i,1),t(this,An,"m",Nn).call(this,"uploading"),await s}get status(){return t(this,$n,"f")}get images(){return t(this,Bn,"f")}async getImages(){const e=this.waitForEvent("firmwareImages");ia.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(t(this,jn,"f").cmdImageState()).buffer),await e}async testImage(e=1){if(t(this,An,"m",Vn).call(this,e),t(this,An,"m",Pn).call(this),!t(this,Bn,"f")[e])return void ia.log(`image ${e} not found`);if(1==t(this,Bn,"f")[e].pending)return void ia.log(`image ${e} is already pending`);if(t(this,Bn,"f")[e].empty)return void ia.log(`image ${e} is empty`);const s=this.waitForEvent("smp");ia.log("testing firmware image..."),this.sendMessage(Uint8Array.from(t(this,jn,"f").cmdImageTest(t(this,Bn,"f")[e].hash)).buffer),await s}async eraseImage(){t(this,An,"m",Pn).call(this);const e=this.waitForEvent("smp");ia.log("erasing image..."),this.sendMessage(Uint8Array.from(t(this,jn,"f").cmdImageErase()).buffer),t(this,An,"m",Nn).call(this,"erasing"),await e,await this.getImages()}async confirmImage(e=0){if(t(this,An,"m",Vn).call(this,e),t(this,An,"m",Pn).call(this),!0===t(this,Bn,"f")[e].confirmed)return void ia.log(`image ${e} is already confirmed`);const s=this.waitForEvent("smp");ia.log("confirming image..."),this.sendMessage(Uint8Array.from(t(this,jn,"f").cmdImageConfirm(t(this,Bn,"f")[e].hash)).buffer),await s}async echo(e){ia.assertTypeWithError(e,"string");const s=this.waitForEvent("smp");ia.log("sending echo..."),this.sendMessage(Uint8Array.from(t(this,jn,"f").smpEcho(e)).buffer),await s}async reset(){const e=this.waitForEvent("smp");ia.log("resetting..."),this.sendMessage(Uint8Array.from(t(this,jn,"f").cmdReset()).buffer),await e}get mtu(){return t(this,zn,"f")}set mtu(e){s(this,zn,e,"f"),t(this,jn,"f")._mtu=e}}var ca,ha,la,ua,fa,ga,da,ma,pa,va,wa,ya,ba,Sa,Ea,Ca,Da,Ma,ka,Ta,Wa,Ia,_a,La,Fa,Ua,xa,Ra,Aa,Oa,$a,Na,Ba,Pa,Va,za,ja,qa,Ga,Ha,Ja,Qa,Za,Ka,Xa,Ya,er,tr,sr;$n=new WeakMap,Bn=new WeakMap,zn=new WeakMap,jn=new WeakMap,An=new WeakSet,On=function(){return this.eventDispatcher.dispatchEvent},Nn=function(e){ia.assertEnumWithError(e,ra),t(this,$n,"f")!=e?(s(this,$n,e,"f"),ia.log({firmwareStatus:t(this,$n,"f")}),t(this,An,"a",On).call(this,"firmwareStatus",{firmwareStatus:t(this,$n,"f")})):ia.log(`redundant firmwareStatus assignment "${e}"`)},Pn=function(){ia.assertWithError(t(this,Bn,"f"),"didn't get imageState")},Vn=function(e){ia.assertTypeWithError(e,"number"),ia.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},qn=function(){t(this,jn,"f").onMessage(t(this,An,"m",Gn).bind(this)),t(this,jn,"f").onFileDownloadNext(t(this,An,"m",Hn)),t(this,jn,"f").onFileDownloadProgress(t(this,An,"m",Jn).bind(this)),t(this,jn,"f").onFileDownloadFinished(t(this,An,"m",Qn).bind(this)),t(this,jn,"f").onFileUploadNext(t(this,An,"m",Zn).bind(this)),t(this,jn,"f").onFileUploadProgress(t(this,An,"m",Kn).bind(this)),t(this,jn,"f").onFileUploadFinished(t(this,An,"m",Xn).bind(this)),t(this,jn,"f").onImageUploadNext(t(this,An,"m",Yn).bind(this)),t(this,jn,"f").onImageUploadProgress(t(this,An,"m",ea).bind(this)),t(this,jn,"f").onImageUploadFinished(t(this,An,"m",ta).bind(this))},Gn=function({op:e,group:s,id:i,data:n,length:a}){switch(ia.log("onMcuMessage",...arguments),s){case Dn:switch(i){case Tn:ia.log(`echo "${n.r}"`);break;case Wn:ia.table(n.tasks);break;case In:ia.log(n)}break;case Mn:if(i===Ln)t(this,An,"m",sa).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},Hn=function(){ia.log("onMcuFileDownloadNext",...arguments)},Jn=function(){ia.log("onMcuFileDownloadProgress",...arguments)},Qn=function(){ia.log("onMcuFileDownloadFinished",...arguments)},Zn=function(){ia.log("onMcuFileUploadNext")},Kn=function(){ia.log("onMcuFileUploadProgress")},Xn=function(){ia.log("onMcuFileUploadFinished")},Yn=function({packet:e}){ia.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},ea=function({percentage:e}){const s=e/100;ia.log("onMcuImageUploadProgress",...arguments),t(this,An,"a",On).call(this,"firmwareUploadProgress",{progress:s})},ta=async function(){ia.log("onMcuImageUploadFinished",...arguments),await this.getImages(),t(this,An,"a",On).call(this,"firmwareUploadProgress",{progress:100}),t(this,An,"a",On).call(this,"firmwareUploadComplete",{})},sa=function({images:e}){if(!e)return void ia.log("no images found");s(this,Bn,e,"f"),ia.log("images",t(this,Bn,"f"));let i="idle";2==t(this,Bn,"f").length&&(t(this,Bn,"f")[1].bootable?t(this,Bn,"f")[0].confirmed?t(this,Bn,"f")[1].pending?(ia.log("reset to upload to the new firmware image"),i="pending"):(ia.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(ia.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):ia.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==t(this,Bn,"f").length&&(t(this,Bn,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),ia.log("Select a firmware upload image to upload to slot 1.")),t(this,An,"m",Nn).call(this,i),t(this,An,"a",On).call(this,"firmwareImages",{firmwareImages:t(this,Bn,"f")})};const ir=T("Device",{log:!0}),nr=[...[...Ui,"connectionStatus","isConnected"],...Ri,"connectionMessage",...Bs,...ys,...lt,...Le,...cs,...aa];class ar{get bluetoothId(){return t(this,ga,"f")?.bluetoothId}constructor(){ca.add(this),ua.set(this,new W(this,nr)),ga.set(this,void 0),this.sendTxMessages=t(this,ca,"m",da).bind(this),ma.set(this,!1),Ea.set(this,ha.ReconnectOnDisconnection),Ca.set(this,void 0),this.latestConnectionMessage=new Map,Ia.set(this,new bs),_a.set(this,0),Fa.set(this,new Ps),Ua.set(this,new It),Ra.set(this,ha.ClearSensorConfigurationOnLeave),Oa.set(this,new ut),$a.set(this,new mi),Na.set(this,new Fe),Ba.set(this,new us),Pa.set(this,new oa),t(this,Ia,"f").eventDispatcher=t(this,ua,"f"),t(this,Fa,"f").sendMessage=this.sendTxMessages,t(this,Fa,"f").eventDispatcher=t(this,ua,"f"),t(this,Ua,"f").sendMessage=this.sendTxMessages,t(this,Ua,"f").eventDispatcher=t(this,ua,"f"),t(this,Oa,"f").eventDispatcher=t(this,ua,"f"),t(this,$a,"f").sendMessage=this.sendTxMessages,t(this,Ba,"f").sendMessage=this.sendTxMessages,t(this,Ba,"f").eventDispatcher=t(this,ua,"f"),t(this,Na,"f").sendMessage=this.sendTxMessages,t(this,Na,"f").eventDispatcher=t(this,ua,"f"),t(this,Pa,"f").sendMessage=this.sendSmpMessage,t(this,Pa,"f").eventDispatcher=t(this,ua,"f"),this.addEventListener("getMtu",(()=>{t(this,Pa,"f").mtu=this.mtu,t(this,Na,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),this.addEventListener("getType",(()=>{t(ha,ha,"f",za)&&t(ha,ha,"m",Za).call(ha,this)})),n&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),a&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),this.addEventListener("isConnected",(()=>{t(ha,ha,"m",er).call(ha,this)}))}get addEventListener(){return t(this,ua,"f").addEventListener}get removeEventListener(){return t(this,ua,"f").removeEventListener}get waitForEvent(){return t(this,ua,"f").waitForEvent}get connectionManager(){return t(this,ga,"f")}set connectionManager(e){this.connectionManager!=e?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0),e&&(e.onStatusUpdated=t(this,ca,"m",Da).bind(this),e.onMessageReceived=t(this,ca,"m",Wa).bind(this)),s(this,ga,e,"f"),ir.log("assigned new connectionManager",t(this,ga,"f"))):ir.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=t(ha,ha,"m",la).call(ha)),t(this,ca,"m",Ta).call(this),this.connectionManager.connect()}get isConnected(){return t(this,ma,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return t(this,ca,"m",Ta).call(this),this.connectionManager?.reconnect()}static get ReconnectOnDisconnection(){return t(this,ha,"f",Sa)}static set ReconnectOnDisconnection(e){ir.assertTypeWithError(e,"boolean"),s(this,ha,e,"f",Sa)}get reconnectOnDisconnection(){return t(this,Ea,"f")}set reconnectOnDisconnection(e){ir.assertTypeWithError(e,"boolean"),s(this,Ea,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return t(this,ca,"m",pa).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(t(this,ga,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"not connected":case"connecting":case"disconnecting":return t(this,ga,"f").status;default:return"not connected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return t(this,Ia,"f").information}get batteryLevel(){return t(this,_a,"f")}get id(){return t(this,Fa,"f").id}get isCharging(){return t(this,Fa,"f").isCharging}get batteryCurrent(){return t(this,Fa,"f").batteryCurrent}async getBatteryCurrent(){await t(this,Fa,"f").getBatteryCurrent()}get name(){return t(this,Fa,"f").name}get setName(){return t(this,Fa,"f").setName}get type(){return t(this,Fa,"f").type}get setType(){return t(this,Fa,"f").setType}get isInsole(){return t(this,Fa,"f").isInsole}get insoleSide(){return t(this,Fa,"f").insoleSide}get mtu(){return t(this,Fa,"f").mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return this.sensorTypes.filter((e=>ct.includes(e)))}get sensorConfiguration(){return t(this,Ua,"f").configuration}async setSensorConfiguration(e,s){await t(this,Ua,"f").setConfiguration(e,s)}async clearSensorConfiguration(){return t(this,Ua,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return t(this,ha,"f",xa)}static set ClearSensorConfigurationOnLeave(e){ir.assertTypeWithError(e,"boolean"),s(this,ha,e,"f",xa)}get clearSensorConfigurationOnLeave(){return t(this,Ra,"f")}set clearSensorConfigurationOnLeave(e){ir.assertTypeWithError(e,"boolean"),s(this,Ra,e,"f")}static get DefaultNumberOfPressureSensors(){return t(this,ha,"f",Aa)}get numberOfPressureSensors(){return t(this,Oa,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){t(this,Oa,"f").pressureSensorDataManager.resetRange()}async triggerVibration(e,s){t(this,$a,"f").triggerVibration(e,s)}get maxFileLength(){return t(this,Na,"f").maxLength}async sendFile(e,s){const i=this.waitForEvent("fileTransferComplete");t(this,Na,"f").send(e,s),await i}async receiveFile(e){const s=this.waitForEvent("fileTransferComplete");t(this,Na,"f").receive(e),await s}get fileTransferStatus(){return t(this,Na,"f").status}cancelFileTransfer(){t(this,Na,"f").cancel()}get tfliteName(){return t(this,Ba,"f").name}get setTfliteName(){return t(this,Ba,"f").setName}static get TfliteTasks(){return hs}get tfliteTask(){return t(this,Ba,"f").task}get setTfliteTask(){return t(this,Ba,"f").setTask}get tfliteSampleRate(){return t(this,Ba,"f").sampleRate}get setTfliteSampleRate(){return t(this,Ba,"f").setSampleRate}get tfliteSensorTypes(){return t(this,Ba,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>ls.includes(e)))}get setTfliteSensorTypes(){return t(this,Ba,"f").setSensorTypes}get tfliteIsReady(){return t(this,Ba,"f").isReady}get tfliteInferencingEnabled(){return t(this,Ba,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return t(this,Ba,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return t(this,Ba,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return t(this,Ba,"f").captureDelay}get setTfliteCaptureDelay(){return t(this,Ba,"f").setCaptureDelay}get tfliteThreshold(){return t(this,Ba,"f").threshold}get setTfliteThreshold(){return t(this,Ba,"f").setThreshold}sendSmpMessage(e){return t(this,ga,"f").sendSmpMessage(e)}get uploadFirmware(){return t(this,Pa,"f").uploadFirmware}async reset(){return await t(this,Pa,"f").reset(),t(this,ga,"f").disconnect()}get firmwareStatus(){return t(this,Pa,"f").status}get getFirmwareImages(){return t(this,Pa,"f").getImages}get firmwareImages(){return t(this,Pa,"f").images}get eraseFirmwareImage(){return t(this,Pa,"f").eraseImage}get confirmFirmwareImage(){return t(this,Pa,"f").confirmImage}get testFirmwareImage(){return t(this,Pa,"f").testImage}static get ConnectedDevices(){return t(this,ha,"f",Va)}static get UseLocalStorage(){return t(this,ha,"f",za)}static set UseLocalStorage(e){t(this,ha,"m",Ga).call(this),ir.assertTypeWithError(e,"boolean"),s(this,ha,e,"f",za),t(this,ha,"f",za)&&!t(this,ha,"f",qa)&&t(this,ha,"m",Qa).call(this)}static get CanUseLocalStorage(){return n&&window.localStorage}static get AvailableDevices(){return t(this,ha,"f",Ka)}static get CanGetDevices(){return n&&navigator.bluetooth?.getDevices&&!c}static async GetDevices(){if(!n)return void ir.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void ir.warn("bluetooth is not available in this browser");if(c)return void ir.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void ir.warn("bluetooth.getDevices() is not available in this browser");t(this,ha,"f",qa)||t(this,ha,"m",Qa).call(this);const e=t(this,ha,"f",qa);if(!e.devices||0==e.devices.length)return void ir.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return ir.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=e.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const a=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(a)return void(n&&n?.bluetoothId==a.bluetoothId&&n!=a&&(this.AvailableDevices[t(this,ha,"f",Ka).indexOf(a)]=n));if(n)return void this.AvailableDevices.push(n);const r=new ha,o=new mn;o.device=s,s.name&&t(r,Fa,"f").updateName(s.name),t(r,Fa,"f").updateType(i.type),r.connectionManager=o,this.AvailableDevices.push(r)})),t(this,ha,"m",tr).call(this),this.AvailableDevices}static get AddEventListener(){return t(this,ha,"f",Xa).addEventListener}static get RemoveEventListener(){return t(this,ha,"f",Xa).removeEventListener}static async Connect(){const e=new ha;return await e.connect(),e}}var rr,or,cr,hr,lr;ha=ar,ua=new WeakMap,ga=new WeakMap,ma=new WeakMap,Ea=new WeakMap,Ca=new WeakMap,Ia=new WeakMap,_a=new WeakMap,Fa=new WeakMap,Ua=new WeakMap,Ra=new WeakMap,Oa=new WeakMap,$a=new WeakMap,Na=new WeakMap,Ba=new WeakMap,Pa=new WeakMap,ca=new WeakSet,la=function(){return new mn},fa=function(){return t(this,ua,"f").dispatchEvent},da=async function(e,s){await(t(this,ga,"f")?.sendTxMessages(e,s))},pa=function(){ir.assertWithError(this.isConnected,"not connected")},wa=function(){return t(ha,ha,"f",va)},ya=function(){return t(this,ca,"a",wa).every((e=>this.latestConnectionMessage.has(e)))},ba=function(){const e=t(this,ca,"a",wa).map((e=>({type:e})));t(this,ca,"m",da).call(this,e)},Da=function(e){if(ir.log({connectionStatus:e}),"not connected"==e?this.canReconnect&&this.reconnectOnDisconnection&&(ir.log("starting reconnect interval..."),s(this,Ca,setInterval((()=>{ir.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=t(this,Ca,"f")&&(ir.log("clearing reconnect interval"),clearInterval(t(this,Ca,"f")),s(this,Ca,void 0,"f")),t(this,ca,"m",ka).call(this),"connected"!=e||t(this,ma,"f")||t(this,ca,"m",ba).call(this),"not connected"==e&&!this.canReconnect&&t(ha,ha,"f",Ka).includes(this)){const e=t(ha,ha,"f",Ka).indexOf(this);ha.AvailableDevices.splice(e,1),t(ha,ha,"m",tr).call(ha)}},Ma=function(e=!1){t(this,ca,"a",fa).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),t(this,ca,"a",fa).call(this,this.connectionStatus,{}),e&&t(this,ca,"a",fa).call(this,"isConnected",{isConnected:this.isConnected})},ka=function(){switch(s(this,ma,Boolean(this.connectionManager?.isConnected)&&t(this,ca,"a",ya)&&t(this,Fa,"f").isCurrentTimeSet,"f"),this.connectionStatus){case"connected":t(this,ma,"f")&&t(this,ca,"m",Ma).call(this,!0);break;case"not connected":t(this,ca,"m",Ma).call(this,!0);break;default:t(this,ca,"m",Ma).call(this,!1)}},Ta=function(){this.latestConnectionMessage.clear(),t(this,Fa,"f").clear(),t(this,Ia,"f").clear()},Wa=function(e,s){if(ir.log({messageType:e,dataView:s}),"batteryLevel"===e){const e=s.getUint8(0);ir.log("received battery level",{batteryLevel:e}),t(this,ca,"m",La).call(this,e)}else if(Te.includes(e))t(this,Na,"f").parseMessage(e,s);else if(os.includes(e))t(this,Ba,"f").parseMessage(e,s);else if(ht.includes(e))t(this,Oa,"f").parseMessage(e,s);else if(na.includes(e))t(this,Pa,"f").parseMessage(e,s);else if(ws.includes(e))t(this,Ia,"f").parseMessage(e,s);else if(Ns.includes(e))t(this,Fa,"f").parseMessage(e,s);else{if(!Wt.includes(e))throw Error(`uncaught messageType ${e}`);t(this,Ua,"f").parseMessage(e,s)}this.latestConnectionMessage.set(e,s),t(this,ca,"a",fa).call(this,"connectionMessage",{messageType:e,dataView:s}),!this.isConnected&&t(this,ca,"a",ya)&&t(this,ca,"m",ka).call(this)},La=function(e){ir.assertTypeWithError(e,"number"),t(this,_a,"f")!=e?(s(this,_a,e,"f"),ir.log({updatedBatteryLevel:t(this,_a,"f")}),t(this,ca,"a",fa).call(this,"batteryLevel",{batteryLevel:t(this,_a,"f")})):ir.log(`duplicate batteryLevel assignment ${e}`)},Ga=function(){ir.assertWithError(n,"localStorage is only available in the browser"),ir.assertWithError(window.localStorage,"localStorage not found")},Ja=function(){t(this,ha,"m",Ga).call(this),localStorage.setItem(t(this,ha,"f",Ha),JSON.stringify(t(this,ha,"f",qa)))},Qa=async function(){t(this,ha,"m",Ga).call(this);let e=localStorage.getItem(t(this,ha,"f",Ha));if("string"!=typeof e)return ir.log("no info found in localStorage"),s(this,ha,Object.assign({},t(this,ha,"f",ja)),"f",qa),void t(this,ha,"m",Ja).call(this);try{const t=JSON.parse(e);ir.log({configuration:t}),s(this,ha,t,"f",qa),this.CanGetDevices&&await this.GetDevices()}catch(e){ir.error(e)}},Za=function(e){if("webBluetooth"!=e.connectionType)return void ir.log("localStorage is only for webBluetooth devices");t(this,ha,"m",Ga).call(this);const s=t(this,ha,"f",qa).devices.findIndex((t=>t.bluetoothId==e.bluetoothId));-1!=s&&(t(this,ha,"f",qa).devices[s].type=e.type,t(this,ha,"m",Ja).call(this))},Ya=function(){return t(this,ha,"f",Xa).dispatchEvent},er=function(e){if(e.isConnected)if(t(this,ha,"f",Va).includes(e))ir.log("device already included");else{if(ir.log("adding device",e),t(this,ha,"f",Va).push(e),this.UseLocalStorage&&"webBluetooth"==e.connectionType){const s={type:e.type,bluetoothId:e.bluetoothId},i=t(this,ha,"f",qa).devices.findIndex((e=>e.bluetoothId==s.bluetoothId));-1==i?t(this,ha,"f",qa).devices.push(s):t(this,ha,"f",qa).devices[i]=s,t(this,ha,"m",Ja).call(this)}t(this,ha,"a",Ya).call(this,"deviceConnected",{device:e}),t(this,ha,"a",Ya).call(this,"deviceIsConnected",{device:e}),t(this,ha,"m",sr).call(this)}else t(this,ha,"f",Va).includes(e)?(ir.log("removing device",e),t(this,ha,"f",Va).splice(t(this,ha,"f",Va).indexOf(e),1),t(this,ha,"a",Ya).call(this,"deviceDisconnected",{device:e}),t(this,ha,"a",Ya).call(this,"deviceIsConnected",{device:e}),t(this,ha,"m",sr).call(this)):ir.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),e.isConnected&&!this.AvailableDevices.includes(e)){const s=this.AvailableDevices.find((t=>t.bluetoothId==e.bluetoothId));ir.log({existingAvailableDevice:s}),s?this.AvailableDevices[this.AvailableDevices.indexOf(s)]=e:this.AvailableDevices.push(e),t(this,ha,"m",tr).call(this)}},tr=function(){ir.log({AvailableDevices:this.AvailableDevices}),t(this,ha,"a",Ya).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},sr=function(){ir.log({ConnectedDevices:this.ConnectedDevices}),t(this,ha,"a",Ya).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},va={value:["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"]},Sa={value:!1},xa={value:!0},Aa={value:8},Va={value:[]},za={value:!1},ja={value:{devices:[]}},qa={value:void 0},Ha={value:"BS.Device"},Ka={value:[]},Xa={value:new W(ha,["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"])},ha.CanUseLocalStorage&&(ha.UseLocalStorage=!0);const ur=T("DevicePairPressureSensorDataManager",{log:!0});class fr{constructor(){rr.add(this),or.set(this,{}),cr.set(this,new Ve)}resetPressureRange(){t(this,cr,"f").reset()}onDevicePressureData(e){const{pressure:s}=e.message,i=e.target.insoleSide;if(ur.log({pressure:s,insoleSide:i}),t(this,or,"f")[i]=s,t(this,rr,"a",hr))return t(this,rr,"m",lr).call(this);ur.log("doesn't have all pressure data yet...")}}var gr;or=new WeakMap,cr=new WeakMap,rr=new WeakSet,hr=function(){return $s.every((e=>e in t(this,or,"f")))},lr=function(){const e={rawSum:0,normalizedSum:0};return $s.forEach((s=>{e.rawSum+=t(this,or,"f")[s].scaledSum,e.normalizedSum+=t(this,or,"f")[s].normalizedSum})),e.normalizedSum>0&&(e.center={x:0,y:0},$s.forEach((s=>{const i=t(this,or,"f")[s],n=i.normalizedSum/e.normalizedSum;n>0&&(e.center.y+=i.normalizedCenter.y*n,"right"==s&&(e.center.x=n))})),e.normalizedCenter=t(this,cr,"f").updateAndGetNormalization(e.center)),ur.log({devicePairPressure:e}),e};const dr=T("DevicePairSensorDataManager",{log:!0}),mr=["pressure","sensorData"];class pr{constructor(){gr.set(this,{}),this.pressureSensorDataManager=new fr}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(e){const{timestamp:s,sensorType:i}=e.message;let n;if(dr.log({sensorType:i,timestamp:s,event:e}),t(this,gr,"f")[i]||(t(this,gr,"f")[i]={}),t(this,gr,"f")[i][e.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(e);else dr.log(`uncaught sensorType "${i}"`);if(n){const e=Object.assign({},t(this,gr,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:e,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:e,[i]:n})}else dr.log("no value received")}}var vr,wr,yr,br,Sr,Er,Cr,Dr,Mr,kr,Tr,Wr,Ir,_r;gr=new WeakMap;const Lr=T("DevicePair",{log:!0});function Fr(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const Ur=["isConnected",...mr,...nr.map((e=>Fr(e)))];class xr{constructor(){vr.add(this),yr.set(this,new W(this,Ur)),Sr.set(this,void 0),Er.set(this,void 0),Dr.set(this,{connectionStatus:t(this,vr,"m",Mr).bind(this),isConnected:t(this,vr,"m",kr).bind(this),sensorData:t(this,vr,"m",Ir).bind(this),getSensorConfiguration:t(this,vr,"m",Mr).bind(this),getType:t(this,vr,"m",Tr).bind(this)}),Wr.set(this,new pr),t(this,Wr,"f").eventDispatcher=t(this,yr,"f")}get addEventListener(){return t(this,yr,"f").addEventListener}get removeEventListener(){return t(this,yr,"f").removeEventListener}get waitForEvent(){return t(this,yr,"f").waitForEvent}get left(){return t(this,Sr,"f")}get right(){return t(this,Er,"f")}get isConnected(){return $s.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return $s.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(e){if(!e.isInsole)return void Lr.warn("device is not an insole");const i=e.insoleSide,n=this[i];if(e!=n){switch(n&&Ni(n,t(this,Dr,"f")),$i(e,t(this,Dr,"f")),i){case"left":s(this,Sr,e,"f");break;case"right":s(this,Er,e,"f")}return Lr.log(`assigned ${i} insole`,e),this.resetPressureRange(),t(this,vr,"a",br).call(this,"isConnected",{isConnected:this.isConnected}),t(this,vr,"a",br).call(this,"deviceIsConnected",{device:e,isConnected:e.isConnected,side:i}),n}Lr.log("device already assigned")}setSensorConfiguration(e){$s.forEach((t=>{this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){t(this,Wr,"f").resetPressureRange()}async triggerVibration(e,t){const s=$s.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return t(this,wr,"f",_r)}}wr=xr,yr=new WeakMap,Sr=new WeakMap,Er=new WeakMap,Dr=new WeakMap,Wr=new WeakMap,vr=new WeakSet,br=function(){return t(this,yr,"f").dispatchEvent},Cr=function(e){const s=$s.some((s=>this[s]==e&&(Lr.log(`removing ${s} insole`,e),Ni(e,t(this,Dr,"f")),delete this[s],!0)));return s&&t(this,vr,"a",br).call(this,"isConnected",{isConnected:this.isConnected}),s},Mr=function(e){const{type:s,target:i,message:n}=e;t(this,vr,"a",br).call(this,Fr(s),{...n,device:i,side:i.insoleSide})},kr=function(e){t(this,vr,"m",Mr).call(this,e),t(this,vr,"a",br).call(this,"isConnected",{isConnected:this.isConnected})},Tr=function(e){const{target:s}=e;if(this[s.insoleSide]==s)return;t(this,vr,"m",Cr).call(this,s)&&this.assignInsole(s)},Ir=function(e){t(this,vr,"m",Mr).call(this,e),this.isConnected&&t(this,Wr,"f").onDeviceSensorData(e)},_r={value:new wr},ar.AddEventListener("deviceConnected",(e=>{const s=e.message.device;s.isInsole&&t(wr,wr,"f",_r).assignInsole(s)}));const Rr=T("ServerUtils",{log:!1}),Ar=["ping","pong","isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function Or(e,...t){Rr.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=V(...t.data),i=s.byteLength;Rr.assertEnumWithError(t.type,e);return V(e.indexOf(t.type),Uint16Array.from([i]),s)}));return Rr.log("messageBuffers",...s),V(...s)}function $r(...e){return Rr.log("createServerMessage",...e),Or(Ar,...e)}function Nr(...e){return Rr.log("createClientDeviceMessage",...e),Or(Ri,...e)}$r("ping"),$r("pong"),$r("isScanningAvailable"),$r("isScanning"),$r("startScan"),$r("stopScan");const Br=$r("discoveredDevices");var Pr,Vr,zr,jr,qr,Gr,Hr,Jr;const Qr=T("WebSocketClientConnectionManager",{log:!0});class Zr extends Ai{constructor(){super(...arguments),Pr.add(this),zr.set(this,void 0),jr.set(this,!1)}static get isSupported(){return n}static get type(){return"webSocketClient"}get bluetoothId(){return t(this,zr,"f")}set bluetoothId(e){Qr.assertTypeWithError(e,"string"),t(this,zr,"f")!=e?s(this,zr,e,"f"):Qr.log("redundant bluetoothId assignment")}get isConnected(){return t(this,jr,"f")}set isConnected(e){Qr.assertTypeWithError(e,"boolean"),t(this,jr,"f")!=e?(s(this,jr,e,"f"),this.status=t(this,jr,"f")?"connected":"not connected",this.isConnected&&t(this,Pr,"m",Hr).call(this)):Qr.log("redundant newIsConnected assignment",e)}async connect(){await super.connect(),this.sendWebSocketConnectMessage()}async disconnect(){await super.disconnect(),this.sendWebSocketDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),Qr.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendWebSocketMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendWebSocketMessage({type:"tx",data:e})}onWebSocketMessage(e){Qr.log({dataView:e}),at(e,nr,t(this,Pr,"m",Jr).bind(this),null,!0)}}var Kr,Xr,Yr,eo,to,so,io,no,ao,ro,oo,co,ho,lo,uo,fo,go,mo,po,vo,wo,yo,bo,So,Eo;Vr=Zr,zr=new WeakMap,jr=new WeakMap,Pr=new WeakSet,Gr=function(){return t(Vr,Vr,"f",qr)},Hr=function(){this.sendWebSocketMessage(...t(this,Pr,"a",Gr))},Jr=function(e,t){let s=0;switch(e){case"isConnected":const i=Boolean(t.getUint8(s++));Qr.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}},qr={value:[...ws,"batteryLevel"]};const Co=T("WebSocketClient",{log:!0}),Do=["not connected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class Mo{constructor(){Kr.add(this),eo.set(this,{}),to.set(this,new W(this,Do)),io.set(this,t(t(this,Kr,"a",Yr),Xr,"f",so)),no.set(this,"not connected"),this.pingTimer=new U(t(this,Kr,"m",ro).bind(this),3e7),co.set(this,!1),fo.set(this,!1),yo.set(this,{})}get devices(){return t(this,eo,"f")}get addEventListener(){return t(this,to,"f").addEventListener}get dispatchEvent(){return t(this,to,"f").dispatchEvent}get removeEventListener(){return t(this,to,"f").removeEventListener}get waitForEvent(){return t(this,to,"f").waitForEvent}assertConnection(){Co.assertWithError(this.isConnected,"not connected")}assertDisconnection(){Co.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return t(this,Xr,"f",so)}static set ReconnectOnDisconnection(e){Co.assertTypeWithError(e,"boolean"),s(this,Xr,e,"f",so)}get reconnectOnDisconnection(){return t(this,io,"f")}set reconnectOnDisconnection(e){Co.assertTypeWithError(e,"boolean"),s(this,io,e,"f")}sendServerMessage(...e){this.sendMessage($r(...e))}get _connectionStatus(){return t(this,no,"f")}set _connectionStatus(e){switch(Co.assertTypeWithError(e,"string"),Co.log({newConnectionStatus:e}),s(this,no,e,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),e){case"connected":case"not connected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):(s(this,Kr,!1,"a",lo),s(this,Kr,!1,"a",mo))}}get connectionStatus(){return this._connectionStatus}parseMessage(e){Co.log("parseMessage",{dataView:e}),at(e,Ar,t(this,Kr,"m",ao).bind(this),null,!0)}get isScanningAvailable(){return t(this,Kr,"a",ho)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return t(this,Kr,"a",go)}startScan(){t(this,Kr,"m",wo).call(this),this.sendServerMessage("startScan")}stopScan(){t(this,Kr,"m",vo).call(this),this.sendServerMessage("stopScan")}toggleScan(){t(this,Kr,"m",uo).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return t(this,yo,"f")}onDiscoveredDevice(e){Co.log({discoveredDevice:e}),t(this,yo,"f")[e.bluetoothId]=e,this.dispatchEvent("discoveredDevice",{discoveredDevice:e})}requestDiscoveredDevices(){this.sendMessage(Br)}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(e){this.assertConnection(),Co.assertTypeWithError(e,"string");const s=t(this,Kr,"m",So).call(this,e);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendMessage(this.createConnectToDeviceMessage(e))}createConnectToDeviceMessage(e){return $r({type:"connectToDevice",data:e})}onConnectedBluetoothDeviceIds(e){Co.log({bluetoothIds:e}),e.forEach((e=>{t(this,Kr,"m",So).call(this,e).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),Co.assertTypeWithError(e,"string");const t=this.devices[e];return Co.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(e){this.sendMessage(t(this,Kr,"m",Eo).call(this,e))}sendDeviceMessage(e,...t){this.sendMessage(this.createDeviceMessage(e,...t))}createDeviceMessage(e,...t){return $r({type:"deviceMessage",data:[e,Nr(...t)]})}}var ko,To,Wo,Io,_o,Lo,Fo;Xr=Mo,eo=new WeakMap,to=new WeakMap,io=new WeakMap,no=new WeakMap,co=new WeakMap,fo=new WeakMap,yo=new WeakMap,Kr=new WeakSet,Yr=function(){return this.constructor},ao=function(e,i){let n=0;switch(e){case"ping":t(this,Kr,"m",oo).call(this);break;case"pong":break;case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));Co.log({isScanningAvailable:e}),s(this,Kr,e,"a",lo)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));Co.log({isScanning:e}),s(this,Kr,e,"a",mo)}break;case"discoveredDevice":{const{string:e}=nt(i,n);Co.log({discoveredDeviceString:e});const t=JSON.parse(e);Co.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:e}=nt(i,n);t(this,Kr,"m",bo).call(this,e)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=nt(i,n);Co.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);Co.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:e,byteOffset:s}=nt(i,n);n=s;const a=t(this,eo,"f")[e];Co.assertWithError(a,`no device found for id ${e}`);const r=a.connectionManager,o=j(i,n);r.onWebSocketMessage(o)}break;default:Co.error(`uncaught messageType "${e}"`)}},ro=function(){this.sendServerMessage("ping")},oo=function(){this.sendServerMessage("pong")},ho=function(){return t(this,co,"f")},lo=function(e){Co.assertTypeWithError(e,"boolean"),s(this,co,e,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&t(this,Kr,"m",po).call(this)},uo=function(){this.assertConnection(),Co.assertWithError(this.isScanningAvailable,"scanning is not available")},go=function(){return t(this,fo,"f")},mo=function(e){Co.assertTypeWithError(e,"boolean"),s(this,fo,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},po=function(){this.sendServerMessage("isScanning")},vo=function(){Co.assertWithError(this.isScanning,"is not scanning")},wo=function(){Co.assertWithError(!this.isScanning,"is already scanning")},bo=function(e){Co.log({expiredBluetoothDeviceId:e});const s=t(this,yo,"f")[e];s?(Co.log({expiredDiscoveredDevice:s}),delete t(this,yo,"f")[e],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):Co.warn(`no discoveredDevice found with id "${e}"`)},So=function(e){let s=t(this,eo,"f")[e];return s||(s=this.createDevice(e),t(this,eo,"f")[e]=s),s},Eo=function(e){return $r({type:"disconnectFromDevice",data:e})},so={value:!0};const Uo=T("WebSocketClient",{log:!0});To=new WeakMap,Wo=new WeakMap,ko=new WeakSet,Io=function(e){Uo.log("webSocket.open",e),this.pingTimer.start(),this._connectionStatus="connected"},_o=async function(e){Uo.log("webSocket.message",e),this.pingTimer.restart();const t=await e.data.arrayBuffer(),s=new DataView(t);this.parseMessage(s)},Lo=function(e){Uo.log("webSocket.close",e),this._connectionStatus="not connected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),this.pingTimer.stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},Fo=function(e){Uo.error("webSocket.error",e.message)},e.ContinuousSensorTypes=ct,e.Device=ar,e.DevicePair=xr,e.DeviceTypes=Os,e.Environment=y,e.FileTypes=We,e.SensorTypes=ot,e.TfliteSensorTypes=ls,e.VibrationLocations=gi,e.VibrationTypes=di,e.VibrationWaveformEffects=Vs,e.WebSocketClient=class extends Mo{constructor(){super(...arguments),ko.add(this),To.set(this,void 0),Wo.set(this,{open:t(this,ko,"m",Io).bind(this),message:t(this,ko,"m",_o).bind(this),close:t(this,ko,"m",Lo).bind(this),error:t(this,ko,"m",Fo).bind(this)})}get webSocket(){return t(this,To,"f")}set webSocket(e){t(this,To,"f")!=e?(Uo.log("assigning webSocket",e),t(this,To,"f")&&Ni(t(this,To,"f"),t(this,Wo,"f")),$i(e,t(this,Wo,"f")),s(this,To,e,"f"),Uo.log("assigned webSocket")):Uo.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.webSocket=new WebSocket(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(e){this.assertConnection(),t(this,To,"f").send(e)}createDevice(e){const t=new ar,s=new Zr;return s.bluetoothId=e,s.sendWebSocketMessage=this.sendDeviceMessage.bind(this,e),s.sendWebSocketConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendWebSocketDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}},e.setAllConsoleLevelFlags=function(e){k.setAllLevelFlags(e)},e.setConsoleLevelFlagsForType=function(e,t){k.setLevelFlagsForType(e,t)}}));
//# sourceMappingURL=brilliantsole.min.js.map
