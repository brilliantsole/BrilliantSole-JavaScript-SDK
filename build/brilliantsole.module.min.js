/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function t(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const s=!1,i="undefined"!=typeof window&&void 0!==window?.document,n="undefined"!=typeof process&&null!=process?.versions?.node,r=i&&navigator.userAgent||"";let a=!1;i?a=Boolean(navigator.bluetooth):n&&(a=!0);const o=i&&/Bluefy/i.test(r),c=i&&/WebBLE/i.test(r),h=i&&/Android/i.test(r),l=i&&/Safari/i.test(r)&&!/Chrome/i.test(r),g=i&&/iPad|iPhone|iPod/i.test(r),u=i&&/Macintosh/i.test(r),f=!i&&!n&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var d,m,p,v,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return a},isIOS:g,isInBluefy:o,isInBrowser:i,isInDev:s,isInLensStudio:f,isInNode:n,isInProduction:!0,isInWebBLE:c,isMac:u,isSafari:l});if(f){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(v={}).log=e,v.warn=e.bind(v,"WARNING"),v.error=e.bind(v,"ERROR")}else v=console;if(!v.assert){const e=(e,...t)=>{e||v.warn(...t)};v.assert=e}if(!v.table){const e=(...e)=>{v.log(...e)};v.table=e}function y(){}const b=v.log.bind(v),S=v.warn.bind(v),E=v.error.bind(v),C=v.table.bind(v),M=v.assert.bind(v);class D{constructor(t){if(p.set(this,{log:s,warn:s,assert:!0,error:!0,table:!0}),e(d,d,"f",m)[t])throw new Error(`"${t}" console already exists`);e(d,d,"f",m)[t]=this}setLevelFlags(t){Object.assign(e(this,p,"f"),t)}static setLevelFlagsForType(t,s){if(!e(this,d,"f",m)[t])throw new Error(`no console found with type "${t}"`);e(this,d,"f",m)[t].setLevelFlags(s)}static setAllLevelFlags(t){for(const s in e(this,d,"f",m))e(this,d,"f",m)[s].setLevelFlags(t)}static create(t,s){return e(this,d,"f",m)[t]||new d(t)}get log(){return e(this,p,"f").log?b:y}get warn(){return e(this,p,"f").warn?S:y}get error(){return e(this,p,"f").error?E:y}get assert(){return e(this,p,"f").assert?M:y}get table(){return e(this,p,"f").table?C:y}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function k(e,t){return D.create(e,t)}function T(e,t){D.setLevelFlagsForType(e,t)}function W(e){D.setAllLevelFlags(e)}d=D,p=new WeakMap,m={value:{}};const _=k("EventDispatcher",{log:!1});class I{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[],_.log(`creating "${e}" listeners array`,this.listeners[e])),_.log(`adding "${e}" listener`,t,s),this.listeners[e].push({listener:t,once:s.once})}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(_.log(`removing "${e}" listener`,t),this.listeners[e]=this.listeners[e].filter((e=>e.listener!==t)))}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);if(!this.listeners[e])return;const s=this.listeners[e];this.listeners[e]=s.filter((s=>(s.listener({type:e,target:this.target,message:t}),!s.once||(_.log(`removing "${e}" listener`,s),!1))))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var F,U,L;const R=k("Timer",{log:!1});class x{get callback(){return e(this,F,"f")}set callback(e){R.assertTypeWithError(e,"function"),R.log({newCallback:e}),t(this,F,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,U,"f")}set interval(e){R.assertTypeWithError(e,"number"),R.assertWithError(e>0,"interval must be above 0"),R.log({newInterval:e}),t(this,U,e,"f"),this.isRunning&&this.restart()}constructor(e,t){F.set(this,void 0),U.set(this,void 0),L.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,L,"f")}start(){this.isRunning?R.log("interval already running"):(R.log("starting interval"),t(this,L,setInterval(e(this,F,"f"),e(this,U,"f")),"f"))}stop(){this.isRunning?(R.log("stopping interval"),clearInterval(e(this,L,"f")),t(this,L,void 0,"f")):R.log("interval already not running")}restart(){this.stop(),this.start()}}function A(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}F=new WeakMap,U=new WeakMap,L=new WeakMap,k("checksum",{log:!0});const O=new Uint32Array(256);for(let e=0;e<256;++e)O[e]=A(e);function $(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(O[i^n]^s>>>8)>>>0}return s}var B,N;B="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,N="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const P=new B,V=new N,z=k("ArrayBufferUtils",{log:!1});function j(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return G(e)}if(e instanceof Array){return j(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return G(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function G(e){const t=P.encode(e);return j(t.byteLength,t)}function q(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),z.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function H(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}function J(e,{include:t,exclude:s}={}){const i=e=>{const i=t=>"string"==typeof t?e===t:t.test(e);return t?t.some(i):!s||!s.some(i)};for(const[t,s]of(e=>{const t=new Set;do{for(const s of Reflect.ownKeys(e))t.add([e,s])}while((e=Reflect.getPrototypeOf(e))&&e!==Object.prototype);return t})(e.constructor.prototype)){if("constructor"===s||!i(s))continue;const n=Reflect.getOwnPropertyDescriptor(t,s);n&&"function"==typeof n.value&&(e[s]=e[s].bind(e))}return e}var Q,K,Z,X,Y,ee,te,se,ie,ne,re,ae,oe,ce,he,le,ge,ue,fe,de,me,pe,ve,we,ye,be,Se,Ee,Ce,Me,De,ke,Te,We;const _e=k("FileTransferManager",{log:!0}),Ie=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock"],Fe=["tflite"],Ue=["idle","sending","receiving"],Le=["startSend","startReceive","cancel"],Re=["sending","receiving"],xe=[...Ie,"fileTransferProgress","fileTransferComplete","fileReceived"];class Ae{constructor(){Q.add(this),ie.set(this,K.MaxLength),oe.set(this,void 0),ge.set(this,0),me.set(this,0),be.set(this,"idle"),De.set(this,[]),J(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return e(this,K,"f",se)}get maxLength(){return e(this,ie,"f")}get type(){return e(this,oe,"f")}get length(){return e(this,ge,"f")}get checksum(){return e(this,me,"f")}get status(){return e(this,be,"f")}parseMessage(t,s){switch(_e.log({messageType:t}),t){case"maxFileLength":e(this,Q,"m",ne).call(this,s);break;case"getFileType":case"setFileType":e(this,Q,"m",ce).call(this,s);break;case"getFileLength":case"setFileLength":e(this,Q,"m",ue).call(this,s);break;case"getFileChecksum":case"setFileChecksum":e(this,Q,"m",pe).call(this,s);break;case"fileTransferStatus":e(this,Q,"m",Se).call(this,s);break;case"getFileBlock":e(this,Q,"m",ke).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}async send(t,s){e(this,Q,"m",Ce).call(this),e(this,Q,"m",X).call(this,t);const i=await H(s),n=[];n.push(e(this,Q,"m",le).call(this,t,!1));const r=i.byteLength;n.push(e(this,Q,"m",de).call(this,r,!1));const a=$(i);n.push(e(this,Q,"m",we).call(this,a,!1)),n.push(e(this,Q,"m",ye).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await e(this,Q,"m",Te).call(this,i)}async receive(t){e(this,Q,"m",Ce).call(this),e(this,Q,"m",X).call(this,t),await e(this,Q,"m",le).call(this,t),await e(this,Q,"m",ye).call(this,"startReceive")}async cancel(){e(this,Q,"m",Me).call(this),await e(this,Q,"m",ye).call(this,"cancel")}}K=Ae,ie=new WeakMap,oe=new WeakMap,ge=new WeakMap,me=new WeakMap,be=new WeakMap,De=new WeakMap,Q=new WeakSet,Z=function(){return this.eventDispatcher.dispatchEvent},X=function(e){_e.assertEnumWithError(e,Fe)},Y=function(e){_e.assertWithError(e in Fe,`invalid typeEnum ${e}`)},ee=function(e){_e.assertWithError(e in Ue,`invalid statusEnum ${e}`)},te=function(e){_e.assertEnumWithError(e,Le)},ne=function(t){_e.log("parseFileMaxLength",t);const s=t.getUint32(0,!0);_e.log(`maxLength: ${s/1024}kB`),e(this,Q,"m",re).call(this,s)},re=function(s){_e.log({maxLength:s}),t(this,ie,s,"f"),e(this,Q,"a",Z).call(this,"maxFileLength",{maxFileLength:s})},ae=function(e){_e.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},ce=function(t){_e.log("parseFileType",t);const s=t.getUint8(0);e(this,Q,"m",Y).call(this,s);const i=Fe[s];e(this,Q,"m",he).call(this,i)},he=function(s){_e.log({fileTransferType:s}),t(this,oe,s,"f"),e(this,Q,"a",Z).call(this,"getFileType",{fileType:s})},le=async function(t,s){if(e(this,Q,"m",X).call(this,t),this.type==t)return void _e.log(`redundant type assignment ${t}`);const i=this.waitForEvent("getFileType"),n=Fe.indexOf(t);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},ue=function(t){_e.log("parseFileLength",t);const s=t.getUint32(0,!0);e(this,Q,"m",fe).call(this,s)},fe=function(s){_e.log(`length: ${s/1024}kB`),t(this,ge,s,"f"),e(this,Q,"a",Z).call(this,"getFileLength",{fileLength:s})},de=async function(t,s){if(_e.assertTypeWithError(t,"number"),e(this,Q,"m",ae).call(this,t),this.length==t)return void _e.log(`redundant length assignment ${t}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,t,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},pe=function(t){_e.log("checksum",t);const s=t.getUint32(0,!0);e(this,Q,"m",ve).call(this,s)},ve=function(s){_e.log({checksum:s}),t(this,me,s,"f"),e(this,Q,"a",Z).call(this,"getFileChecksum",{fileChecksum:s})},we=async function(e,t){if(_e.assertTypeWithError(e,"number"),this.checksum==e)return void _e.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},ye=async function(t,s){e(this,Q,"m",te).call(this,t);const i=this.waitForEvent("fileTransferStatus"),n=Le.indexOf(t);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},Se=function(t){_e.log("parseFileStatus",t);const s=t.getUint8(0);e(this,Q,"m",ee).call(this,s);const i=Ue[s];e(this,Q,"m",Ee).call(this,i)},Ee=function(s){_e.log({status:s}),t(this,be,s,"f"),e(this,Q,"a",Z).call(this,"fileTransferStatus",{fileTransferStatus:s}),e(this,De,"f").length=0},Ce=function(){_e.assertWithError("idle"==e(this,be,"f"),"status is not idle")},Me=function(){_e.assertWithError("idle"!=e(this,be,"f"),"status is idle")},ke=async function(t){_e.log("parseFileBlock",t),e(this,De,"f").push(t.buffer);const s=e(this,De,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/e(this,ge,"f");if(_e.log(`received ${s} of ${e(this,ge,"f")} bytes (${100*i}%)`),e(this,Q,"a",Z).call(this,"fileTransferProgress",{progress:i}),s!=e(this,ge,"f"))return;_e.log("file transfer complete");let n,r=(new Date).toLocaleString();if("tflite"===this.type)r+=".tflite";n="undefined"!=typeof File?new File(e(this,De,"f"),r):new Blob(e(this,De,"f"));const a=$(await n.arrayBuffer());_e.log({checksum:a}),a==e(this,me,"f")?(_e.log("received file",n),e(this,Q,"a",Z).call(this,"getFileBlock",{fileTransferBlock:t}),e(this,Q,"a",Z).call(this,"fileTransferComplete",{direction:"receiving"}),e(this,Q,"a",Z).call(this,"fileReceived",{file:n})):_e.error(`wrong checksum - expected ${e(this,me,"f")}, got ${a}`)},Te=async function(t){return e(this,Q,"m",We).call(this,t)},We=async function t(s,i=0){if("sending"!=this.status)return;const n=s.slice(i,i+(this.mtu-3-3));_e.log("slicedBuffer",n);const r=1-(s.byteLength-i)/s.byteLength;if(_e.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*r}%)`),e(this,Q,"a",Z).call(this,"fileTransferProgress",{progress:r}),0!=n.byteLength)return await this.sendMessage([{type:"setFileBlock",data:n}]),e(this,Q,"m",t).call(this,s,i+n.byteLength);_e.log("finished sending buffer"),e(this,Q,"a",Z).call(this,"fileTransferComplete",{direction:"sending"})},se={value:0};const Oe=65536;function $e(e,t){const s=Date.now();var i;let n=(i=s)-i%Oe+e.getUint16(t,!0);return n<s&&(n+=65536),n}var Be;const Ne={min:1/0,max:-1/0,range:0};class Pe{constructor(){Be.set(this,Object.assign({},Ne))}reset(){Object.assign(e(this,Be,"f"),Ne)}update(t){e(this,Be,"f").min=Math.min(t,e(this,Be,"f").min),e(this,Be,"f").max=Math.max(t,e(this,Be,"f").max),e(this,Be,"f").range=e(this,Be,"f").max-e(this,Be,"f").min}getNormalization(t){return e(this,Be,"f").range*t||0}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}var Ve,ze,je,Ge;Be=new WeakMap;class qe{constructor(){Ve.set(this,{x:new Pe,y:new Pe})}reset(){e(this,Ve,"f").x.reset(),e(this,Ve,"f").y.reset()}update(t){e(this,Ve,"f").x.update(t.x),e(this,Ve,"f").y.update(t.y)}getNormalization(t){return{x:e(this,Ve,"f").x.getNormalization(t.x),y:e(this,Ve,"f").y.getNormalization(t.y)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}Ve=new WeakMap;const He=k("PressureDataManager",{log:!0}),Je=["pressure"],Qe=Je,Ke=8;class Ze{constructor(){ze.set(this,[]),je.set(this,void 0),Ge.set(this,new qe)}get positions(){return e(this,ze,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const s=[];for(let t=0,i=0;i<e.byteLength;t++,i+=2)s.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;He.log({positions:s}),t(this,ze,s,"f"),t(this,je,(i=this.numberOfSensors,n=()=>new Pe,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){e(this,je,"f").forEach((e=>e.reset())),e(this,Ge,"f").reset()}parseData(t,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,r=0;r<t.byteLength;n++,r+=2){const a=t.getUint16(r,!0),o=a*s,c=e(this,je,"f")[n].updateAndGetNormalization(o),h=this.positions[n];i.sensors[n]={rawValue:a,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=e(this,Ge,"f").updateAndGetNormalization(i.center)),He.log({pressure:i}),i}}ze=new WeakMap,je=new WeakMap,Ge=new WeakMap;const Xe=k("MotionSensorDataManager",{log:!0}),Ye=["still","walking","running","bicycle","vehicle","tilting"],et=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class tt{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const r={x:s,y:i,z:n};return Xe.log({vector:r}),r}parseQuaternion(e,t){let[s,i,n,r]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const a={x:s,y:i,z:n,w:r};return Xe.log({quaternion:a}),a}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1;const r={heading:s,pitch:i,roll:n};return Xe.log({euler:r}),r}parseStepCounter(e){Xe.log("parseStepCounter",e);const t=e.getUint32(0,!0);return Xe.log({stepCount:t}),t}parseActivity(e){Xe.log("parseActivity",e);const t={},s=e.getUint8(0);return Xe.log("activityBitfield",s.toString(2)),Ye.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),Xe.log("activity",t),t}parseDeviceOrientation(e){Xe.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=et[t];return Xe.assertWithError(s,"undefined deviceOrientation"),Xe.log({deviceOrientation:s}),s}}var st,it;const nt=["barometer"],rt=nt,at=k("BarometerSensorDataManager",{log:!0});class ot{constructor(){st.add(this)}parseData(t,s){const i=t.getUint32(0,!0)*s,n=e(this,st,"m",it).call(this,i);return at.log({pressure:i,altitude:n}),{pressure:i}}}st=new WeakSet,it=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const ct=k("ParseUtils",{log:!0});function ht(e,t=0){const s=e.getUint8(t++);return{string:V.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function lt(e,t,s,i,n=!1){let r=0;for(;r<e.byteLength;){const a=e.getUint8(r++);ct.assertWithError(a in t,`invalid messageTypeEnum ${a}`);const o=t[a];let c;n?(c=e.getUint16(r,!0),r+=2):c=e.getUint8(r++),ct.log({messageTypeEnum:a,messageType:o,messageLength:c,dataView:e,byteOffset:r});const h=q(e,r,c);ct.log({_dataView:h}),s(o,h,i),r+=c}}var gt;const ut=k("SensorDataManager",{log:!0}),ft=[...Je,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...nt],dt=[...Qe,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...rt],mt=["getPressurePositions","getSensorScalars","sensorData"],pt=[...mt,...ft];class vt{constructor(){this.pressureSensorDataManager=new Ze,this.motionSensorDataManager=new tt,this.barometerSensorDataManager=new ot,gt.set(this,new Map)}static AssertValidSensorType(e){ut.assertEnumWithError(e,ft)}static AssertValidSensorTypeEnum(e){ut.assertTypeWithError(e,"number"),ut.assertWithError(e in ft,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(ut.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(t){for(let s=0;s<t.byteLength;s+=5){const i=t.getUint8(s),n=ft[i];if(!n){ut.warn(`unknown sensorType index ${i}`);continue}const r=t.getFloat32(s+1,!0);ut.log({sensorType:n,sensorScalar:r}),e(this,gt,"f").set(n,r)}}parseData(e){ut.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=$e(e,t);t+=2;lt(new DataView(e.buffer,t),ft,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(t,s,{timestamp:i}){const n=e(this,gt,"f").get(t)||1;let r=null;switch(t){case"pressure":r=this.pressureSensorDataManager.parseData(s,n);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":r=this.motionSensorDataManager.parseVector3(s,n);break;case"gameRotation":case"rotation":r=this.motionSensorDataManager.parseQuaternion(s,n);break;case"orientation":r=this.motionSensorDataManager.parseEuler(s,n);break;case"stepCounter":r=this.motionSensorDataManager.parseStepCounter(s);break;case"stepDetector":r={};break;case"activity":r=this.motionSensorDataManager.parseActivity(s);break;case"deviceOrientation":r=this.motionSensorDataManager.parseDeviceOrientation(s);break;case"barometer":r=this.barometerSensorDataManager.parseData(s,n);break;default:ut.error(`uncaught sensorType "${t}"`)}ut.assertWithError(null!=r,`no sensorData defined for sensorType "${t}"`),ut.log({sensorType:t,sensorData:r}),this.dispatchEvent(t,{sensorType:t,[t]:r,timestamp:i}),this.dispatchEvent("sensorData",{sensorType:t,[t]:r,timestamp:i})}}var wt,yt,bt,St,Et,Ct,Mt,Dt,kt,Tt,Wt,_t,It;gt=new WeakMap;const Ft=k("SensorConfigurationManager",{log:!0}),Ut=65535,Lt=5,Rt=["getSensorConfiguration","setSensorConfiguration"],xt=Rt;class At{constructor(){wt.add(this),St.set(this,void 0),Ct.set(this,void 0),J(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return e(this,Ct,"f")}async setConfiguration(t,s){if(s&&(t=Object.assign({...this.zeroSensorConfiguration},t)),Ft.log({newSensorConfiguration:t}),e(this,wt,"m",Dt).call(this,t))return void Ft.log("redundant sensor configuration");const i=e(this,wt,"m",_t).call(this,t);Ft.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get ZeroSensorConfiguration(){return e(this,yt,"f",It)}get zeroSensorConfiguration(){const e={};return ft.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(t,s){switch(Ft.log({messageType:t}),t){case"getSensorConfiguration":case"setSensorConfiguration":const i=e(this,wt,"m",kt).call(this,s);e(this,wt,"m",Mt).call(this,i);break;default:throw Error(`uncaught messageType ${t}`)}}}var Ot,$t,Bt,Nt,Pt,Vt,zt,jt,Gt,qt,Ht,Jt,Qt,Kt,Zt,Xt,Yt,es,ts,ss,is,ns,rs,as,os,cs,hs,ls,gs,us;yt=At,St=new WeakMap,Ct=new WeakMap,wt=new WeakSet,bt=function(){return this.eventDispatcher.dispatchEvent},Et=function(t){Ft.assertWithError(e(this,St,"f"),"must get initial sensorConfiguration");const s=e(this,St,"f")?.includes(t);return Ft.assert(s,`unavailable sensor type "${t}"`),s},Mt=function(s){t(this,Ct,s,"f"),Ft.log({updatedConfiguration:e(this,Ct,"f")}),e(this,wt,"a",bt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},Dt=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},kt=function(e){const s={};for(let t=0;t<e.byteLength;t+=3){const i=e.getUint8(t),n=ft[i];if(!n){Ft.warn(`unknown sensorType index ${i}`);continue}const r=e.getUint16(t+1,!0);Ft.log({sensorType:n,sensorRate:r}),s[n]=r}return Ft.log({parsedSensorConfiguration:s}),t(this,St,Object.keys(s),"f"),s},Tt=function(e){Ft.assertTypeWithError(e,"number"),Ft.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),Ft.assertWithError(e<65535,`sensorRate must be 0 or greater (got ${e})`),Ft.assertWithError(e%5==0,"sensorRate must be multiple of 5")},Wt=function(t){e(yt,yt,"m",Tt).call(yt,t)},_t=function(t){let s=Object.keys(t);s=s.filter((t=>e(this,wt,"m",Et).call(this,t)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{vt.AssertValidSensorType(s);const r=ft.indexOf(s);i.setUint8(3*n,r);const a=t[s];e(this,wt,"m",Wt).call(this,a),i.setUint16(3*n+1,a,!0)})),Ft.log({sensorConfigurationData:i}),i},It={value:{}},ft.forEach((t=>{e(yt,yt,"f",It)[t]=0}));const fs=k("TfliteManager",{log:!0}),ds=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],ms=ds,ps=["classification","regression"],vs=["pressure","linearAcceleration","gyroscope","magnetometer"];class ws{constructor(){Ot.add(this),Pt.set(this,void 0),jt.set(this,void 0),Ht.set(this,void 0),Kt.set(this,[]),Yt.set(this,void 0),is.set(this,void 0),as.set(this,void 0),hs.set(this,void 0),J(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return e(this,Pt,"f")}async setName(e,t){if(fs.assertTypeWithError(e,"string"),this.name==e)return void fs.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=P.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return e(this,jt,"f")}async setTask(t,s){if(e(this,Ot,"m",$t).call(this,t),this.task==t)return void fs.log(`redundant task assignment ${t}`);const i=this.waitForEvent("getTfliteTask"),n=ps.indexOf(t);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return e(this,Ht,"f")}async setSampleRate(t,s){if(fs.assertTypeWithError(t,"number"),t-=t%5,fs.assertWithError(t>=5,`sampleRate must be multiple of 5 greater than 0 (got ${t})`),e(this,Ht,"f")==t)return void fs.log(`redundant sampleRate assignment ${t}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static AssertValidSensorType(e){vt.AssertValidSensorType(e),fs.assertWithError(vs.includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return e(this,Kt,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{ws.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>ft.indexOf(e))).sort();fs.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return e(this,Yt,"f")}get captureDelay(){return e(this,is,"f")}async setCaptureDelay(t,s){if(fs.assertTypeWithError(t,"number"),e(this,is,"f")==t)return void fs.log(`redundant captureDelay assignment ${t}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return e(this,as,"f")}async setThreshold(t,s){if(fs.assertTypeWithError(t,"number"),fs.assertWithError(t>=0,`threshold must be positive (got ${t})`),e(this,as,"f")==t)return void fs.log(`redundant threshold assignment ${t}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,t,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return e(this,hs,"f")}async setInferencingEnabled(t,s=!0){if(fs.assertTypeWithError(t,"boolean"),!t&&!this.isReady)return;if(e(this,Ot,"m",ss).call(this),e(this,hs,"f")==t)return void fs.log(`redundant inferencingEnabled assignment ${t}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(t)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(t,s){switch(fs.log({messageType:t}),t){case"getTfliteName":case"setTfliteName":e(this,Ot,"m",Vt).call(this,s);break;case"getTfliteTask":case"setTfliteTask":e(this,Ot,"m",Gt).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":e(this,Ot,"m",Jt).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":e(this,Ot,"m",Zt).call(this,s);break;case"tfliteIsReady":e(this,Ot,"m",es).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":e(this,Ot,"m",ns).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":e(this,Ot,"m",os).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":e(this,Ot,"m",ls).call(this,s);break;case"tfliteInference":e(this,Ot,"m",us).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}}var ys,bs,Ss,Es,Cs;Pt=new WeakMap,jt=new WeakMap,Ht=new WeakMap,Kt=new WeakMap,Yt=new WeakMap,is=new WeakMap,as=new WeakMap,hs=new WeakMap,Ot=new WeakSet,$t=function(e){fs.assertEnumWithError(e,ps)},Bt=function(e){fs.assertWithError(e in ps,`invalid taskEnum ${e}`)},Nt=function(){return this.eventDispatcher.dispatchEvent},Vt=function(t){fs.log("parseName",t);const s=V.decode(t.buffer);e(this,Ot,"m",zt).call(this,s)},zt=function(s){fs.log({name:s}),t(this,Pt,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteName",{tfliteName:s})},Gt=function(t){fs.log("parseTask",t);const s=t.getUint8(0);e(this,Ot,"m",Bt).call(this,s);const i=ps[s];e(this,Ot,"m",qt).call(this,i)},qt=function(s){fs.log({task:s}),t(this,jt,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteTask",{tfliteTask:s})},Jt=function(t){fs.log("parseSampleRate",t);const s=t.getUint16(0,!0);e(this,Ot,"m",Qt).call(this,s)},Qt=function(s){fs.log({sampleRate:s}),t(this,Ht,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteSampleRate",{tfliteSampleRate:s})},Zt=function(t){fs.log("parseSensorTypes",t);const s=[];for(let e=0;e<t.byteLength;e++){const i=t.getUint8(e),n=ft[i];n?s.push(n):fs.error(`invalid sensorTypeEnum ${i}`)}e(this,Ot,"m",Xt).call(this,s)},Xt=function(s){fs.log({sensorTypes:s}),t(this,Kt,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:s})},es=function(t){fs.log("parseIsReady",t);const s=Boolean(t.getUint8(0));e(this,Ot,"m",ts).call(this,s)},ts=function(s){fs.log({isReady:s}),t(this,Yt,s,"f"),e(this,Ot,"a",Nt).call(this,"tfliteIsReady",{tfliteIsReady:s})},ss=function(){fs.assertWithError(this.isReady,"tflite is not ready")},ns=function(t){fs.log("parseCaptureDelay",t);const s=t.getUint16(0,!0);e(this,Ot,"m",rs).call(this,s)},rs=function(s){fs.log({captureDelay:s}),t(this,is,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:s})},os=function(t){fs.log("parseThreshold",t);const s=t.getFloat32(0,!0);e(this,Ot,"m",cs).call(this,s)},cs=function(s){fs.log({threshold:s}),t(this,as,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteThreshold",{tfliteThreshold:s})},ls=function(t){fs.log("parseInferencingEnabled",t);const s=Boolean(t.getUint8(0));e(this,Ot,"m",gs).call(this,s)},gs=function(s){fs.log({inferencingEnabled:s}),t(this,hs,s,"f"),e(this,Ot,"a",Nt).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:s})},us=function(t){fs.log("parseInference",t);const s=$e(t,0);fs.log({timestamp:s});const i=[];for(let e=0,s=2;s<t.byteLength;e++,s+=4){const e=t.getFloat32(s,!0);i.push(e)}fs.log("values",i);const n={timestamp:s,values:i};e(this,Ot,"a",Nt).call(this,"tfliteInference",{tfliteInference:n})};const Ms=k("DeviceInformationManager",{log:!0}),Ds=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],ks=[...Ds,"deviceInformation"];class Ts{constructor(){ys.add(this),Ss.set(this,{})}get information(){return e(this,Ss,"f")}clear(){t(this,Ss,{},"f")}parseMessage(t,s){switch(Ms.log({messageType:t}),t){case"manufacturerName":const i=V.decode(s.buffer);Ms.log({manufacturerName:i}),e(this,ys,"m",Cs).call(this,{manufacturerName:i});break;case"modelNumber":const n=V.decode(s.buffer);Ms.log({modelNumber:n}),e(this,ys,"m",Cs).call(this,{modelNumber:n});break;case"softwareRevision":const r=V.decode(s.buffer);Ms.log({softwareRevision:r}),e(this,ys,"m",Cs).call(this,{softwareRevision:r});break;case"hardwareRevision":const a=V.decode(s.buffer);Ms.log({hardwareRevision:a}),e(this,ys,"m",Cs).call(this,{hardwareRevision:a});break;case"firmwareRevision":const o=V.decode(s.buffer);Ms.log({firmwareRevision:o}),e(this,ys,"m",Cs).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),Ms.log({pnpId:c}),e(this,ys,"m",Cs).call(this,{pnpId:c});break;case"serialNumber":const h=V.decode(s.buffer);Ms.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}var Ws,_s,Is,Fs,Us,Ls,Rs,xs,As,Os,$s,Bs,Ns,Ps,Vs,zs,js,Gs;Ss=new WeakMap,ys=new WeakSet,bs=function(){return this.eventDispatcher.dispatchEvent},Es=function(){return Ds.every((t=>t in e(this,Ss,"f")))},Cs=function(t){Ms.log({partialDeviceInformation:t});Object.keys(t).forEach((s=>{e(this,ys,"a",bs).call(this,s,{[s]:t[s]})})),Object.assign(e(this,Ss,"f"),t),Ms.log({deviceInformation:e(this,Ss,"f")}),e(this,ys,"a",Es)&&(Ms.log("completed deviceInformation"),e(this,ys,"a",bs).call(this,"deviceInformation",{deviceInformation:this.information}))};const qs=k("InformationManager",{log:!0}),Hs=["leftInsole","rightInsole"],Js=["left","right"],Qs=2,Ks=30,Zs=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],Xs=Zs;class Ys{constructor(){Ws.add(this),Is.set(this,!1),Us.set(this,void 0),Rs.set(this,void 0),As.set(this,""),Os.set(this,void 0),Ps.set(this,0),zs.set(this,!1),J(this)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return e(this,Is,"f")}get batteryCurrent(){return e(this,Us,"f")}async getBatteryCurrent(){qs.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}get id(){return e(this,Rs,"f")}get name(){return e(this,As,"f")}updateName(s){qs.assertTypeWithError(s,"string"),t(this,As,s,"f"),qs.log({updatedName:e(this,As,"f")}),e(this,Ws,"a",_s).call(this,"getName",{name:e(this,As,"f")})}async setName(e){qs.assertTypeWithError(e,"string"),qs.assertWithError(e.length>=2,`name must be greater than 2 characters long ("${e}" is ${e.length} characters long)`),qs.assertWithError(e.length<30,`name must be less than 30 characters long ("${e}" is ${e.length} characters long)`);const t=P.encode(e);qs.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return e(this,Os,"f")}get typeEnum(){return Hs.indexOf(this.type)}updateType(s){e(this,Ws,"m",$s).call(this,s),s!=this.type?(t(this,Os,s,"f"),qs.log({updatedType:e(this,Os,"f")}),e(this,Ws,"a",_s).call(this,"getType",{type:e(this,Os,"f")})):qs.log("redundant type assignment")}async setType(t){e(this,Ws,"m",$s).call(this,t);const s=Hs.indexOf(t);e(this,Ws,"m",Ns).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return e(this,Ps,"f")}get isCurrentTimeSet(){return e(this,zs,"f")}parseMessage(t,s){switch(qs.log({messageType:t}),t){case"isCharging":const i=Boolean(s.getUint8(0));qs.log({isCharging:i}),e(this,Ws,"m",Fs).call(this,i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);qs.log({batteryCurrent:n}),e(this,Ws,"m",Ls).call(this,n);break;case"getId":const r=V.decode(s.buffer);qs.log({id:r}),e(this,Ws,"m",xs).call(this,r);break;case"getName":case"setName":const a=V.decode(s.buffer);qs.log({name:a}),this.updateName(a);break;case"getType":case"setType":const o=s.getUint8(0),c=Hs[o];qs.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);qs.log({mtu:h}),e(this,Ws,"m",Vs).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));e(this,Ws,"m",js).call(this,l);break;default:throw Error(`uncaught messageType ${t}`)}}clear(){t(this,zs,!1,"f")}}Is=new WeakMap,Us=new WeakMap,Rs=new WeakMap,As=new WeakMap,Os=new WeakMap,Ps=new WeakMap,zs=new WeakMap,Ws=new WeakSet,_s=function(){return this.eventDispatcher.dispatchEvent},Fs=function(s){qs.assertTypeWithError(s,"boolean"),t(this,Is,s,"f"),qs.log({isCharging:e(this,Is,"f")}),e(this,Ws,"a",_s).call(this,"isCharging",{isCharging:e(this,Is,"f")})},Ls=function(s){qs.assertTypeWithError(s,"number"),t(this,Us,s,"f"),qs.log({batteryCurrent:e(this,Us,"f")}),e(this,Ws,"a",_s).call(this,"getBatteryCurrent",{batteryCurrent:e(this,Us,"f")})},xs=function(s){qs.assertTypeWithError(s,"string"),t(this,Rs,s,"f"),qs.log({id:e(this,Rs,"f")}),e(this,Ws,"a",_s).call(this,"getId",{id:e(this,Rs,"f")})},$s=function(e){qs.assertEnumWithError(e,Hs)},Bs=function(e){qs.assertTypeWithError(e,"number"),qs.assertWithError(e in Hs,`invalid typeEnum ${e}`)},Ns=async function(t){e(this,Ws,"m",Bs).call(this,t);const s=Uint8Array.from([t]);qs.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Vs=function(s){qs.assertTypeWithError(s,"number"),e(this,Ps,"f")!=s?(t(this,Ps,s,"f"),e(this,Ws,"a",_s).call(this,"getMtu",{mtu:e(this,Ps,"f")})):qs.log("redundant mtu assignment",s)},js=function(s){qs.log({currentTime:s}),t(this,zs,0!=s,"f"),e(this,zs,"f")||e(this,Ws,"m",Gs).call(this)},Gs=async function(){qs.log("setting current time...");const e=new DataView(new ArrayBuffer(8));e.setBigUint64(0,BigInt(Date.now()),!0);const t=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:e.buffer}]),await t};const ei=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var ti,si,ii,ni,ri,ai,oi,ci,hi,li,gi,ui,fi,di,mi,pi;const vi=k("VibrationManager"),wi=["front","rear"],yi=["waveformEffect","waveform"],bi=8,Si=2550,Ei=1270,Ci=3,Mi=20,Di=6;class ki{constructor(){ti.add(this),J(this)}async triggerVibration(t,s=!0){let i;t.forEach((t=>{const{type:s}=t;let n,{locations:r}=t;switch(r=r||wi.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=t;n=e(this,ti,"m",fi).call(this,r,s,i)}break;case"waveform":{const{segments:s}=t;n=e(this,ti,"m",di).call(this,r,s)}break;default:throw Error(`invalid vibration type "${s}"`)}vi.log({type:s,arrayBuffer:n}),i=j(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var Ti,Wi,_i,Ii,Fi,Ui,Li,Ri,xi,Ai,Oi,$i,Bi,Ni;ti=new WeakSet,si=function(e){vi.assertTypeWithError(e,"string"),vi.assertWithError(wi.includes(e),`invalid location "${e}"`)},ii=function(t){e(this,ti,"m",ri).call(this,t),t.forEach((t=>{e(this,ti,"m",si).call(this,t)}))},ni=function(t){e(this,ti,"m",ii).call(this,t);let s=0;return t.forEach((e=>{const t=wi.indexOf(e);s|=1<<t})),vi.log({locationsBitmask:s}),vi.assertWithError(s>0,"locationsBitmask must not be zero"),s},ri=function(e){vi.assertWithError(Array.isArray(e),"passed non-array"),vi.assertWithError(e.length>0,"passed empty array")},ai=function(e){vi.assertWithError(ei.includes(e),`invalid waveformEffect "${e}"`)},oi=function(t){if(null!=t.effect){const s=t.effect;e(this,ti,"m",ai).call(this,s)}else{if(null==t.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:e}=t;vi.assertWithError(e>=0,`delay must be 0ms or greater (got ${e})`),vi.assertWithError(e<=Ei,`delay must be 1270ms or less (got ${e})`)}}if(null!=t.loopCount){const{loopCount:s}=t;e(this,ti,"m",ci).call(this,s)}},ci=function(e){vi.assertTypeWithError(e,"number"),vi.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),vi.assertWithError(e<=3,`waveformEffectSegmentLoopCount must be 3 or fewer (got ${e})`)},hi=function(t){e(this,ti,"m",ri).call(this,t),vi.assertWithError(t.length<=8,`must have 8 waveformEffectSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,ti,"m",oi).call(this,t)}))},li=function(e){vi.assertTypeWithError(e,"number"),vi.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),vi.assertWithError(e<=6,`waveformEffectSequenceLoopCount must be 6 or fewer (got ${e})`)},gi=function(e){vi.assertTypeWithError(e.amplitude,"number"),vi.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),vi.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),vi.assertTypeWithError(e.duration,"number"),vi.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),vi.assertWithError(e.duration<=Si,`duration must be 2550ms or less (got ${e.duration}ms)`)},ui=function(t){e(this,ti,"m",ri).call(this,t),vi.assertWithError(t.length<=20,`must have 20 waveformSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,ti,"m",gi).call(this,t)}))},fi=function(t,s,i=0){e(this,ti,"m",hi).call(this,s),e(this,ti,"m",li).call(this,i);let n=[],r=0;const a=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||a&&e<8;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[r++]=ei.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[r++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<8;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[r]=0);const i=e%4*2;n[r]|=t<<i,3!=e&&7!=e||r++}0!=i&&(n[r++]=i);const c=new DataView(Uint8Array.from(n).buffer);return vi.log({dataArray:n,dataView:c}),e(this,ti,"m",pi).call(this,t,"waveformEffect",c)},di=function(t,s){e(this,ti,"m",ui).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),vi.log({dataView:i}),e(this,ti,"m",pi).call(this,t,"waveform",i)},mi=function(e){vi.assertTypeWithError(e,"string"),vi.assertWithError(yi.includes(e),`invalid vibrationType "${e}"`)},pi=function(t,s,i){vi.assertWithError(i?.byteLength>0,"no data received");const n=e(this,ti,"m",ni).call(this,t);e(this,ti,"m",mi).call(this,s);const r=yi.indexOf(s);vi.log({locationsBitmask:n,vibrationTypeIndex:r,dataView:i});const a=j(n,r,i.byteLength,i);return vi.log({data:a}),a};const Pi=k("BaseConnectionManager",{log:!0}),Vi=["notConnected","connecting","connected","disconnecting"],zi=[...Vi,"connectionStatus","isConnected"],ji=[...Zs,...Rt,...mt,"triggerVibration",...ds,...Ie],Gi=["batteryLevel"],qi=["rx","tx"],Hi=[...Gi,...Ds,...qi,...ji,"smp"];class Ji{get baseConstructor(){return this.constructor}static get isSupported(){return!1}get isSupported(){return this.baseConstructor.isSupported}get type(){return this.baseConstructor.type}constructor(){Ti.add(this),Fi.set(this,"notConnected"),Oi.set(this,[]),Bi.set(this,new x(e(this,Ti,"m",Ni).bind(this),5e3)),e(this,Ti,"m",Ii).call(this)}get status(){return e(this,Fi,"f")}set status(s){Pi.assertEnumWithError(s,Vi),e(this,Fi,"f")!=s?(Pi.log(`new connection status "${s}"`),t(this,Fi,s,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,Bi,"f").start():e(this,Bi,"f").stop(),"notConnected"==e(this,Fi,"f")&&(this.mtu=void 0)):Pi.log(`tried to assign same connection status "${s}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,Ti,"m",Ui).call(this),e(this,Ti,"m",Li).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,Ti,"m",Ui).call(this),e(this,Ti,"m",Li).call(this),Pi.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,Ti,"m",Ri).call(this),e(this,Ti,"m",xi).call(this),this.status="disconnecting",Pi.log("disconnecting from device...")}async sendSmpMessage(t){e(this,Ti,"m",Ai).call(this),Pi.log("sending smp message",t)}async sendTxMessages(t,s=!0){if(e(this,Ti,"m",Ai).call(this),t&&e(this,Oi,"f").push(...t),!s)return;Pi.log("sendTxMessages",e(this,Oi,"f").slice());const i=e(this,Oi,"f").map((t=>{e(Wi,Wi,"m",_i).call(Wi,t.type);const s=ji.indexOf(t.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,t.data?.byteLength||0,!0),j(s,i,t.data)}));if(this.mtu)for(;i.length>0;){let e=0,t=0;i.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=i.splice(0,t);Pi.log({arrayBufferCount:t,arrayBuffersToSend:s});const n=j(...s);Pi.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=j(...i);Pi.log("sending arrayBuffer",e),await this.sendTxData(e)}e(this,Oi,"f").length=0}async sendTxData(e){Pi.log("sendTxData",e)}parseRxMessage(t){lt(t,ji,e(this,Ti,"m",$i).bind(this),null,!0)}}Wi=Ji,Fi=new WeakMap,Oi=new WeakMap,Bi=new WeakMap,Ti=new WeakSet,_i=function(e){Pi.assertEnumWithError(e,ji)},Ii=function(){Pi.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Ui=function(){Pi.assertWithError(!this.isConnected,"device is already connected")},Li=function(){Pi.assertWithError("connecting"!=this.status,"device is already connecting")},Ri=function(){Pi.assertWithError(this.isConnected,"device is not connected")},xi=function(){Pi.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Ai=function(){e(this,Ti,"m",Ri).call(this),e(this,Ti,"m",xi).call(this)},$i=function(e,t){Pi.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Ni=function(){this.isConnected||(Pi.log("timer detected disconnection"),this.status="notConnected")};const Qi=k("EventUtils",{log:!1});function Ki(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;Qi.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function Zi(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;Qi.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Xi=k("bluetoothUUIDs",{log:!1});if(i)var Yi=window.BluetoothUUID;function en(e){return Xi.assertTypeWithError(e,"string"),Xi.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function tn(e){return Yi?.getCharacteristic?.(e)}function sn(e){return Yi?.getService?.(e)}const nn=Object.freeze({services:{deviceInformation:{uuid:sn("device_information"),characteristics:{manufacturerName:{uuid:tn("manufacturer_name_string")},modelNumber:{uuid:tn("model_number_string")},hardwareRevision:{uuid:tn("hardware_revision_string")},firmwareRevision:{uuid:tn("firmware_revision_string")},softwareRevision:{uuid:tn("software_revision_string")},pnpId:{uuid:tn("pnp_id")},serialNumber:{uuid:tn("serial_number_string")}}},battery:{uuid:sn("battery_service"),characteristics:{batteryLevel:{uuid:tn("battery_level")}}},main:{uuid:en("0000"),characteristics:{rx:{uuid:en("1000")},tx:{uuid:en("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),rn=[nn.services.main.uuid],an=[nn.services.deviceInformation.uuid,nn.services.battery.uuid,nn.services.smp.uuid];function on(e){e=e.toString().toLowerCase();return Object.keys(nn.services).find((t=>{let s=nn.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const cn=[],hn=[];function ln(e){var t;return e=e.toString().toLowerCase(),Object.values(nn.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function gn(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}switch(e){case"tx":case"smp":t.writeWithoutResponse=!0}return t}Object.values(nn.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];rn.includes(e.uuid)&&(cn.push(i.uuid),t.push(s)),hn.push(i.uuid)}))}),[]);const un=k("BluetoothConnectionManager",{log:!0});class fn extends Ji{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){un.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var dn,mn,pn,vn,wn,yn,bn,Sn,En,Cn,Mn;const Dn=k("WebBluetoothConnectionManager",{log:!0});var kn;i&&(kn=window.navigator.bluetooth);class Tn extends fn{constructor(){super(...arguments),dn.add(this),mn.set(this,{characteristicvaluechanged:e(this,dn,"m",En).bind(this)}),pn.set(this,{gattserverdisconnected:e(this,dn,"m",Mn).bind(this)}),vn.set(this,void 0),wn.set(this,new Map),yn.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(kn)}static get type(){return"webBluetooth"}get device(){return e(this,vn,"f")}set device(s){e(this,vn,"f")!=s?(e(this,vn,"f")&&Zi(e(this,vn,"f"),e(this,pn,"f")),s&&Ki(s,e(this,pn,"f")),t(this,vn,s,"f")):Dn.log("tried to assign the same BluetoothDevice")}get server(){return e(this,vn,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await kn.requestDevice({filters:[{services:rn}],optionalServices:i?an:[]});Dn.log("got BluetoothDevice"),this.device=t,Dn.log("connecting to device...");const s=await this.server.connect();Dn.log(`connected to device? ${s.connected}`),await e(this,dn,"m",bn).call(this),Dn.log("fully connected"),this.status="connected"}catch(t){Dn.error(t),this.status="notConnected",this.server?.disconnect(),e(this,dn,"m",Sn).call(this)}}async disconnect(){await e(this,dn,"m",Sn).call(this),await super.disconnect(),this.server?.disconnect(),this.status="notConnected"}async writeCharacteristic(t,s){super.writeCharacteristic(t,s);const i=e(this,yn,"f").get(t);Dn.assertWithError(i,`${t} characteristic not found`),Dn.log("writing characteristic",i,s);const n=i.properties||gn(t);n.writeWithoutResponse?(Dn.log("writing without response"),await i.writeValueWithoutResponse(s)):(Dn.log("writing with response"),await i.writeValueWithResponse(s)),Dn.log("wrote characteristic"),n.read&&!n.notify&&(Dn.log("reading value after write..."),await i.readValue(),(o||c)&&e(this,dn,"m",Cn).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),Dn.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){Dn.error(e),this.isInRange=!1}this.isConnected?(Dn.log("successfully reconnected!"),await e(this,dn,"m",bn).call(this),this.status="connected"):(Dn.log("unable to reconnect"),this.status="notConnected")}}mn=new WeakMap,pn=new WeakMap,vn=new WeakMap,wn=new WeakMap,yn=new WeakMap,dn=new WeakSet,bn=async function(){e(this,dn,"m",Sn).call(this),Dn.log("getting services...");const t=await this.server.getPrimaryServices();Dn.log("got services",t.length),await this.server.getPrimaryService("8d53dc1d-1db7-4cd3-868b-8a527460aa84"),Dn.log("getting characteristics...");for(const s in t){const i=t[s];Dn.log({service:i});const n=on(i.uuid);Dn.assertWithError(n,`no name found for service uuid "${i.uuid}"`),Dn.log(`got "${n}" service`),i.name=n,e(this,wn,"f").set(n,i),Dn.log(`getting characteristics for "${n}" service`);const r=await i.getCharacteristics();Dn.log(`got characteristics for "${n}" service`);for(const t in r){const s=r[t];Dn.log({characteristic:s});const i=ln(s.uuid);Dn.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),Dn.log(`got "${i}" characteristic in "${n}" service`),s.name=i,e(this,yn,"f").set(i,s),Ki(s,e(this,mn,"f"));const a=s.properties||gn(i);a.notify&&(Dn.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),a.read&&(Dn.log(`reading "${i}" characteristic...`),await s.readValue(),(o||c)&&e(this,dn,"m",Cn).call(this,s))}}},Sn=async function(){this.device&&Zi(this.device,e(this,pn,"f"));const t=Array.from(e(this,yn,"f").keys()).map((t=>{const s=e(this,yn,"f").get(t);Zi(s,e(this,mn,"f"));if((s.properties||gn(t)).notify)return Dn.log(`stopping notifications for "${t}" characteristic`),s.stopNotifications()}));return Promise.allSettled(t)},En=function(t){Dn.log("oncharacteristicvaluechanged");const s=t.target;e(this,dn,"m",Cn).call(this,s)},Cn=function(e){Dn.log("onCharacteristicValue");const t=e.name;Dn.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),Dn.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;Dn.assertWithError(s,`no data found for "${t}" characteristic`),Dn.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){Dn.error(e)}},Mn=function(){Dn.log("gattserverdisconnected"),this.status="notConnected"};const Wn=4294967296,_n=9007199254740992;const In={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function r(e){let r=s.byteLength;const a=n+e;for(;r<a;)r<<=1;if(r!==s.byteLength){const e=i;s=new ArrayBuffer(r),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function a(){n+=t}function o(e){a(r(1).setUint8(n,e))}function c(e){const t=r(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);a()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){a(r(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){a(r(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%Wn,s=(e-t)/Wn,i=r(8);i.setUint32(n,s),i.setUint32(n+4,t),a()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=_n)return h(0,t);if(-_n<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){a(r(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),g=new DataView(l);for(let e=0;e<n;++e)g.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function r(e,t){return n+=e,t}function a(t){return r(t,new Uint8Array(e,n,t))}function o(){return r(1,i.getUint8(n))}function c(){return r(2,i.getUint16(n))}function h(){return r(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function g(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*Wn+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function u(e){const t=o();if(255===t)return-1;const s=g(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function f(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const r=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==r)return(i?-1:1)*r*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|r<<13),t.getFloat32(0)}();case 26:return r(4,i.getFloat32(n));case 27:return r(8,i.getFloat64(n))}if(v=g(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=u(d))>=0;)t+=v,e.push(a(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return a(v);case 3:if(v<0)for(;(v=u(d))>=0;)f(w,v);else f(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},Fn=k("mcumgr",{log:!0}),Un=0,Ln=1,Rn=2,xn=3,An=0,On=1,$n=8,Bn=0,Nn=2,Pn=3,Vn=5,zn=0,jn=1,Gn=5,qn=0;class Hn{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(In.encode(i))]);const r=255&n.length,a=[e,0,n.length>>8,r,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,a}_notification(e){Fn.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,r,,a]=e,o=In.decode(e.slice(8).buffer),c=256*s+i,h=256*n+r;return Fn.log("mcumgr - Process Message - Group: "+h+", Id: "+a+", Off: "+o.off),h===On&&a===jn&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===xn&&h===$n&&a===qn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===Ln&&h===$n&&a===qn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),Fn.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}))}cmdReset(){return this._getMessage(Rn,An,Vn)}smpEcho(e){return this._getMessage(Rn,An,Bn,{d:e})}cmdImageState(){return this._getMessage(Un,On,zn)}cmdImageErase(){return this._getMessage(Rn,On,Gn,{})}cmdImageTest(e){return this._getMessage(Rn,On,zn,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(Rn,On,zn,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-In.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(Rn,On,jn,e);Fn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?Fn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?Fn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(Fn.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-In.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(Rn,$n,qn,e);Fn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?Fn.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage(Un,$n,qn,e);Fn.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const r=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=r,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var Jn,Qn,Kn,Zn,Xn,Yn,er,tr,sr,ir,nr,rr,ar,or,cr,hr,lr,gr,ur,fr,dr;const mr=k("FirmwareManager",{log:!0}),pr=["smp"],vr=[...pr,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],wr=["idle","uploading","uploaded","pending","testing","erasing"];class yr{constructor(){Jn.add(this),Kn.set(this,"idle"),Xn.set(this,void 0),tr.set(this,void 0),sr.set(this,new Hn),e(this,Jn,"m",ir).call(this),J(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(t,s){if(mr.log({messageType:t}),"smp"!==t)throw Error(`uncaught messageType ${t}`);e(this,sr,"f")._notification(Array.from(new Uint8Array(s.buffer))),e(this,Jn,"a",Qn).call(this,"smp",{dataView:s})}async uploadFirmware(t){mr.log("uploadFirmware",t);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await H(t),n=await e(this,sr,"f").imageInfo(i);mr.log({imageInfo:n}),e(this,sr,"f").cmdUpload(i,1),e(this,Jn,"m",Zn).call(this,"uploading"),await s}get status(){return e(this,Kn,"f")}get images(){return e(this,Xn,"f")}async getImages(){const t=this.waitForEvent("firmwareImages");mr.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(e(this,sr,"f").cmdImageState()).buffer),await t}async testImage(t=1){if(e(this,Jn,"m",er).call(this,t),e(this,Jn,"m",Yn).call(this),!e(this,Xn,"f")[t])return void mr.log(`image ${t} not found`);if(1==e(this,Xn,"f")[t].pending)return void mr.log(`image ${t} is already pending`);if(e(this,Xn,"f")[t].empty)return void mr.log(`image ${t} is empty`);const s=this.waitForEvent("smp");mr.log("testing firmware image..."),this.sendMessage(Uint8Array.from(e(this,sr,"f").cmdImageTest(e(this,Xn,"f")[t].hash)).buffer),await s}async eraseImage(){e(this,Jn,"m",Yn).call(this);const t=this.waitForEvent("smp");mr.log("erasing image..."),this.sendMessage(Uint8Array.from(e(this,sr,"f").cmdImageErase()).buffer),e(this,Jn,"m",Zn).call(this,"erasing"),await t,await this.getImages()}async confirmImage(t=0){if(e(this,Jn,"m",er).call(this,t),e(this,Jn,"m",Yn).call(this),!0===e(this,Xn,"f")[t].confirmed)return void mr.log(`image ${t} is already confirmed`);const s=this.waitForEvent("smp");mr.log("confirming image..."),this.sendMessage(Uint8Array.from(e(this,sr,"f").cmdImageConfirm(e(this,Xn,"f")[t].hash)).buffer),await s}async echo(t){mr.assertTypeWithError(t,"string");const s=this.waitForEvent("smp");mr.log("sending echo..."),this.sendMessage(Uint8Array.from(e(this,sr,"f").smpEcho(t)).buffer),await s}async reset(){const t=this.waitForEvent("smp");mr.log("resetting..."),this.sendMessage(Uint8Array.from(e(this,sr,"f").cmdReset()).buffer),await t}get mtu(){return e(this,tr,"f")}set mtu(s){t(this,tr,s,"f"),e(this,sr,"f")._mtu=s}}var br,Sr,Er,Cr,Mr,Dr,kr,Tr,Wr,_r,Ir,Fr,Ur,Lr,Rr,xr,Ar,Or;Kn=new WeakMap,Xn=new WeakMap,tr=new WeakMap,sr=new WeakMap,Jn=new WeakSet,Qn=function(){return this.eventDispatcher.dispatchEvent},Zn=function(s){mr.assertEnumWithError(s,wr),e(this,Kn,"f")!=s?(t(this,Kn,s,"f"),mr.log({firmwareStatus:e(this,Kn,"f")}),e(this,Jn,"a",Qn).call(this,"firmwareStatus",{firmwareStatus:e(this,Kn,"f")})):mr.log(`redundant firmwareStatus assignment "${s}"`)},Yn=function(){mr.assertWithError(e(this,Xn,"f"),"didn't get imageState")},er=function(e){mr.assertTypeWithError(e,"number"),mr.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},ir=function(){e(this,sr,"f").onMessage(e(this,Jn,"m",nr).bind(this)),e(this,sr,"f").onFileDownloadNext(e(this,Jn,"m",rr)),e(this,sr,"f").onFileDownloadProgress(e(this,Jn,"m",ar).bind(this)),e(this,sr,"f").onFileDownloadFinished(e(this,Jn,"m",or).bind(this)),e(this,sr,"f").onFileUploadNext(e(this,Jn,"m",cr).bind(this)),e(this,sr,"f").onFileUploadProgress(e(this,Jn,"m",hr).bind(this)),e(this,sr,"f").onFileUploadFinished(e(this,Jn,"m",lr).bind(this)),e(this,sr,"f").onImageUploadNext(e(this,Jn,"m",gr).bind(this)),e(this,sr,"f").onImageUploadProgress(e(this,Jn,"m",ur).bind(this)),e(this,sr,"f").onImageUploadFinished(e(this,Jn,"m",fr).bind(this))},nr=function({op:t,group:s,id:i,data:n,length:r}){switch(mr.log("onMcuMessage",...arguments),s){case An:switch(i){case Bn:mr.log(`echo "${n.r}"`);break;case Nn:mr.table(n.tasks);break;case Pn:mr.log(n)}break;case On:if(i===zn)e(this,Jn,"m",dr).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},rr=function(){mr.log("onMcuFileDownloadNext",...arguments)},ar=function(){mr.log("onMcuFileDownloadProgress",...arguments)},or=function(){mr.log("onMcuFileDownloadFinished",...arguments)},cr=function(){mr.log("onMcuFileUploadNext")},hr=function(){mr.log("onMcuFileUploadProgress")},lr=function(){mr.log("onMcuFileUploadFinished")},gr=function({packet:e}){mr.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},ur=function({percentage:t}){const s=t/100;mr.log("onMcuImageUploadProgress",...arguments),e(this,Jn,"a",Qn).call(this,"firmwareUploadProgress",{progress:s})},fr=async function(){mr.log("onMcuImageUploadFinished",...arguments),await this.getImages(),e(this,Jn,"a",Qn).call(this,"firmwareUploadProgress",{progress:100}),e(this,Jn,"a",Qn).call(this,"firmwareUploadComplete",{})},dr=function({images:s}){if(!s)return void mr.log("no images found");t(this,Xn,s,"f"),mr.log("images",e(this,Xn,"f"));let i="idle";2==e(this,Xn,"f").length&&(e(this,Xn,"f")[1].bootable?e(this,Xn,"f")[0].confirmed?e(this,Xn,"f")[1].pending?(mr.log("reset to upload to the new firmware image"),i="pending"):(mr.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(mr.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):mr.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==e(this,Xn,"f").length&&(e(this,Xn,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),mr.log("Select a firmware upload image to upload to slot 1.")),e(this,Jn,"m",Zn).call(this,i),e(this,Jn,"a",Qn).call(this,"firmwareImages",{firmwareImages:e(this,Xn,"f")})};const $r=k("DeviceManager",{log:!0}),Br=["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"];class Nr{constructor(){if(br.add(this),Sr.set(this,{getType:e(this,br,"m",Er).bind(this),isConnected:e(this,br,"m",xr).bind(this)}),Cr.set(this,[]),Mr.set(this,!1),Dr.set(this,{devices:[]}),kr.set(this,void 0),Wr.set(this,"BS.Device"),Ur.set(this,[]),Lr.set(this,new I(this,Br)),Nr.shared&&this!=Nr.shared)throw Error("DeviceManager is a singleton - use DeviceManager.shared");this.CanUseLocalStorage&&(this.UseLocalStorage=!0)}onDevice(t){Ki(t,e(this,Sr,"f"))}OnDeviceConnectionStatusUpdated(t,s){if("notConnected"==s&&!t.canReconnect&&e(this,Ur,"f").includes(t)){const s=e(this,Ur,"f").indexOf(t);this.AvailableDevices.splice(s,1),e(this,br,"m",Ar).call(this)}}get ConnectedDevices(){return e(this,Cr,"f")}get UseLocalStorage(){return e(this,Mr,"f")}set UseLocalStorage(s){e(this,br,"m",Tr).call(this),$r.assertTypeWithError(s,"boolean"),t(this,Mr,s,"f"),e(this,Mr,"f")&&!e(this,kr,"f")&&e(this,br,"m",Ir).call(this)}get CanUseLocalStorage(){return i&&window.localStorage}get AvailableDevices(){return e(this,Ur,"f")}get CanGetDevices(){return $r.log("current firmware doesn't pair-bond"),!1}async GetDevices(){if(!i)return void $r.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void $r.warn("bluetooth is not available in this browser");if(o)return void $r.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void $r.warn("bluetooth.getDevices() is not available in this browser");if(!this.CanGetDevices)return void $r.log("CanGetDevices is false");e(this,kr,"f")||e(this,br,"m",Ir).call(this);const t=e(this,kr,"f");if(!t.devices||0==t.devices.length)return void $r.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return $r.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=t.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const r=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(r)return void(n&&n?.bluetoothId==r.bluetoothId&&n!=r&&(this.AvailableDevices[e(this,Ur,"f").indexOf(r)]=n));if(n)return void this.AvailableDevices.push(n);const a=new _a,o=new Tn;o.device=s,s.name&&a._informationManager.updateName(s.name),a._informationManager.updateType(i.type),a.connectionManager=o,this.AvailableDevices.push(a)})),e(this,br,"m",Ar).call(this),this.AvailableDevices}get AddEventListener(){return e(this,Lr,"f").addEventListener}get RemoveEventListener(){return e(this,Lr,"f").removeEventListener}}Sr=new WeakMap,Cr=new WeakMap,Mr=new WeakMap,Dr=new WeakMap,kr=new WeakMap,Wr=new WeakMap,Ur=new WeakMap,Lr=new WeakMap,br=new WeakSet,Er=function(t){e(this,Mr,"f")&&e(this,br,"m",Fr).call(this,t.target)},Tr=function(){$r.assertWithError(i,"localStorage is only available in the browser"),$r.assertWithError(window.localStorage,"localStorage not found")},_r=function(){e(this,br,"m",Tr).call(this),localStorage.setItem(e(this,Wr,"f"),JSON.stringify(e(this,kr,"f")))},Ir=async function(){e(this,br,"m",Tr).call(this);let s=localStorage.getItem(e(this,Wr,"f"));if("string"!=typeof s)return $r.log("no info found in localStorage"),t(this,kr,Object.assign({},e(this,Dr,"f")),"f"),void e(this,br,"m",_r).call(this);try{const e=JSON.parse(s);$r.log({configuration:e}),t(this,kr,e,"f"),this.CanGetDevices&&await this.GetDevices()}catch(e){$r.error(e)}},Fr=function(t){if("webBluetooth"!=t.connectionType)return void $r.log("localStorage is only for webBluetooth devices");e(this,br,"m",Tr).call(this);const s=e(this,kr,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1!=s&&(e(this,kr,"f").devices[s].type=t.type,e(this,br,"m",_r).call(this))},Rr=function(){return e(this,Lr,"f").dispatchEvent},xr=function(t){const{target:s}=t;if(s.isConnected)if(e(this,Cr,"f").includes(s))$r.log("device already included");else{if($r.log("adding device",s),e(this,Cr,"f").push(s),this.UseLocalStorage&&"webBluetooth"==s.connectionType){const t={type:s.type,bluetoothId:s.bluetoothId},i=e(this,kr,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1==i?e(this,kr,"f").devices.push(t):e(this,kr,"f").devices[i]=t,e(this,br,"m",_r).call(this)}e(this,br,"a",Rr).call(this,"deviceConnected",{device:s}),e(this,br,"a",Rr).call(this,"deviceIsConnected",{device:s}),e(this,br,"m",Or).call(this)}else e(this,Cr,"f").includes(s)?($r.log("removing device",s),e(this,Cr,"f").splice(e(this,Cr,"f").indexOf(s),1),e(this,br,"a",Rr).call(this,"deviceDisconnected",{device:s}),e(this,br,"a",Rr).call(this,"deviceIsConnected",{device:s}),e(this,br,"m",Or).call(this)):$r.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),s.isConnected&&!this.AvailableDevices.includes(s)){const t=this.AvailableDevices.find((e=>e.bluetoothId==s.bluetoothId));$r.log({existingAvailableDevice:t}),t?this.AvailableDevices[this.AvailableDevices.indexOf(t)]=s:this.AvailableDevices.push(s),e(this,br,"m",Ar).call(this)}},Ar=function(){$r.log({AvailableDevices:this.AvailableDevices}),e(this,br,"a",Rr).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},Or=function(){$r.log({ConnectedDevices:this.ConnectedDevices}),e(this,br,"a",Rr).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},Nr.shared=new Nr;var Pr,Vr,zr,jr,Gr,qr,Hr,Jr,Qr,Kr,Zr,Xr,Yr,ea,ta,sa,ia,na,ra,aa,oa,ca,ha,la,ga,ua,fa,da,ma,pa,va,wa,ya=Nr.shared;const ba=k("Device",{log:!0}),Sa=["connectionMessage",...zi,...qi,...Gi,...Xs,...ks,...xt,...pt,...xe,...ms,...vr],Ea=["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"];class Ca{get bluetoothId(){return e(this,qr,"f")?.bluetoothId}constructor(){Pr.add(this),jr.set(this,new I(this,Sa)),qr.set(this,void 0),this.sendTxMessages=e(this,Pr,"m",Hr).bind(this),Jr.set(this,!1),ea.set(this,Vr.ReconnectOnDisconnection),ta.set(this,void 0),this.latestConnectionMessage=new Map,oa.set(this,new Ts),ca.set(this,0),this._informationManager=new Ys,la.set(this,new At),ua.set(this,Vr.ClearSensorConfigurationOnLeave),fa.set(this,new vt),da.set(this,new ki),ma.set(this,new Ae),pa.set(this,new ws),va.set(this,new yr),this.sendSmpMessage=e(this,Pr,"m",wa).bind(this),e(this,oa,"f").eventDispatcher=e(this,jr,"f"),this._informationManager.sendMessage=this.sendTxMessages,this._informationManager.eventDispatcher=e(this,jr,"f"),e(this,la,"f").sendMessage=this.sendTxMessages,e(this,la,"f").eventDispatcher=e(this,jr,"f"),e(this,fa,"f").eventDispatcher=e(this,jr,"f"),e(this,da,"f").sendMessage=this.sendTxMessages,e(this,pa,"f").sendMessage=this.sendTxMessages,e(this,pa,"f").eventDispatcher=e(this,jr,"f"),e(this,ma,"f").sendMessage=this.sendTxMessages,e(this,ma,"f").eventDispatcher=e(this,jr,"f"),e(this,va,"f").sendMessage=this.sendSmpMessage,e(this,va,"f").eventDispatcher=e(this,jr,"f"),this.addEventListener("getMtu",(()=>{e(this,va,"f").mtu=this.mtu,e(this,ma,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),ya.onDevice(this),i&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),n&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()}))}get addEventListener(){return e(this,jr,"f").addEventListener}get removeEventListener(){return e(this,jr,"f").removeEventListener}get waitForEvent(){return e(this,jr,"f").waitForEvent}get connectionManager(){return e(this,qr,"f")}set connectionManager(s){this.connectionManager!=s?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0),s&&(s.onStatusUpdated=e(this,Pr,"m",sa).bind(this),s.onMessageReceived=e(this,Pr,"m",aa).bind(this)),t(this,qr,s,"f"),ba.log("assigned new connectionManager",e(this,qr,"f"))):ba.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(Vr,Vr,"m",zr).call(Vr)),e(this,Pr,"m",ra).call(this),this.connectionManager.connect()}get isConnected(){return e(this,Jr,"f")}get canReconnect(){return ba.log("devices don't pair bond, so you can't reconnect"),!1}async reconnect(){return e(this,Pr,"m",Xr).call(this),e(this,Pr,"m",ra).call(this),this.connectionManager?.reconnect()}static async Connect(){const e=new Vr;return await e.connect(),e}static get ReconnectOnDisconnection(){return e(this,Vr,"f",Yr)}static set ReconnectOnDisconnection(e){ba.assertTypeWithError(e,"boolean"),t(this,Vr,e,"f",Yr)}get reconnectOnDisconnection(){return e(this,ea,"f")}set reconnectOnDisconnection(e){ba.assertTypeWithError(e,"boolean"),t(this,ea,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,Pr,"m",Qr).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,qr,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"notConnected":case"connecting":case"disconnecting":return e(this,qr,"f").status;default:return"notConnected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,oa,"f").information}get batteryLevel(){return e(this,ca,"f")}get id(){return this._informationManager.id}get isCharging(){return this._informationManager.isCharging}get batteryCurrent(){return this._informationManager.batteryCurrent}get getBatteryCurrent(){return this._informationManager.getBatteryCurrent}get name(){return this._informationManager.name}get setName(){return this._informationManager.setName}get type(){return this._informationManager.type}get setType(){return this._informationManager.setType}get isInsole(){return this._informationManager.isInsole}get insoleSide(){return this._informationManager.insoleSide}get mtu(){return this._informationManager.mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return dt.filter((e=>this.sensorTypes.includes(e)))}get sensorConfiguration(){return e(this,la,"f").configuration}async setSensorConfiguration(t,s){await e(this,la,"f").setConfiguration(t,s)}async clearSensorConfiguration(){return e(this,la,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return e(this,Vr,"f",ga)}static set ClearSensorConfigurationOnLeave(e){ba.assertTypeWithError(e,"boolean"),t(this,Vr,e,"f",ga)}get clearSensorConfigurationOnLeave(){return e(this,ua,"f")}set clearSensorConfigurationOnLeave(e){ba.assertTypeWithError(e,"boolean"),t(this,ua,e,"f")}get numberOfPressureSensors(){return e(this,fa,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){e(this,fa,"f").pressureSensorDataManager.resetRange()}async triggerVibration(t,s){e(this,da,"f").triggerVibration(t,s)}get maxFileLength(){return e(this,ma,"f").maxLength}async sendFile(t,s){const i=this.waitForEvent("fileTransferComplete");e(this,ma,"f").send(t,s),await i}async receiveFile(t){const s=this.waitForEvent("fileTransferComplete");e(this,ma,"f").receive(t),await s}get fileTransferStatus(){return e(this,ma,"f").status}cancelFileTransfer(){e(this,ma,"f").cancel()}get tfliteName(){return e(this,pa,"f").name}get setTfliteName(){return e(this,pa,"f").setName}get tfliteTask(){return e(this,pa,"f").task}get setTfliteTask(){return e(this,pa,"f").setTask}get tfliteSampleRate(){return e(this,pa,"f").sampleRate}get setTfliteSampleRate(){return e(this,pa,"f").setSampleRate}get tfliteSensorTypes(){return e(this,pa,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>vs.includes(e)))}get setTfliteSensorTypes(){return e(this,pa,"f").setSensorTypes}get tfliteIsReady(){return e(this,pa,"f").isReady}get tfliteInferencingEnabled(){return e(this,pa,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return e(this,pa,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return e(this,pa,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return e(this,pa,"f").captureDelay}get setTfliteCaptureDelay(){return e(this,pa,"f").setCaptureDelay}get tfliteThreshold(){return e(this,pa,"f").threshold}get setTfliteThreshold(){return e(this,pa,"f").setThreshold}get uploadFirmware(){return e(this,va,"f").uploadFirmware}async reset(){return await e(this,va,"f").reset(),e(this,qr,"f").disconnect()}get firmwareStatus(){return e(this,va,"f").status}get getFirmwareImages(){return e(this,va,"f").getImages}get firmwareImages(){return e(this,va,"f").images}get eraseFirmwareImage(){return e(this,va,"f").eraseImage}get confirmFirmwareImage(){return e(this,va,"f").confirmImage}get testFirmwareImage(){return e(this,va,"f").testImage}}Vr=Ca,jr=new WeakMap,qr=new WeakMap,Jr=new WeakMap,ea=new WeakMap,ta=new WeakMap,oa=new WeakMap,ca=new WeakMap,la=new WeakMap,ua=new WeakMap,fa=new WeakMap,da=new WeakMap,ma=new WeakMap,pa=new WeakMap,va=new WeakMap,Pr=new WeakSet,zr=function(){return new Tn},Gr=function(){return e(this,jr,"f").dispatchEvent},Hr=async function(t,s){await(e(this,qr,"f")?.sendTxMessages(t,s))},Qr=function(){ba.assertWithError(this.isConnected,"notConnected")},Kr=function(){return Ea.every((e=>this.latestConnectionMessage.has(e)))},Zr=function(){const t=Ea.map((e=>({type:e})));e(this,Pr,"m",Hr).call(this,t)},Xr=function(){ba.assertWithError(this.canReconnect,"cannot reconnect to device")},sa=function(s){ba.log({connectionStatus:s}),"notConnected"==s?this.canReconnect&&this.reconnectOnDisconnection&&(ba.log("starting reconnect interval..."),t(this,ta,setInterval((()=>{ba.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,ta,"f")&&(ba.log("clearing reconnect interval"),clearInterval(e(this,ta,"f")),t(this,ta,void 0,"f")),e(this,Pr,"m",na).call(this),"connected"!=s||e(this,Jr,"f")||e(this,Pr,"m",Zr).call(this),ya.OnDeviceConnectionStatusUpdated(this,s)},ia=function(t=!1){e(this,Pr,"a",Gr).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,Pr,"a",Gr).call(this,this.connectionStatus,{}),t&&e(this,Pr,"a",Gr).call(this,"isConnected",{isConnected:this.isConnected})},na=function(){switch(t(this,Jr,Boolean(this.connectionManager?.isConnected)&&e(this,Pr,"a",Kr)&&this._informationManager.isCurrentTimeSet,"f"),this.connectionStatus){case"connected":e(this,Jr,"f")&&e(this,Pr,"m",ia).call(this,!0);break;case"notConnected":e(this,Pr,"m",ia).call(this,!0);break;default:e(this,Pr,"m",ia).call(this,!1)}},ra=function(){this.latestConnectionMessage.clear(),this._informationManager.clear(),e(this,oa,"f").clear()},aa=function(t,s){if(ba.log({messageType:t,dataView:s}),"batteryLevel"===t){const t=s.getUint8(0);ba.log("received battery level",{batteryLevel:t}),e(this,Pr,"m",ha).call(this,t)}else if(Ie.includes(t))e(this,ma,"f").parseMessage(t,s);else if(ds.includes(t))e(this,pa,"f").parseMessage(t,s);else if(mt.includes(t))e(this,fa,"f").parseMessage(t,s);else if(pr.includes(t))e(this,va,"f").parseMessage(t,s);else if(Ds.includes(t))e(this,oa,"f").parseMessage(t,s);else if(Zs.includes(t))this._informationManager.parseMessage(t,s);else{if(!Rt.includes(t))throw Error(`uncaught messageType ${t}`);e(this,la,"f").parseMessage(t,s)}this.latestConnectionMessage.set(t,s),e(this,Pr,"a",Gr).call(this,"connectionMessage",{messageType:t,dataView:s}),!this.isConnected&&e(this,Pr,"a",Kr)&&e(this,Pr,"m",na).call(this)},ha=function(s){ba.assertTypeWithError(s,"number"),e(this,ca,"f")!=s?(t(this,ca,s,"f"),ba.log({updatedBatteryLevel:e(this,ca,"f")}),e(this,Pr,"a",Gr).call(this,"batteryLevel",{batteryLevel:e(this,ca,"f")})):ba.log(`duplicate batteryLevel assignment ${s}`)},wa=function(t){return e(this,qr,"f").sendSmpMessage(t)},Yr={value:!1},ga={value:!0};var Ma,Da,ka,Ta,Wa,_a=Ca;const Ia=k("DevicePairPressureSensorDataManager",{log:!0});class Fa{constructor(){Ma.add(this),Da.set(this,{}),ka.set(this,new qe)}resetPressureRange(){e(this,ka,"f").reset()}onDevicePressureData(t){const{pressure:s}=t.message,i=t.target.insoleSide;if(Ia.log({pressure:s,insoleSide:i}),e(this,Da,"f")[i]=s,e(this,Ma,"a",Ta))return e(this,Ma,"m",Wa).call(this);Ia.log("doesn't have all pressure data yet...")}}var Ua;Da=new WeakMap,ka=new WeakMap,Ma=new WeakSet,Ta=function(){return Js.every((t=>t in e(this,Da,"f")))},Wa=function(){const t={rawSum:0,normalizedSum:0};return Js.forEach((s=>{t.rawSum+=e(this,Da,"f")[s].scaledSum,t.normalizedSum+=e(this,Da,"f")[s].normalizedSum})),t.normalizedSum>0&&(t.center={x:0,y:0},Js.forEach((s=>{const i=e(this,Da,"f")[s],n=i.normalizedSum/t.normalizedSum;n>0&&(t.center.y+=i.normalizedCenter.y*n,"right"==s&&(t.center.x=n))})),t.normalizedCenter=e(this,ka,"f").updateAndGetNormalization(t.center)),Ia.log({devicePairPressure:t}),t};const La=k("DevicePairSensorDataManager",{log:!0}),Ra=["pressure","sensorData"];class xa{constructor(){Ua.set(this,{}),this.pressureSensorDataManager=new Fa}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(t){const{timestamp:s,sensorType:i}=t.message;let n;if(La.log({sensorType:i,timestamp:s,event:t}),e(this,Ua,"f")[i]||(e(this,Ua,"f")[i]={}),e(this,Ua,"f")[i][t.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(t);else La.log(`uncaught sensorType "${i}"`);if(n){const t=Object.assign({},e(this,Ua,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:t,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:t,[i]:n})}else La.log("no value received")}}var Aa,Oa,$a,Ba,Na,Pa,Va,za,ja,Ga,qa,Ha,Ja,Qa,Ka,Za;Ua=new WeakMap;const Xa=k("DevicePair",{log:!0});function Ya(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const eo=["isConnected",...Ra,...Sa.map((e=>Ya(e)))];class to{constructor(){Aa.add(this),$a.set(this,new I(this,eo)),Na.set(this,void 0),Pa.set(this,void 0),Ga.set(this,{isConnected:e(this,Aa,"m",Ha).bind(this),sensorData:e(this,Aa,"m",Ka).bind(this),getType:e(this,Aa,"m",Ja).bind(this)}),Qa.set(this,new xa),e(this,Qa,"f").eventDispatcher=e(this,$a,"f")}get sides(){return Js}get addEventListener(){return e(this,$a,"f").addEventListener}get removeEventListener(){return e(this,$a,"f").removeEventListener}get waitForEvent(){return e(this,$a,"f").waitForEvent}get left(){return e(this,Na,"f")}get right(){return e(this,Pa,"f")}get isConnected(){return Js.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return Js.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(s){if(!s.isInsole)return void Xa.warn("device is not an insole");const i=s.insoleSide,n=this[i];if(s!=n){switch(n&&e(this,Aa,"m",za).call(this,n),e(this,Aa,"m",Va).call(this,s),i){case"left":t(this,Na,s,"f");break;case"right":t(this,Pa,s,"f")}return Xa.log(`assigned ${i} insole`,s),this.resetPressureRange(),e(this,Aa,"a",Ba).call(this,"isConnected",{isConnected:this.isConnected}),e(this,Aa,"a",Ba).call(this,"deviceIsConnected",{device:s,isConnected:s.isConnected,side:i}),n}Xa.log("device already assigned")}setSensorConfiguration(e){Js.forEach((t=>{this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){e(this,Qa,"f").resetPressureRange()}async triggerVibration(e,t){const s=Js.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return e(this,Oa,"f",Za)}}Oa=to,$a=new WeakMap,Na=new WeakMap,Pa=new WeakMap,Ga=new WeakMap,Qa=new WeakMap,Aa=new WeakSet,Ba=function(){return e(this,$a,"f").dispatchEvent},Va=function(t){Ki(t,e(this,Ga,"f")),Sa.forEach((s=>{t.addEventListener(s,e(this,Aa,"m",qa).bind(this))}))},za=function(t){Zi(t,e(this,Ga,"f")),Sa.forEach((s=>{t.removeEventListener(s,e(this,Aa,"m",qa).bind(this))}))},ja=function(t){const s=Js.some((s=>this[s]==t&&(Xa.log(`removing ${s} insole`,t),Zi(t,e(this,Ga,"f")),delete this[s],!0)));return s&&e(this,Aa,"a",Ba).call(this,"isConnected",{isConnected:this.isConnected}),s},qa=function(t){const{type:s,target:i,message:n}=t;e(this,Aa,"a",Ba).call(this,Ya(s),{...n,device:i,side:i.insoleSide})},Ha=function(t){e(this,Aa,"a",Ba).call(this,"isConnected",{isConnected:this.isConnected})},Ja=function(t){const{target:s}=t;if(this[s.insoleSide]==s)return;e(this,Aa,"m",ja).call(this,s)&&this.assignInsole(s)},Ka=function(t){this.isConnected&&e(this,Qa,"f").onDeviceSensorData(t)},Za={value:new Oa},ya.AddEventListener("deviceConnected",(t=>{const{device:s}=t.message;s.isInsole&&e(Oa,Oa,"f",Za).assignInsole(s)}));const so=k("ServerUtils",{log:!1}),io=["ping","pong","isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function no(e,...t){so.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=j(...t.data),i=s.byteLength;so.assertEnumWithError(t.type,e);return j(e.indexOf(t.type),Uint16Array.from([i]),s)}));return so.log("messageBuffers",...s),j(...s)}function ro(...e){return so.log("createServerMessage",...e),no(io,...e)}function ao(...e){return so.log("createClientDeviceMessage",...e),no(Hi,...e)}ro("ping"),ro("pong"),ro("isScanningAvailable"),ro("isScanning"),ro("startScan"),ro("stopScan");const oo=ro("discoveredDevices");var co,ho,lo,go,uo;const fo=k("WebSocketClientConnectionManager",{log:!0}),mo=[...Ds,"batteryLevel"];class po extends Ji{constructor(){super(...arguments),co.add(this),ho.set(this,void 0),lo.set(this,!1)}static get isSupported(){return i}static get type(){return"webSocketClient"}get bluetoothId(){return e(this,ho,"f")}set bluetoothId(s){fo.assertTypeWithError(s,"string"),e(this,ho,"f")!=s?t(this,ho,s,"f"):fo.log("redundant bluetoothId assignment")}get isConnected(){return e(this,lo,"f")}set isConnected(s){fo.assertTypeWithError(s,"boolean"),e(this,lo,"f")!=s?(t(this,lo,s,"f"),this.status=e(this,lo,"f")?"connected":"notConnected",this.isConnected&&e(this,co,"m",go).call(this)):fo.log("redundant newIsConnected assignment",s)}async connect(){await super.connect(),this.sendWebSocketConnectMessage()}async disconnect(){await super.disconnect(),this.sendWebSocketDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),fo.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendWebSocketMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendWebSocketMessage({type:"tx",data:e})}onWebSocketMessage(t){fo.log({dataView:t}),lt(t,Sa,e(this,co,"m",uo).bind(this),null,!0)}}var vo,wo,yo,bo,So,Eo,Co,Mo,Do,ko,To,Wo,_o,Io,Fo,Uo,Lo,Ro,xo,Ao,Oo;ho=new WeakMap,lo=new WeakMap,co=new WeakSet,go=function(){this.sendWebSocketMessage(...mo)},uo=function(e,t){let s=0;switch(e){case"isConnected":const i=Boolean(t.getUint8(s++));fo.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}};const $o=k("WebSocketClient",{log:!0}),Bo=["notConnected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class No{constructor(){vo.add(this),wo.set(this,{}),yo.set(this,new I(this,Bo)),this._reconnectOnDisconnection=this.baseConstructor.ReconnectOnDisconnection,bo.set(this,"notConnected"),this.pingTimer=new x(e(this,vo,"m",Eo).bind(this),3e7),Mo.set(this,!1),Wo.set(this,!1),Ro.set(this,{})}get baseConstructor(){return this.constructor}get devices(){return e(this,wo,"f")}get addEventListener(){return e(this,yo,"f").addEventListener}get dispatchEvent(){return e(this,yo,"f").dispatchEvent}get removeEventListener(){return e(this,yo,"f").removeEventListener}get waitForEvent(){return e(this,yo,"f").waitForEvent}assertConnection(){$o.assertWithError(this.isConnected,"notConnected")}assertDisconnection(){$o.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return this._reconnectOnDisconnection}static set ReconnectOnDisconnection(e){$o.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}get reconnectOnDisconnection(){return this._reconnectOnDisconnection}set reconnectOnDisconnection(e){$o.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}sendServerMessage(...e){this.sendMessage(ro(...e))}get _connectionStatus(){return e(this,bo,"f")}set _connectionStatus(e){switch($o.assertTypeWithError(e,"string"),$o.log({newConnectionStatus:e}),t(this,bo,e,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),e){case"connected":case"notConnected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):(t(this,vo,!1,"a",ko),t(this,vo,!1,"a",Io))}}get connectionStatus(){return this._connectionStatus}parseMessage(t){$o.log("parseMessage",{dataView:t}),lt(t,io,e(this,vo,"m",So).bind(this),null,!0)}get isScanningAvailable(){return e(this,vo,"a",Do)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return e(this,vo,"a",_o)}startScan(){e(this,vo,"m",Lo).call(this),this.sendServerMessage("startScan")}stopScan(){e(this,vo,"m",Uo).call(this),this.sendServerMessage("stopScan")}toggleScan(){e(this,vo,"m",To).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return e(this,Ro,"f")}onDiscoveredDevice(t){$o.log({discoveredDevice:t}),e(this,Ro,"f")[t.bluetoothId]=t,this.dispatchEvent("discoveredDevice",{discoveredDevice:t})}requestDiscoveredDevices(){this.sendMessage(oo)}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(t){this.assertConnection(),$o.assertTypeWithError(t,"string");const s=e(this,vo,"m",Ao).call(this,t);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendMessage(this.createConnectToDeviceMessage(e))}createConnectToDeviceMessage(e){return ro({type:"connectToDevice",data:e})}onConnectedBluetoothDeviceIds(t){$o.log({bluetoothIds:t}),t.forEach((t=>{e(this,vo,"m",Ao).call(this,t).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),$o.assertTypeWithError(e,"string");const t=this.devices[e];return $o.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(t){this.sendMessage(e(this,vo,"m",Oo).call(this,t))}sendDeviceMessage(e,...t){this.sendMessage(this.createDeviceMessage(e,...t))}createDeviceMessage(e,...t){return ro({type:"deviceMessage",data:[e,ao(...t)]})}}var Po,Vo,zo,jo,Go,qo,Ho;wo=new WeakMap,yo=new WeakMap,bo=new WeakMap,Mo=new WeakMap,Wo=new WeakMap,Ro=new WeakMap,vo=new WeakSet,So=function(s,i){let n=0;switch(s){case"ping":e(this,vo,"m",Co).call(this);break;case"pong":break;case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));$o.log({isScanningAvailable:e}),t(this,vo,e,"a",ko)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));$o.log({isScanning:e}),t(this,vo,e,"a",Io)}break;case"discoveredDevice":{const{string:e}=ht(i,n);$o.log({discoveredDeviceString:e});const t=JSON.parse(e);$o.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:t}=ht(i,n);e(this,vo,"m",xo).call(this,t)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=ht(i,n);$o.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);$o.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:t,byteOffset:s}=ht(i,n);n=s;const r=e(this,wo,"f")[t];$o.assertWithError(r,`no device found for id ${t}`);const a=r.connectionManager,o=q(i,n);a.onWebSocketMessage(o)}break;default:$o.error(`uncaught messageType "${s}"`)}},Eo=function(){this.sendServerMessage("ping")},Co=function(){this.sendServerMessage("pong")},Do=function(){return e(this,Mo,"f")},ko=function(s){$o.assertTypeWithError(s,"boolean"),t(this,Mo,s,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&e(this,vo,"m",Fo).call(this)},To=function(){this.assertConnection(),$o.assertWithError(this.isScanningAvailable,"scanning is not available")},_o=function(){return e(this,Wo,"f")},Io=function(e){$o.assertTypeWithError(e,"boolean"),t(this,Wo,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},Fo=function(){this.sendServerMessage("isScanning")},Uo=function(){$o.assertWithError(this.isScanning,"is not scanning")},Lo=function(){$o.assertWithError(!this.isScanning,"is already scanning")},xo=function(t){$o.log({expiredBluetoothDeviceId:t});const s=e(this,Ro,"f")[t];s?($o.log({expiredDiscoveredDevice:s}),delete e(this,Ro,"f")[t],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):$o.warn(`no discoveredDevice found with id "${t}"`)},Ao=function(t){let s=e(this,wo,"f")[t];return s||(s=this.createDevice(t),e(this,wo,"f")[t]=s),s},Oo=function(e){return ro({type:"disconnectFromDevice",data:e})},No._reconnectOnDisconnection=!0;const Jo=k("WebSocketClient",{log:!0});class Qo extends No{constructor(){super(...arguments),Po.add(this),Vo.set(this,void 0),zo.set(this,{open:e(this,Po,"m",jo).bind(this),message:e(this,Po,"m",Go).bind(this),close:e(this,Po,"m",qo).bind(this),error:e(this,Po,"m",Ho).bind(this)})}get webSocket(){return e(this,Vo,"f")}set webSocket(s){e(this,Vo,"f")!=s?(Jo.log("assigning webSocket",s),e(this,Vo,"f")&&Zi(e(this,Vo,"f"),e(this,zo,"f")),Ki(s,e(this,zo,"f")),t(this,Vo,s,"f"),Jo.log("assigned webSocket")):Jo.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.webSocket=new WebSocket(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(t){this.assertConnection(),e(this,Vo,"f").send(t)}createDevice(e){const t=new _a,s=new po;return s.bluetoothId=e,s.sendWebSocketMessage=this.sendDeviceMessage.bind(this,e),s.sendWebSocketConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendWebSocketDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}}Vo=new WeakMap,zo=new WeakMap,Po=new WeakSet,jo=function(e){Jo.log("webSocket.open",e),this.pingTimer.start(),this._connectionStatus="connected"},Go=async function(e){Jo.log("webSocket.message",e),this.pingTimer.restart();const t=await e.data.arrayBuffer(),s=new DataView(t);this.parseMessage(s)},qo=function(e){Jo.log("webSocket.close",e),this._connectionStatus="notConnected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),this.pingTimer.stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},Ho=function(e){Jo.error("webSocket.error",e.message)};export{dt as ContinuousSensorTypes,Ke as DefaultNumberOfPressureSensors,_a as Device,ya as DeviceManager,to as DevicePair,Hs as DeviceTypes,w as Environment,Re as FileTransferDirections,Fe as FileTypes,Ks as MaxNameLength,bi as MaxNumberOfVibrationWaveformEffectSegments,Mi as MaxNumberOfVibrationWaveformSegments,Ut as MaxSensorRate,Ei as MaxVibrationWaveformEffectSegmentDelay,Ci as MaxVibrationWaveformEffectSegmentLoopCount,Di as MaxVibrationWaveformEffectSequenceLoopCount,Si as MaxVibrationWaveformSegmentDuration,Qs as MinNameLength,Lt as SensorRateStep,ft as SensorTypes,vs as TfliteSensorTypes,ps as TfliteTasks,wi as VibrationLocations,yi as VibrationTypes,ei as VibrationWaveformEffects,Qo as WebSocketClient,W as setAllConsoleLevelFlags,T as setConsoleLevelFlagsForType};
//# sourceMappingURL=brilliantsole.module.min.js.map
