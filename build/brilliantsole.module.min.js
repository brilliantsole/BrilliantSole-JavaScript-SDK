/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function t(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const s=!1,i="undefined"!=typeof window&&void 0!==window?.document,n="undefined"!=typeof process&&null!=process?.versions?.node,r=i&&navigator.userAgent||"";let a=!1;i?a=Boolean(navigator.bluetooth):n&&(a=!0);const o=i&&/Bluefy/i.test(r),c=i&&/WebBLE/i.test(r),h=i&&/Android/i.test(r),l=i&&/Safari/i.test(r)&&!/Chrome/i.test(r),u=i&&/iPad|iPhone|iPod/i.test(r),g=i&&/Macintosh/i.test(r),f=!i&&!n&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var d,m,p,v,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return a},isIOS:u,isInBluefy:o,isInBrowser:i,isInDev:s,isInLensStudio:f,isInNode:n,isInProduction:!0,isInWebBLE:c,isMac:g,isSafari:l});if(f){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(v={}).log=e,v.warn=e.bind(v,"WARNING"),v.error=e.bind(v,"ERROR")}else v=console;if(!v.assert){const e=(e,...t)=>{e||v.warn(...t)};v.assert=e}if(!v.table){const e=(...e)=>{v.log(...e)};v.table=e}function y(){}const b=v.log.bind(v),S=v.warn.bind(v),E=v.error.bind(v),C=v.table.bind(v),D=v.assert.bind(v);class k{constructor(t){if(p.set(this,{log:s,warn:s,assert:!0,error:!0,table:!0}),e(d,d,"f",m)[t])throw new Error(`"${t}" console already exists`);e(d,d,"f",m)[t]=this}setLevelFlags(t){Object.assign(e(this,p,"f"),t)}static setLevelFlagsForType(t,s){if(!e(this,d,"f",m)[t])throw new Error(`no console found with type "${t}"`);e(this,d,"f",m)[t].setLevelFlags(s)}static setAllLevelFlags(t){for(const s in e(this,d,"f",m))e(this,d,"f",m)[s].setLevelFlags(t)}static create(t,s){return e(this,d,"f",m)[t]||new d(t)}get log(){return e(this,p,"f").log?b:y}get warn(){return e(this,p,"f").warn?S:y}get error(){return e(this,p,"f").error?E:y}get assert(){return e(this,p,"f").assert?D:y}get table(){return e(this,p,"f").table?C:y}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function T(e,t){return k.create(e,t)}function M(e,t){k.setLevelFlagsForType(e,t)}function W(e){k.setAllLevelFlags(e)}d=k,p=new WeakMap,m={value:{}};class I{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push({listener:t,once:s.once})}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((e=>e.listener!==t)))}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);if(!this.listeners[e])return;const s=this.listeners[e];s.forEach(((i,n)=>{i.listener({type:e,target:this.target,message:t}),i.once&&s.splice(n,1)}))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var _,F,U;const L=T("Timer",{log:!1});class R{get callback(){return e(this,_,"f")}set callback(e){L.assertTypeWithError(e,"function"),L.log({newCallback:e}),t(this,_,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,F,"f")}set interval(e){L.assertTypeWithError(e,"number"),L.assertWithError(e>0,"interval must be above 0"),L.log({newInterval:e}),t(this,F,e,"f"),this.isRunning&&this.restart()}constructor(e,t){_.set(this,void 0),F.set(this,void 0),U.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,U,"f")}start(){this.isRunning?L.log("interval already running"):(L.log("starting interval"),t(this,U,setInterval(e(this,_,"f"),e(this,F,"f")),"f"))}stop(){this.isRunning?(L.log("stopping interval"),clearInterval(e(this,U,"f")),t(this,U,void 0,"f")):L.log("interval already not running")}restart(){this.stop(),this.start()}}function x(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}_=new WeakMap,F=new WeakMap,U=new WeakMap,T("checksum",{log:!0});const A=new Uint32Array(256);for(let e=0;e<256;++e)A[e]=x(e);function O(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(A[i^n]^s>>>8)>>>0}return s}var $,B;$="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,B="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const N=new $,P=new B,V=T("ArrayBufferUtils",{log:!1});function z(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return j(e)}if(e instanceof Array){return z(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return j(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function j(e){const t=N.encode(e);return z(t.byteLength,t)}function q(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),V.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function G(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}function H(e,{include:t,exclude:s}={}){const i=e=>{const i=t=>"string"==typeof t?e===t:t.test(e);return t?t.some(i):!s||!s.some(i)};for(const[t,s]of(e=>{const t=new Set;do{for(const s of Reflect.ownKeys(e))t.add([e,s])}while((e=Reflect.getPrototypeOf(e))&&e!==Object.prototype);return t})(e.constructor.prototype)){if("constructor"===s||!i(s))continue;const n=Reflect.getOwnPropertyDescriptor(t,s);n&&"function"==typeof n.value&&(e[s]=e[s].bind(e))}return e}var J,Q,K,Z,X,Y,ee,te,se,ie,ne,re,ae,oe,ce,he,le,ue,ge,fe,de,me,pe,ve,we,ye,be,Se,Ee,Ce,De,ke,Te,Me;const We=T("FileTransferManager",{log:!0}),Ie=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock"],_e=["tflite"],Fe=["idle","sending","receiving"],Ue=["startReceive","startSend","cancel"],Le=["sending","receiving"],Re=[...Ie,"fileTransferProgress","fileTransferComplete","fileReceived"];class xe{constructor(){J.add(this),se.set(this,Q.MaxLength),ae.set(this,void 0),le.set(this,0),de.set(this,0),ye.set(this,"idle"),De.set(this,[]),H(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return e(this,Q,"f",te)}get maxLength(){return e(this,se,"f")}get type(){return e(this,ae,"f")}get length(){return e(this,le,"f")}get checksum(){return e(this,de,"f")}get status(){return e(this,ye,"f")}parseMessage(t,s){switch(We.log({messageType:t}),t){case"maxFileLength":e(this,J,"m",ie).call(this,s);break;case"getFileType":case"setFileType":e(this,J,"m",oe).call(this,s);break;case"getFileLength":case"setFileLength":e(this,J,"m",ue).call(this,s);break;case"getFileChecksum":case"setFileChecksum":e(this,J,"m",me).call(this,s);break;case"fileTransferStatus":e(this,J,"m",be).call(this,s);break;case"getFileBlock":e(this,J,"m",ke).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}async send(t,s){e(this,J,"m",Ee).call(this),e(this,J,"m",Z).call(this,t);const i=await G(s),n=[];n.push(e(this,J,"m",he).call(this,t,!1));const r=i.byteLength;n.push(e(this,J,"m",fe).call(this,r,!1));const a=O(i);n.push(e(this,J,"m",ve).call(this,a,!1)),n.push(e(this,J,"m",we).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await e(this,J,"m",Te).call(this,i)}async receive(t){e(this,J,"m",Ee).call(this),e(this,J,"m",Z).call(this,t),await e(this,J,"m",he).call(this,t),await e(this,J,"m",we).call(this,"startReceive")}async cancel(){e(this,J,"m",Ce).call(this),await e(this,J,"m",we).call(this,"cancel")}}Q=xe,se=new WeakMap,ae=new WeakMap,le=new WeakMap,de=new WeakMap,ye=new WeakMap,De=new WeakMap,J=new WeakSet,K=function(){return this.eventDispatcher.dispatchEvent},Z=function(e){We.assertEnumWithError(e,_e)},X=function(e){We.assertWithError(e in _e,`invalid typeEnum ${e}`)},Y=function(e){We.assertWithError(e in Fe,`invalid statusEnum ${e}`)},ee=function(e){We.assertEnumWithError(e,Ue)},ie=function(t){We.log("parseFileMaxLength",t);const s=t.getUint32(0,!0);We.log(`maxLength: ${s/1024}kB`),e(this,J,"m",ne).call(this,s)},ne=function(s){We.log({maxLength:s}),t(this,se,s,"f"),e(this,J,"a",K).call(this,"maxFileLength",{maxFileLength:s})},re=function(e){We.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},oe=function(t){We.log("parseFileType",t);const s=t.getUint8(0);e(this,J,"m",X).call(this,s);const i=_e[s];e(this,J,"m",ce).call(this,i)},ce=function(s){We.log({fileTransferType:s}),t(this,ae,s,"f"),e(this,J,"a",K).call(this,"getFileType",{fileType:s})},he=async function(t,s){if(e(this,J,"m",Z).call(this,t),this.type==t)return void We.log(`redundant type assignment ${t}`);const i=this.waitForEvent("getFileType"),n=_e.indexOf(t);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},ue=function(t){We.log("parseFileLength",t);const s=t.getUint32(0,!0);e(this,J,"m",ge).call(this,s)},ge=function(s){We.log(`length: ${s/1024}kB`),t(this,le,s,"f"),e(this,J,"a",K).call(this,"getFileLength",{fileLength:s})},fe=async function(t,s){if(We.assertTypeWithError(t,"number"),e(this,J,"m",re).call(this,t),this.length==t)return void We.log(`redundant length assignment ${t}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,t,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},me=function(t){We.log("checksum",t);const s=t.getUint32(0,!0);e(this,J,"m",pe).call(this,s)},pe=function(s){We.log({checksum:s}),t(this,de,s,"f"),e(this,J,"a",K).call(this,"getFileChecksum",{fileChecksum:s})},ve=async function(e,t){if(We.assertTypeWithError(e,"number"),this.checksum==e)return void We.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},we=async function(t,s){e(this,J,"m",ee).call(this,t);const i=this.waitForEvent("fileTransferStatus"),n=Ue.indexOf(t);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},be=function(t){We.log("parseFileStatus",t);const s=t.getUint8(0);e(this,J,"m",Y).call(this,s);const i=Fe[s];e(this,J,"m",Se).call(this,i)},Se=function(s){We.log({status:s}),t(this,ye,s,"f"),e(this,J,"a",K).call(this,"fileTransferStatus",{fileTransferStatus:s}),e(this,De,"f").length=0},Ee=function(){We.assertWithError("idle"==e(this,ye,"f"),"status is not idle")},Ce=function(){We.assertWithError("idle"!=e(this,ye,"f"),"status is idle")},ke=async function(t){We.log("parseFileBlock",t),e(this,De,"f").push(t.buffer);const s=e(this,De,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/e(this,le,"f");if(We.log(`received ${s} of ${e(this,le,"f")} bytes (${100*i}%)`),e(this,J,"a",K).call(this,"fileTransferProgress",{progress:i}),s!=e(this,le,"f"))return;We.log("file transfer complete");let n,r=(new Date).toLocaleString();if("tflite"===this.type)r+=".tflite";n="undefined"!=typeof File?new File(e(this,De,"f"),r):new Blob(e(this,De,"f"));const a=O(await n.arrayBuffer());We.log({checksum:a}),a==e(this,de,"f")?(We.log("received file",n),e(this,J,"a",K).call(this,"getFileBlock",{fileTransferBlock:t}),e(this,J,"a",K).call(this,"fileTransferComplete",{direction:"receiving"}),e(this,J,"a",K).call(this,"fileReceived",{file:n})):We.error(`wrong checksum - expected ${e(this,de,"f")}, got ${a}`)},Te=async function(t){return e(this,J,"m",Me).call(this,t)},Me=async function t(s,i=0){if("sending"!=this.status)return;const n=s.slice(i,i+(this.mtu-3-3));We.log("slicedBuffer",n);const r=1-(s.byteLength-i)/s.byteLength;if(We.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*r}%)`),e(this,J,"a",K).call(this,"fileTransferProgress",{progress:r}),0!=n.byteLength)return this.sendMessage([{type:"setFileBlock",data:n}]),e(this,J,"m",t).call(this,s,i+n.byteLength);We.log("finished sending buffer"),e(this,J,"a",K).call(this,"fileTransferComplete",{direction:"sending"})},te={value:0};const Ae=65536;function Oe(e,t){const s=Date.now();var i;return(i=s)-i%Ae+e.getUint16(t,!0)}var $e;const Be={min:1/0,max:-1/0,range:0};class Ne{constructor(){$e.set(this,Object.assign({},Be))}reset(){Object.assign(e(this,$e,"f"),Be)}update(t){e(this,$e,"f").min=Math.min(t,e(this,$e,"f").min),e(this,$e,"f").max=Math.max(t,e(this,$e,"f").max),e(this,$e,"f").range=e(this,$e,"f").max-e(this,$e,"f").min}getNormalization(t){return e(this,$e,"f").range*t||0}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}var Pe,Ve,ze,je;$e=new WeakMap;class qe{constructor(){Pe.set(this,{x:new Ne,y:new Ne})}reset(){e(this,Pe,"f").x.reset(),e(this,Pe,"f").y.reset()}update(t){e(this,Pe,"f").x.update(t.x),e(this,Pe,"f").y.update(t.y)}getNormalization(t){return{x:e(this,Pe,"f").x.getNormalization(t.x),y:e(this,Pe,"f").y.getNormalization(t.y)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}Pe=new WeakMap;const Ge=T("PressureDataManager",{log:!0}),He=["pressure"],Je=He,Qe=8;class Ke{constructor(){Ve.set(this,[]),ze.set(this,void 0),je.set(this,new qe)}get positions(){return e(this,Ve,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const s=[];for(let t=0,i=0;i<e.byteLength;t++,i+=2)s.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;Ge.log({positions:s}),t(this,Ve,s,"f"),t(this,ze,(i=this.numberOfSensors,n=()=>new Ne,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){e(this,ze,"f").forEach((e=>e.reset())),e(this,je,"f").reset()}parseData(t,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,r=0;r<t.byteLength;n++,r+=2){const a=t.getUint16(r,!0),o=a*s,c=e(this,ze,"f")[n].updateAndGetNormalization(o),h=this.positions[n];i.sensors[n]={rawValue:a,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=e(this,je,"f").updateAndGetNormalization(i.center)),Ge.log({pressure:i}),i}}Ve=new WeakMap,ze=new WeakMap,je=new WeakMap;const Ze=T("MotionSensorDataManager",{log:!0}),Xe=["still","walking","running","bicycle","vehicle","tilting"],Ye=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class et{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const r={x:s,y:i,z:n};return Ze.log({vector:r}),r}parseQuaternion(e,t){let[s,i,n,r]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const a={x:s,y:i,z:n,w:r};return Ze.log({quaternion:a}),a}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1;const r={heading:s,pitch:i,roll:n};return Ze.log({euler:r}),r}parseStepCounter(e){Ze.log("parseStepCounter",e);const t=e.getUint32(0,!0);return Ze.log({stepCount:t}),t}parseActivity(e){Ze.log("parseActivity",e);const t={},s=e.getUint8(0);return Ze.log("activityBitfield",s.toString(2)),Xe.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),Ze.log("activity",t),t}parseDeviceOrientation(e){Ze.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=Ye[t];return Ze.assertWithError(s,"undefined deviceOrientation"),Ze.log({deviceOrientation:s}),s}}var tt,st;const it=["barometer"],nt=it,rt=T("BarometerSensorDataManager",{log:!0});class at{constructor(){tt.add(this)}parseData(t,s){const i=t.getUint32(0,!0)*s,n=e(this,tt,"m",st).call(this,i);return rt.log({pressure:i,altitude:n}),{pressure:i}}}tt=new WeakSet,st=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const ot=T("ParseUtils",{log:!0});function ct(e,t=0){const s=e.getUint8(t++);return{string:P.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function ht(e,t,s,i,n=!1){let r=0;for(;r<e.byteLength;){const a=e.getUint8(r++);ot.assertWithError(a in t,`invalid messageTypeEnum ${a}`);const o=t[a];let c;n?(c=e.getUint16(r,!0),r+=2):c=e.getUint8(r++),ot.log({messageTypeEnum:a,messageType:o,messageLength:c,dataView:e,byteOffset:r});const h=q(e,r,c);ot.log({_dataView:h}),s(o,h,i),r+=c}}const lt=T("SensorDataManager",{log:!0}),ut=[...He,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...it],gt=[...Je,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...nt],ft=["getPressurePositions","getSensorScalars","sensorData"],dt=[...ft,...ut];class mt{constructor(){this.pressureSensorDataManager=new Ke,this.motionSensorDataManager=new et,this.barometerSensorDataManager=new at,this.scalars=new Map}static AssertValidSensorType(e){lt.assertEnumWithError(e,ut)}static AssertValidSensorTypeEnum(e){lt.assertTypeWithError(e,"number"),lt.assertWithError(e in ut,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(lt.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(e){for(let t=0;t<e.byteLength;t+=5){const s=e.getUint8(t),i=ut[s];if(!i){lt.warn(`unknown sensorType index ${s}`);continue}const n=e.getFloat32(t+1,!0);lt.log({sensorType:i,sensorScalar:n}),this.scalars.set(i,n)}}parseData(e){lt.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=Oe(e,t);t+=2;ht(new DataView(e.buffer,t),ut,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(e,t,{timestamp:s}){const i=this.scalars.get(e)||1;let n=null;switch(e){case"pressure":n=this.pressureSensorDataManager.parseData(t,i);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":n=this.motionSensorDataManager.parseVector3(t,i);break;case"gameRotation":case"rotation":n=this.motionSensorDataManager.parseQuaternion(t,i);break;case"orientation":n=this.motionSensorDataManager.parseEuler(t,i);break;case"stepCounter":n=this.motionSensorDataManager.parseStepCounter(t);break;case"stepDetector":n={};break;case"activity":n=this.motionSensorDataManager.parseActivity(t);break;case"deviceOrientation":n=this.motionSensorDataManager.parseDeviceOrientation(t);break;case"barometer":n=this.barometerSensorDataManager.parseData(t,i);break;default:lt.error(`uncaught sensorType "${e}"`)}lt.assertWithError(null!=n,`no sensorData defined for sensorType "${e}"`),lt.log({sensorType:e,sensorData:n}),this.dispatchEvent(e,{sensorType:e,[e]:n,timestamp:s}),this.dispatchEvent("sensorData",{sensorType:e,[e]:n,timestamp:s})}}var pt,vt,wt,yt,bt,St,Et,Ct,Dt,kt,Tt,Mt,Wt;const It=T("SensorConfigurationManager",{log:!0}),_t=65535,Ft=5,Ut=["getSensorConfiguration","setSensorConfiguration"];class Lt{constructor(){pt.add(this),yt.set(this,void 0),St.set(this,void 0),H(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return e(this,St,"f")}async setConfiguration(t,s){if(s&&(t=Object.assign({...this.zeroSensorConfiguration},t)),It.log({newSensorConfiguration:t}),e(this,pt,"m",Ct).call(this,t))return void It.log("redundant sensor configuration");const i=e(this,pt,"m",Mt).call(this,t);It.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get ZeroSensorConfiguration(){return e(this,vt,"f",Wt)}get zeroSensorConfiguration(){const e={};return ut.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(t,s){switch(It.log({messageType:t}),t){case"getSensorConfiguration":case"setSensorConfiguration":const i=e(this,pt,"m",Dt).call(this,s);e(this,pt,"m",Et).call(this,i);break;default:throw Error(`uncaught messageType ${t}`)}}}var Rt,xt,At,Ot,$t,Bt,Nt,Pt,Vt,zt,jt,qt,Gt,Ht,Jt,Qt,Kt,Zt,Xt,Yt,es,ts,ss,is,ns,rs,as,os,cs,hs;vt=Lt,yt=new WeakMap,St=new WeakMap,pt=new WeakSet,wt=function(){return this.eventDispatcher.dispatchEvent},bt=function(t){It.assertWithError(e(this,yt,"f"),"must get initial sensorConfiguration");const s=e(this,yt,"f")?.includes(t);return It.assert(s,`unavailable sensor type "${t}"`),s},Et=function(s){t(this,St,s,"f"),It.log({updatedConfiguration:e(this,St,"f")}),e(this,pt,"a",wt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},Ct=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},Dt=function(e){const s={};for(let t=0;t<e.byteLength;t+=3){const i=e.getUint8(t),n=ut[i];if(!n){It.warn(`unknown sensorType index ${i}`);continue}const r=e.getUint16(t+1,!0);It.log({sensorType:n,sensorRate:r}),s[n]=r}return It.log({parsedSensorConfiguration:s}),t(this,yt,Object.keys(s),"f"),s},kt=function(e){It.assertTypeWithError(e,"number"),It.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),It.assertWithError(e<65535,`sensorRate must be 0 or greater (got ${e})`),It.assertWithError(e%5==0,"sensorRate must be multiple of 5")},Tt=function(t){e(vt,vt,"m",kt).call(vt,t)},Mt=function(t){let s=Object.keys(t);s=s.filter((t=>e(this,pt,"m",bt).call(this,t)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{mt.AssertValidSensorType(s);const r=ut.indexOf(s);i.setUint8(3*n,r);const a=t[s];e(this,pt,"m",Tt).call(this,a),i.setUint16(3*n+1,a,!0)})),It.log({sensorConfigurationData:i}),i},Wt={value:{}},ut.forEach((t=>{e(vt,vt,"f",Wt)[t]=0}));const ls=T("TfliteManager",{log:!0}),us=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],gs=us,fs=["classification","regression"],ds=["pressure","linearAcceleration","gyroscope","magnetometer"];class ms{constructor(){Rt.add(this),$t.set(this,void 0),Pt.set(this,void 0),jt.set(this,void 0),Ht.set(this,[]),Kt.set(this,void 0),es.set(this,void 0),is.set(this,void 0),as.set(this,void 0),H(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return e(this,$t,"f")}async setName(e,t){if(ls.assertTypeWithError(e,"string"),this.name==e)return void ls.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=N.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return e(this,Pt,"f")}async setTask(t,s){if(e(this,Rt,"m",xt).call(this,t),this.task==t)return void ls.log(`redundant task assignment ${t}`);const i=this.waitForEvent("getTfliteTask"),n=fs.indexOf(t);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return e(this,jt,"f")}async setSampleRate(t,s){if(ls.assertTypeWithError(t,"number"),t-=t%5,ls.assertWithError(t>=5,`sampleRate must be multiple of 5 greater than 0 (got ${t})`),e(this,jt,"f")==t)return void ls.log(`redundant sampleRate assignment ${t}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static AssertValidSensorType(e){mt.AssertValidSensorType(e),ls.assertWithError(ds.includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return e(this,Ht,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{ms.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>ut.indexOf(e))).sort();ls.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return e(this,Kt,"f")}get captureDelay(){return e(this,es,"f")}async setCaptureDelay(t,s){if(ls.assertTypeWithError(t,"number"),e(this,es,"f")==t)return void ls.log(`redundant captureDelay assignment ${t}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return e(this,is,"f")}async setThreshold(t,s){if(ls.assertTypeWithError(t,"number"),ls.assertWithError(t>=0,`threshold must be positive (got ${t})`),e(this,is,"f")==t)return void ls.log(`redundant threshold assignment ${t}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,t,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return e(this,as,"f")}async setInferencingEnabled(t,s=!0){if(ls.assertTypeWithError(t,"boolean"),!t&&!this.isReady)return;if(e(this,Rt,"m",Yt).call(this),e(this,as,"f")==t)return void ls.log(`redundant inferencingEnabled assignment ${t}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(t)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(t,s){switch(ls.log({messageType:t}),t){case"getTfliteName":case"setTfliteName":e(this,Rt,"m",Bt).call(this,s);break;case"getTfliteTask":case"setTfliteTask":e(this,Rt,"m",Vt).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":e(this,Rt,"m",qt).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":e(this,Rt,"m",Jt).call(this,s);break;case"tfliteIsReady":e(this,Rt,"m",Zt).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":e(this,Rt,"m",ts).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":e(this,Rt,"m",ns).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":e(this,Rt,"m",os).call(this,s);break;case"tfliteInference":e(this,Rt,"m",hs).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}}var ps,vs,ws,ys,bs;$t=new WeakMap,Pt=new WeakMap,jt=new WeakMap,Ht=new WeakMap,Kt=new WeakMap,es=new WeakMap,is=new WeakMap,as=new WeakMap,Rt=new WeakSet,xt=function(e){ls.assertEnumWithError(e,fs)},At=function(e){ls.assertWithError(e in fs,`invalid taskEnum ${e}`)},Ot=function(){return this.eventDispatcher.dispatchEvent},Bt=function(t){ls.log("parseName",t);const s=P.decode(t.buffer);e(this,Rt,"m",Nt).call(this,s)},Nt=function(s){ls.log({name:s}),t(this,$t,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteName",{tfliteName:s})},Vt=function(t){ls.log("parseTask",t);const s=t.getUint8(0);e(this,Rt,"m",At).call(this,s);const i=fs[s];e(this,Rt,"m",zt).call(this,i)},zt=function(s){ls.log({task:s}),t(this,Pt,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteTask",{tfliteTask:s})},qt=function(t){ls.log("parseSampleRate",t);const s=t.getUint16(0,!0);e(this,Rt,"m",Gt).call(this,s)},Gt=function(s){ls.log({sampleRate:s}),t(this,jt,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteSampleRate",{tfliteSampleRate:s})},Jt=function(t){ls.log("parseSensorTypes",t);const s=[];for(let e=0;e<t.byteLength;e++){const i=t.getUint8(e),n=ut[i];n?s.push(n):ls.error(`invalid sensorTypeEnum ${i}`)}e(this,Rt,"m",Qt).call(this,s)},Qt=function(s){ls.log({sensorTypes:s}),t(this,Ht,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:s})},Zt=function(t){ls.log("parseIsReady",t);const s=Boolean(t.getUint8(0));e(this,Rt,"m",Xt).call(this,s)},Xt=function(s){ls.log({isReady:s}),t(this,Kt,s,"f"),e(this,Rt,"a",Ot).call(this,"tfliteIsReady",{tfliteIsReady:s})},Yt=function(){ls.assertWithError(this.isReady,"tflite is not ready")},ts=function(t){ls.log("parseCaptureDelay",t);const s=t.getUint16(0,!0);e(this,Rt,"m",ss).call(this,s)},ss=function(s){ls.log({captureDelay:s}),t(this,es,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:s})},ns=function(t){ls.log("parseThreshold",t);const s=t.getFloat32(0,!0);e(this,Rt,"m",rs).call(this,s)},rs=function(s){ls.log({threshold:s}),t(this,is,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteThreshold",{tfliteThreshold:s})},os=function(t){ls.log("parseInferencingEnabled",t);const s=Boolean(t.getUint8(0));e(this,Rt,"m",cs).call(this,s)},cs=function(s){ls.log({inferencingEnabled:s}),t(this,as,s,"f"),e(this,Rt,"a",Ot).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:s})},hs=function(t){ls.log("parseInference",t);const s=Oe(t,0);ls.log({timestamp:s});const i=[];for(let e=0,s=2;s<t.byteLength;e++,s+=4){const e=t.getFloat32(s,!0);i.push(e)}ls.log("values",i);const n={timestamp:s,values:i};e(this,Rt,"a",Ot).call(this,"tfliteInference",{tfliteInference:n})};const Ss=T("DeviceInformationManager",{log:!0}),Es=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],Cs=[...Es,"deviceInformation"];class Ds{constructor(){ps.add(this),ws.set(this,{})}get information(){return e(this,ws,"f")}clear(){t(this,ws,{},"f")}parseMessage(t,s){switch(Ss.log({messageType:t}),t){case"manufacturerName":const i=P.decode(s.buffer);Ss.log({manufacturerName:i}),e(this,ps,"m",bs).call(this,{manufacturerName:i});break;case"modelNumber":const n=P.decode(s.buffer);Ss.log({modelNumber:n}),e(this,ps,"m",bs).call(this,{modelNumber:n});break;case"softwareRevision":const r=P.decode(s.buffer);Ss.log({softwareRevision:r}),e(this,ps,"m",bs).call(this,{softwareRevision:r});break;case"hardwareRevision":const a=P.decode(s.buffer);Ss.log({hardwareRevision:a}),e(this,ps,"m",bs).call(this,{hardwareRevision:a});break;case"firmwareRevision":const o=P.decode(s.buffer);Ss.log({firmwareRevision:o}),e(this,ps,"m",bs).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),Ss.log({pnpId:c}),e(this,ps,"m",bs).call(this,{pnpId:c});break;case"serialNumber":const h=P.decode(s.buffer);Ss.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}var ks,Ts,Ms,Ws,Is,_s,Fs,Us,Ls,Rs,xs,As,Os,$s,Bs,Ns,Ps,Vs;ws=new WeakMap,ps=new WeakSet,vs=function(){return this.eventDispatcher.dispatchEvent},ys=function(){return Es.every((t=>t in e(this,ws,"f")))},bs=function(t){Ss.log({partialDeviceInformation:t});Object.keys(t).forEach((s=>{e(this,ps,"a",vs).call(this,s,{[s]:t[s]})})),Object.assign(e(this,ws,"f"),t),Ss.log({deviceInformation:e(this,ws,"f")}),e(this,ps,"a",ys)&&(Ss.log("completed deviceInformation"),e(this,ps,"a",vs).call(this,"deviceInformation",{deviceInformation:this.information}))};const zs=T("InformationManager",{log:!0}),js=["leftInsole","rightInsole"],qs=["left","right"],Gs=2,Hs=30,Js=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],Qs=Js;class Ks{constructor(){ks.add(this),Ms.set(this,!1),Is.set(this,void 0),Fs.set(this,void 0),Ls.set(this,""),Rs.set(this,void 0),$s.set(this,0),Ns.set(this,!1),H(this)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return e(this,Ms,"f")}get batteryCurrent(){return e(this,Is,"f")}async getBatteryCurrent(){zs.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}get id(){return e(this,Fs,"f")}get name(){return e(this,Ls,"f")}updateName(s){zs.assertTypeWithError(s,"string"),t(this,Ls,s,"f"),zs.log({updatedName:e(this,Ls,"f")}),e(this,ks,"a",Ts).call(this,"getName",{name:e(this,Ls,"f")})}async setName(e){zs.assertTypeWithError(e,"string"),zs.assertWithError(e.length>=2,`name must be greater than 2 characters long ("${e}" is ${e.length} characters long)`),zs.assertWithError(e.length<30,`name must be less than 30 characters long ("${e}" is ${e.length} characters long)`);const t=N.encode(e);zs.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return e(this,Rs,"f")}get typeEnum(){return js.indexOf(this.type)}updateType(s){e(this,ks,"m",xs).call(this,s),s!=this.type?(t(this,Rs,s,"f"),zs.log({updatedType:e(this,Rs,"f")}),e(this,ks,"a",Ts).call(this,"getType",{type:e(this,Rs,"f")})):zs.log("redundant type assignment")}async setType(t){e(this,ks,"m",xs).call(this,t);const s=js.indexOf(t);e(this,ks,"m",Os).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return e(this,$s,"f")}get isCurrentTimeSet(){return e(this,Ns,"f")}parseMessage(t,s){switch(zs.log({messageType:t}),t){case"isCharging":const i=Boolean(s.getUint8(0));zs.log({isCharging:i}),e(this,ks,"m",Ws).call(this,i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);zs.log({batteryCurrent:n}),e(this,ks,"m",_s).call(this,n);break;case"getId":const r=P.decode(s.buffer);zs.log({id:r}),e(this,ks,"m",Us).call(this,r);break;case"getName":case"setName":const a=P.decode(s.buffer);zs.log({name:a}),this.updateName(a);break;case"getType":case"setType":const o=s.getUint8(0),c=js[o];zs.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);zs.log({mtu:h}),e(this,ks,"m",Bs).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));e(this,ks,"m",Ps).call(this,l);break;default:throw Error(`uncaught messageType ${t}`)}}clear(){t(this,Ns,!1,"f")}}Ms=new WeakMap,Is=new WeakMap,Fs=new WeakMap,Ls=new WeakMap,Rs=new WeakMap,$s=new WeakMap,Ns=new WeakMap,ks=new WeakSet,Ts=function(){return this.eventDispatcher.dispatchEvent},Ws=function(s){zs.assertTypeWithError(s,"boolean"),t(this,Ms,s,"f"),zs.log({isCharging:e(this,Ms,"f")}),e(this,ks,"a",Ts).call(this,"isCharging",{isCharging:e(this,Ms,"f")})},_s=function(s){zs.assertTypeWithError(s,"number"),t(this,Is,s,"f"),zs.log({batteryCurrent:e(this,Is,"f")}),e(this,ks,"a",Ts).call(this,"getBatteryCurrent",{batteryCurrent:e(this,Is,"f")})},Us=function(s){zs.assertTypeWithError(s,"string"),t(this,Fs,s,"f"),zs.log({id:e(this,Fs,"f")}),e(this,ks,"a",Ts).call(this,"getId",{id:e(this,Fs,"f")})},xs=function(e){zs.assertEnumWithError(e,js)},As=function(e){zs.assertTypeWithError(e,"number"),zs.assertWithError(e in js,`invalid typeEnum ${e}`)},Os=async function(t){e(this,ks,"m",As).call(this,t);const s=Uint8Array.from([t]);zs.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Bs=function(s){zs.assertTypeWithError(s,"number"),e(this,$s,"f")!=s?(t(this,$s,s,"f"),e(this,ks,"a",Ts).call(this,"getMtu",{mtu:e(this,$s,"f")})):zs.log("redundant mtu assignment",s)},Ps=function(s){zs.log({currentTime:s}),t(this,Ns,0!=s,"f"),e(this,Ns,"f")||e(this,ks,"m",Vs).call(this)},Vs=async function(){zs.log("setting current time...");const e=new DataView(new ArrayBuffer(8));e.setBigUint64(0,BigInt(Date.now()),!0);const t=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:e.buffer}]),await t};const Zs=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var Xs,Ys,ei,ti,si,ii,ni,ri,ai,oi,ci,hi,li,ui,gi,fi;const di=T("VibrationManager"),mi=["front","rear"],pi=["waveformEffect","waveform"],vi=8,wi=2550,yi=1270,bi=3,Si=20,Ei=6;class Ci{constructor(){Xs.add(this),H(this)}async triggerVibration(t,s=!0){let i;t.forEach((t=>{const{type:s}=t;let n,{locations:r}=t;switch(r=r||mi.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=t;n=e(this,Xs,"m",li).call(this,r,s,i)}break;case"waveform":{const{segments:s}=t;n=e(this,Xs,"m",ui).call(this,r,s)}break;default:throw Error(`invalid vibration type "${s}"`)}di.log({type:s,arrayBuffer:n}),i=z(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var Di,ki,Ti,Mi,Wi,Ii,_i,Fi,Ui,Li,Ri,xi,Ai,Oi;Xs=new WeakSet,Ys=function(e){di.assertTypeWithError(e,"string"),di.assertWithError(mi.includes(e),`invalid location "${e}"`)},ei=function(t){e(this,Xs,"m",si).call(this,t),t.forEach((t=>{e(this,Xs,"m",Ys).call(this,t)}))},ti=function(t){e(this,Xs,"m",ei).call(this,t);let s=0;return t.forEach((e=>{const t=mi.indexOf(e);s|=1<<t})),di.log({locationsBitmask:s}),di.assertWithError(s>0,"locationsBitmask must not be zero"),s},si=function(e){di.assertWithError(Array.isArray(e),"passed non-array"),di.assertWithError(e.length>0,"passed empty array")},ii=function(e){di.assertWithError(Zs.includes(e),`invalid waveformEffect "${e}"`)},ni=function(t){if(null!=t.effect){const s=t.effect;e(this,Xs,"m",ii).call(this,s)}else{if(null==t.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:e}=t;di.assertWithError(e>=0,`delay must be 0ms or greater (got ${e})`),di.assertWithError(e<=yi,`delay must be 1270ms or less (got ${e})`)}}if(null!=t.loopCount){const{loopCount:s}=t;e(this,Xs,"m",ri).call(this,s)}},ri=function(e){di.assertTypeWithError(e,"number"),di.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),di.assertWithError(e<=3,`waveformEffectSegmentLoopCount must be 3 or fewer (got ${e})`)},ai=function(t){e(this,Xs,"m",si).call(this,t),di.assertWithError(t.length<=8,`must have 8 waveformEffectSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,Xs,"m",ni).call(this,t)}))},oi=function(e){di.assertTypeWithError(e,"number"),di.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),di.assertWithError(e<=6,`waveformEffectSequenceLoopCount must be 6 or fewer (got ${e})`)},ci=function(e){di.assertTypeWithError(e.amplitude,"number"),di.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),di.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),di.assertTypeWithError(e.duration,"number"),di.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),di.assertWithError(e.duration<=wi,`duration must be 2550ms or less (got ${e.duration}ms)`)},hi=function(t){e(this,Xs,"m",si).call(this,t),di.assertWithError(t.length<=20,`must have 20 waveformSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,Xs,"m",ci).call(this,t)}))},li=function(t,s,i=0){e(this,Xs,"m",ai).call(this,s),e(this,Xs,"m",oi).call(this,i);let n=[],r=0;const a=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||a&&e<8;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[r++]=Zs.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[r++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<8;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[r]=0);const i=e%4*2;n[r]|=t<<i,3!=e&&7!=e||r++}0!=i&&(n[r++]=i);const c=new DataView(Uint8Array.from(n).buffer);return di.log({dataArray:n,dataView:c}),e(this,Xs,"m",fi).call(this,t,"waveformEffect",c)},ui=function(t,s){e(this,Xs,"m",hi).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),di.log({dataView:i}),e(this,Xs,"m",fi).call(this,t,"waveform",i)},gi=function(e){di.assertTypeWithError(e,"string"),di.assertWithError(pi.includes(e),`invalid vibrationType "${e}"`)},fi=function(t,s,i){di.assertWithError(i?.byteLength>0,"no data received");const n=e(this,Xs,"m",ti).call(this,t);e(this,Xs,"m",gi).call(this,s);const r=pi.indexOf(s);di.log({locationsBitmask:n,vibrationTypeIndex:r,dataView:i});const a=z(n,r,i.byteLength,i);return di.log({data:a}),a};const $i=T("BaseConnectionManager",{log:!0}),Bi=["not connected","connecting","connected","disconnecting"],Ni=[...Js,...Ut,...ft,"triggerVibration",...us,...Ie],Pi=[...Es,"batteryLevel","smp","rx","tx",...Ni];class Vi{get baseConstructor(){return this.constructor}static get isSupported(){return!1}get isSupported(){return this.baseConstructor.isSupported}get type(){return this.baseConstructor.type}constructor(){Di.add(this),Wi.set(this,"not connected"),Ri.set(this,[]),Ai.set(this,new R(e(this,Di,"m",Oi).bind(this),5e3)),e(this,Di,"m",Mi).call(this)}get status(){return e(this,Wi,"f")}set status(s){$i.assertEnumWithError(s,Bi),e(this,Wi,"f")!=s?($i.log(`new connection status "${s}"`),t(this,Wi,s,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,Ai,"f").start():e(this,Ai,"f").stop(),"not connected"==e(this,Wi,"f")&&(this.mtu=void 0)):$i.log(`tried to assign same connection status "${s}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,Di,"m",Ii).call(this),e(this,Di,"m",_i).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,Di,"m",Ii).call(this),e(this,Di,"m",_i).call(this),$i.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,Di,"m",Fi).call(this),e(this,Di,"m",Ui).call(this),this.status="disconnecting",$i.log("disconnecting from device...")}async sendSmpMessage(t){e(this,Di,"m",Li).call(this),$i.log("sending smp message",t)}async sendTxMessages(t,s=!0){if(e(this,Di,"m",Li).call(this),t&&e(this,Ri,"f").push(...t),!s)return;$i.log("sendTxMessages",e(this,Ri,"f").slice());const i=e(this,Ri,"f").map((t=>{e(ki,ki,"m",Ti).call(ki,t.type);const s=Ni.indexOf(t.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,t.data?.byteLength||0,!0),z(s,i,t.data)}));if(this.mtu)for(;i.length>0;){let e=0,t=0;i.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=i.splice(0,t);$i.log({arrayBufferCount:t,arrayBuffersToSend:s});const n=z(...s);$i.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=z(...i);$i.log("sending arrayBuffer",e),await this.sendTxData(e)}e(this,Ri,"f").length=0}async sendTxData(e){$i.log("sendTxData",e)}parseRxMessage(t){ht(t,Ni,e(this,Di,"m",xi).bind(this),null,!0)}}ki=Vi,Wi=new WeakMap,Ri=new WeakMap,Ai=new WeakMap,Di=new WeakSet,Ti=function(e){$i.assertEnumWithError(e,Ni)},Mi=function(){$i.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Ii=function(){$i.assertWithError(!this.isConnected,"device is already connected")},_i=function(){$i.assertWithError("connecting"!=this.status,"device is already connecting")},Fi=function(){$i.assertWithError(this.isConnected,"device is not connected")},Ui=function(){$i.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Li=function(){e(this,Di,"m",Fi).call(this),e(this,Di,"m",Ui).call(this)},xi=function(e,t){$i.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Oi=function(){this.isConnected||($i.log("timer detected disconnection"),this.status="not connected")};const zi=T("EventUtils",{log:!1});function ji(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;zi.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function qi(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;zi.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Gi=T("bluetoothUUIDs",{log:!1});if(i)var Hi=window.BluetoothUUID;function Ji(e){return Gi.assertTypeWithError(e,"string"),Gi.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function Qi(e){return Hi?.getCharacteristic?.(e)}function Ki(e){return Hi?.getService?.(e)}const Zi=Object.freeze({services:{deviceInformation:{uuid:Ki("device_information"),characteristics:{manufacturerName:{uuid:Qi("manufacturer_name_string")},modelNumber:{uuid:Qi("model_number_string")},hardwareRevision:{uuid:Qi("hardware_revision_string")},firmwareRevision:{uuid:Qi("firmware_revision_string")},softwareRevision:{uuid:Qi("software_revision_string")},pnpId:{uuid:Qi("pnp_id")},serialNumber:{uuid:Qi("serial_number_string")}}},battery:{uuid:Ki("battery_service"),characteristics:{batteryLevel:{uuid:Qi("battery_level")}}},main:{uuid:Ji("0000"),characteristics:{rx:{uuid:Ji("1000")},tx:{uuid:Ji("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),Xi=[Zi.services.main.uuid],Yi=[Zi.services.deviceInformation.uuid,Zi.services.battery.uuid,Zi.services.smp.uuid];function en(e){e=e.toString().toLowerCase();return Object.keys(Zi.services).find((t=>{let s=Zi.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const tn=[],sn=[];function nn(e){var t;return e=e.toString().toLowerCase(),Object.values(Zi.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function rn(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}switch(e){case"tx":case"smp":t.writeWithoutResponse=!0}return t}Object.values(Zi.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];Xi.includes(e.uuid)&&(tn.push(i.uuid),t.push(s)),sn.push(i.uuid)}))}),[]);const an=T("BluetoothConnectionManager",{log:!0});class on extends Vi{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){an.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var cn,hn,ln,un,gn,fn,dn,mn,pn,vn,wn;const yn=T("WebBluetoothConnectionManager",{log:!0});var bn;i&&(bn=window.navigator.bluetooth);class Sn extends on{constructor(){super(...arguments),cn.add(this),hn.set(this,{characteristicvaluechanged:e(this,cn,"m",pn).bind(this)}),ln.set(this,{gattserverdisconnected:e(this,cn,"m",wn).bind(this)}),un.set(this,void 0),gn.set(this,new Map),fn.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(bn)}static get type(){return"webBluetooth"}get device(){return e(this,un,"f")}set device(s){e(this,un,"f")!=s?(e(this,un,"f")&&qi(e(this,un,"f"),e(this,ln,"f")),s&&ji(s,e(this,ln,"f")),t(this,un,s,"f")):yn.log("tried to assign the same BluetoothDevice")}get server(){return e(this,un,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await bn.requestDevice({filters:[{services:Xi}],optionalServices:i?Yi:[]});yn.log("got BluetoothDevice"),this.device=t,yn.log("connecting to device...");const s=await this.server.connect();yn.log(`connected to device? ${s.connected}`),await e(this,cn,"m",dn).call(this),yn.log("fully connected"),this.status="connected"}catch(t){yn.error(t),this.status="not connected",this.server?.disconnect(),e(this,cn,"m",mn).call(this)}}async disconnect(){await e(this,cn,"m",mn).call(this),await super.disconnect(),this.server?.disconnect(),this.status="not connected"}async writeCharacteristic(t,s){super.writeCharacteristic(t,s);const i=e(this,fn,"f").get(t);yn.assertWithError(i,`${t} characteristic not found`),yn.log("writing characteristic",i,s);const n=i.properties||rn(t);n.writeWithoutResponse?(yn.log("writing without response"),await i.writeValueWithoutResponse(s)):(yn.log("writing with response"),await i.writeValueWithResponse(s)),yn.log("wrote characteristic"),n.read&&!n.notify&&(yn.log("reading value after write..."),await i.readValue(),(o||c)&&e(this,cn,"m",vn).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),yn.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){yn.error(e),this.isInRange=!1}this.isConnected?(yn.log("successfully reconnected!"),await e(this,cn,"m",dn).call(this),this.status="connected"):(yn.log("unable to reconnect"),this.status="not connected")}}hn=new WeakMap,ln=new WeakMap,un=new WeakMap,gn=new WeakMap,fn=new WeakMap,cn=new WeakSet,dn=async function(){e(this,cn,"m",mn).call(this),yn.log("getting services...");const t=await this.server.getPrimaryServices();yn.log("got services",t.length),await this.server.getPrimaryService("8d53dc1d-1db7-4cd3-868b-8a527460aa84"),yn.log("getting characteristics...");for(const s in t){const i=t[s];yn.log({service:i});const n=en(i.uuid);yn.assertWithError(n,`no name found for service uuid "${i.uuid}"`),yn.log(`got "${n}" service`),i.name=n,e(this,gn,"f").set(n,i),yn.log(`getting characteristics for "${n}" service`);const r=await i.getCharacteristics();yn.log(`got characteristics for "${n}" service`);for(const t in r){const s=r[t];yn.log({characteristic:s});const i=nn(s.uuid);yn.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),yn.log(`got "${i}" characteristic in "${n}" service`),s.name=i,e(this,fn,"f").set(i,s),ji(s,e(this,hn,"f"));const a=s.properties||rn(i);a.notify&&(yn.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),a.read&&(yn.log(`reading "${i}" characteristic...`),await s.readValue(),(o||c)&&e(this,cn,"m",vn).call(this,s))}}},mn=async function(){this.device&&qi(this.device,e(this,ln,"f"));const t=Array.from(e(this,fn,"f").keys()).map((t=>{const s=e(this,fn,"f").get(t);qi(s,e(this,hn,"f"));if((s.properties||rn(t)).notify)return yn.log(`stopping notifications for "${t}" characteristic`),s.stopNotifications()}));return Promise.allSettled(t)},pn=function(t){yn.log("oncharacteristicvaluechanged");const s=t.target;e(this,cn,"m",vn).call(this,s)},vn=function(e){yn.log("onCharacteristicValue");const t=e.name;yn.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),yn.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;yn.assertWithError(s,`no data found for "${t}" characteristic`),yn.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){yn.error(e)}},wn=function(){yn.log("gattserverdisconnected"),this.status="not connected"};const En=4294967296,Cn=9007199254740992;const Dn={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function r(e){let r=s.byteLength;const a=n+e;for(;r<a;)r<<=1;if(r!==s.byteLength){const e=i;s=new ArrayBuffer(r),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function a(){n+=t}function o(e){a(r(1).setUint8(n,e))}function c(e){const t=r(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);a()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){a(r(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){a(r(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%En,s=(e-t)/En,i=r(8);i.setUint32(n,s),i.setUint32(n+4,t),a()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=Cn)return h(0,t);if(-Cn<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){a(r(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),u=new DataView(l);for(let e=0;e<n;++e)u.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function r(e,t){return n+=e,t}function a(t){return r(t,new Uint8Array(e,n,t))}function o(){return r(1,i.getUint8(n))}function c(){return r(2,i.getUint16(n))}function h(){return r(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function u(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*En+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function g(e){const t=o();if(255===t)return-1;const s=u(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function f(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const r=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==r)return(i?-1:1)*r*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|r<<13),t.getFloat32(0)}();case 26:return r(4,i.getFloat32(n));case 27:return r(8,i.getFloat64(n))}if(v=u(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=g(d))>=0;)t+=v,e.push(a(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return a(v);case 3:if(v<0)for(;(v=g(d))>=0;)f(w,v);else f(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},kn=T("mcumgr",{log:!0}),Tn=0,Mn=1,Wn=2,In=3,_n=0,Fn=1,Un=8,Ln=0,Rn=2,xn=3,An=5,On=0,$n=1,Bn=5,Nn=0;class Pn{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(Dn.encode(i))]);const r=255&n.length,a=[e,0,n.length>>8,r,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,a}_notification(e){kn.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,r,,a]=e,o=Dn.decode(e.slice(8).buffer),c=256*s+i,h=256*n+r;return kn.log("mcumgr - Process Message - Group: "+h+", Id: "+a+", Off: "+o.off),h===Fn&&a===$n&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===In&&h===Un&&a===Nn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===Mn&&h===Un&&a===Nn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),kn.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}))}cmdReset(){return this._getMessage(Wn,_n,An)}smpEcho(e){return this._getMessage(Wn,_n,Ln,{d:e})}cmdImageState(){return this._getMessage(Tn,Fn,On)}cmdImageErase(){return this._getMessage(Wn,Fn,Bn,{})}cmdImageTest(e){return this._getMessage(Wn,Fn,On,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(Wn,Fn,On,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-Dn.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(Wn,Fn,$n,e);kn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?kn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?kn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(kn.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-Dn.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(Wn,Un,Nn,e);kn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?kn.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage(Tn,Un,Nn,e);kn.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const r=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=r,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var Vn,zn,jn,qn,Gn,Hn,Jn,Qn,Kn,Zn,Xn,Yn,er,tr,sr,ir,nr,rr,ar,or,cr;const hr=T("FirmwareManager",{log:!0}),lr=["smp"],ur=[...lr,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],gr=["idle","uploading","uploaded","pending","testing","erasing"];class fr{constructor(){Vn.add(this),jn.set(this,"idle"),Gn.set(this,void 0),Qn.set(this,void 0),Kn.set(this,new Pn),e(this,Vn,"m",Zn).call(this),H(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(t,s){if(hr.log({messageType:t}),"smp"!==t)throw Error(`uncaught messageType ${t}`);e(this,Kn,"f")._notification(Array.from(new Uint8Array(s.buffer))),e(this,Vn,"a",zn).call(this,"smp",{dataView:s})}async uploadFirmware(t){hr.log("uploadFirmware",t);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await G(t),n=await e(this,Kn,"f").imageInfo(i);hr.log({imageInfo:n}),e(this,Kn,"f").cmdUpload(i,1),e(this,Vn,"m",qn).call(this,"uploading"),await s}get status(){return e(this,jn,"f")}get images(){return e(this,Gn,"f")}async getImages(){const t=this.waitForEvent("firmwareImages");hr.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(e(this,Kn,"f").cmdImageState()).buffer),await t}async testImage(t=1){if(e(this,Vn,"m",Jn).call(this,t),e(this,Vn,"m",Hn).call(this),!e(this,Gn,"f")[t])return void hr.log(`image ${t} not found`);if(1==e(this,Gn,"f")[t].pending)return void hr.log(`image ${t} is already pending`);if(e(this,Gn,"f")[t].empty)return void hr.log(`image ${t} is empty`);const s=this.waitForEvent("smp");hr.log("testing firmware image..."),this.sendMessage(Uint8Array.from(e(this,Kn,"f").cmdImageTest(e(this,Gn,"f")[t].hash)).buffer),await s}async eraseImage(){e(this,Vn,"m",Hn).call(this);const t=this.waitForEvent("smp");hr.log("erasing image..."),this.sendMessage(Uint8Array.from(e(this,Kn,"f").cmdImageErase()).buffer),e(this,Vn,"m",qn).call(this,"erasing"),await t,await this.getImages()}async confirmImage(t=0){if(e(this,Vn,"m",Jn).call(this,t),e(this,Vn,"m",Hn).call(this),!0===e(this,Gn,"f")[t].confirmed)return void hr.log(`image ${t} is already confirmed`);const s=this.waitForEvent("smp");hr.log("confirming image..."),this.sendMessage(Uint8Array.from(e(this,Kn,"f").cmdImageConfirm(e(this,Gn,"f")[t].hash)).buffer),await s}async echo(t){hr.assertTypeWithError(t,"string");const s=this.waitForEvent("smp");hr.log("sending echo..."),this.sendMessage(Uint8Array.from(e(this,Kn,"f").smpEcho(t)).buffer),await s}async reset(){const t=this.waitForEvent("smp");hr.log("resetting..."),this.sendMessage(Uint8Array.from(e(this,Kn,"f").cmdReset()).buffer),await t}get mtu(){return e(this,Qn,"f")}set mtu(s){t(this,Qn,s,"f"),e(this,Kn,"f")._mtu=s}}var dr,mr,pr,vr,wr,yr,br,Sr,Er,Cr,Dr,kr,Tr,Mr,Wr,Ir,_r,Fr,Ur,Lr,Rr,xr,Ar,Or,$r,Br,Nr,Pr,Vr,zr,jr,qr,Gr,Hr,Jr,Qr,Kr,Zr,Xr,Yr,ea,ta,sa,ia,na,ra,aa,oa,ca;jn=new WeakMap,Gn=new WeakMap,Qn=new WeakMap,Kn=new WeakMap,Vn=new WeakSet,zn=function(){return this.eventDispatcher.dispatchEvent},qn=function(s){hr.assertEnumWithError(s,gr),e(this,jn,"f")!=s?(t(this,jn,s,"f"),hr.log({firmwareStatus:e(this,jn,"f")}),e(this,Vn,"a",zn).call(this,"firmwareStatus",{firmwareStatus:e(this,jn,"f")})):hr.log(`redundant firmwareStatus assignment "${s}"`)},Hn=function(){hr.assertWithError(e(this,Gn,"f"),"didn't get imageState")},Jn=function(e){hr.assertTypeWithError(e,"number"),hr.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},Zn=function(){e(this,Kn,"f").onMessage(e(this,Vn,"m",Xn).bind(this)),e(this,Kn,"f").onFileDownloadNext(e(this,Vn,"m",Yn)),e(this,Kn,"f").onFileDownloadProgress(e(this,Vn,"m",er).bind(this)),e(this,Kn,"f").onFileDownloadFinished(e(this,Vn,"m",tr).bind(this)),e(this,Kn,"f").onFileUploadNext(e(this,Vn,"m",sr).bind(this)),e(this,Kn,"f").onFileUploadProgress(e(this,Vn,"m",ir).bind(this)),e(this,Kn,"f").onFileUploadFinished(e(this,Vn,"m",nr).bind(this)),e(this,Kn,"f").onImageUploadNext(e(this,Vn,"m",rr).bind(this)),e(this,Kn,"f").onImageUploadProgress(e(this,Vn,"m",ar).bind(this)),e(this,Kn,"f").onImageUploadFinished(e(this,Vn,"m",or).bind(this))},Xn=function({op:t,group:s,id:i,data:n,length:r}){switch(hr.log("onMcuMessage",...arguments),s){case _n:switch(i){case Ln:hr.log(`echo "${n.r}"`);break;case Rn:hr.table(n.tasks);break;case xn:hr.log(n)}break;case Fn:if(i===On)e(this,Vn,"m",cr).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},Yn=function(){hr.log("onMcuFileDownloadNext",...arguments)},er=function(){hr.log("onMcuFileDownloadProgress",...arguments)},tr=function(){hr.log("onMcuFileDownloadFinished",...arguments)},sr=function(){hr.log("onMcuFileUploadNext")},ir=function(){hr.log("onMcuFileUploadProgress")},nr=function(){hr.log("onMcuFileUploadFinished")},rr=function({packet:e}){hr.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},ar=function({percentage:t}){const s=t/100;hr.log("onMcuImageUploadProgress",...arguments),e(this,Vn,"a",zn).call(this,"firmwareUploadProgress",{progress:s})},or=async function(){hr.log("onMcuImageUploadFinished",...arguments),await this.getImages(),e(this,Vn,"a",zn).call(this,"firmwareUploadProgress",{progress:100}),e(this,Vn,"a",zn).call(this,"firmwareUploadComplete",{})},cr=function({images:s}){if(!s)return void hr.log("no images found");t(this,Gn,s,"f"),hr.log("images",e(this,Gn,"f"));let i="idle";2==e(this,Gn,"f").length&&(e(this,Gn,"f")[1].bootable?e(this,Gn,"f")[0].confirmed?e(this,Gn,"f")[1].pending?(hr.log("reset to upload to the new firmware image"),i="pending"):(hr.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(hr.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):hr.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==e(this,Gn,"f").length&&(e(this,Gn,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),hr.log("Select a firmware upload image to upload to slot 1.")),e(this,Vn,"m",qn).call(this,i),e(this,Vn,"a",zn).call(this,"firmwareImages",{firmwareImages:e(this,Gn,"f")})};const ha=T("Device",{log:!0}),la=[...[...Bi,"connectionStatus","isConnected"],...Pi,"connectionMessage",...Qs,...Cs,...dt,...Re,...gs,...ur];class ua{get bluetoothId(){return e(this,yr,"f")?.bluetoothId}constructor(){dr.add(this),vr.set(this,new I(this,la)),yr.set(this,void 0),this.sendTxMessages=e(this,dr,"m",br).bind(this),Sr.set(this,!1),Wr.set(this,mr.ReconnectOnDisconnection),Ir.set(this,void 0),this.latestConnectionMessage=new Map,xr.set(this,new Ds),Ar.set(this,0),$r.set(this,new Ks),Br.set(this,new Lt),Pr.set(this,mr.ClearSensorConfigurationOnLeave),Vr.set(this,new mt),zr.set(this,new Ci),jr.set(this,new xe),qr.set(this,new ms),Gr.set(this,new fr),this.sendSmpMessage=e(this,dr,"m",Hr).bind(this),e(this,xr,"f").eventDispatcher=e(this,vr,"f"),e(this,$r,"f").sendMessage=this.sendTxMessages,e(this,$r,"f").eventDispatcher=e(this,vr,"f"),e(this,Br,"f").sendMessage=this.sendTxMessages,e(this,Br,"f").eventDispatcher=e(this,vr,"f"),e(this,Vr,"f").eventDispatcher=e(this,vr,"f"),e(this,zr,"f").sendMessage=this.sendTxMessages,e(this,qr,"f").sendMessage=this.sendTxMessages,e(this,qr,"f").eventDispatcher=e(this,vr,"f"),e(this,jr,"f").sendMessage=this.sendTxMessages,e(this,jr,"f").eventDispatcher=e(this,vr,"f"),e(this,Gr,"f").sendMessage=this.sendSmpMessage,e(this,Gr,"f").eventDispatcher=e(this,vr,"f"),this.addEventListener("getMtu",(()=>{e(this,Gr,"f").mtu=this.mtu,e(this,jr,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),this.addEventListener("getType",(()=>{e(mr,mr,"f",Qr)&&e(mr,mr,"m",sa).call(mr,this)})),i&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),n&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),this.addEventListener("isConnected",(()=>{e(mr,mr,"m",aa).call(mr,this)}))}get addEventListener(){return e(this,vr,"f").addEventListener}get removeEventListener(){return e(this,vr,"f").removeEventListener}get waitForEvent(){return e(this,vr,"f").waitForEvent}get connectionManager(){return e(this,yr,"f")}set connectionManager(s){this.connectionManager!=s?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0),s&&(s.onStatusUpdated=e(this,dr,"m",_r).bind(this),s.onMessageReceived=e(this,dr,"m",Rr).bind(this)),t(this,yr,s,"f"),ha.log("assigned new connectionManager",e(this,yr,"f"))):ha.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(mr,mr,"m",pr).call(mr)),e(this,dr,"m",Lr).call(this),this.connectionManager.connect()}get isConnected(){return e(this,Sr,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return e(this,dr,"m",Lr).call(this),this.connectionManager?.reconnect()}static get ReconnectOnDisconnection(){return e(this,mr,"f",Mr)}static set ReconnectOnDisconnection(e){ha.assertTypeWithError(e,"boolean"),t(this,mr,e,"f",Mr)}get reconnectOnDisconnection(){return e(this,Wr,"f")}set reconnectOnDisconnection(e){ha.assertTypeWithError(e,"boolean"),t(this,Wr,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,dr,"m",Er).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,yr,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"not connected":case"connecting":case"disconnecting":return e(this,yr,"f").status;default:return"not connected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,xr,"f").information}get batteryLevel(){return e(this,Ar,"f")}get id(){return e(this,$r,"f").id}get isCharging(){return e(this,$r,"f").isCharging}get batteryCurrent(){return e(this,$r,"f").batteryCurrent}get getBatteryCurrent(){return e(this,$r,"f").getBatteryCurrent}get name(){return e(this,$r,"f").name}get setName(){return e(this,$r,"f").setName}get type(){return e(this,$r,"f").type}get setType(){return e(this,$r,"f").setType}get isInsole(){return e(this,$r,"f").isInsole}get insoleSide(){return e(this,$r,"f").insoleSide}get mtu(){return e(this,$r,"f").mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return gt.filter((e=>this.sensorTypes.includes(e)))}get sensorConfiguration(){return e(this,Br,"f").configuration}async setSensorConfiguration(t,s){await e(this,Br,"f").setConfiguration(t,s)}async clearSensorConfiguration(){return e(this,Br,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return e(this,mr,"f",Nr)}static set ClearSensorConfigurationOnLeave(e){ha.assertTypeWithError(e,"boolean"),t(this,mr,e,"f",Nr)}get clearSensorConfigurationOnLeave(){return e(this,Pr,"f")}set clearSensorConfigurationOnLeave(e){ha.assertTypeWithError(e,"boolean"),t(this,Pr,e,"f")}get numberOfPressureSensors(){return e(this,Vr,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){e(this,Vr,"f").pressureSensorDataManager.resetRange()}async triggerVibration(t,s){e(this,zr,"f").triggerVibration(t,s)}get maxFileLength(){return e(this,jr,"f").maxLength}async sendFile(t,s){const i=this.waitForEvent("fileTransferComplete");e(this,jr,"f").send(t,s),await i}async receiveFile(t){const s=this.waitForEvent("fileTransferComplete");e(this,jr,"f").receive(t),await s}get fileTransferStatus(){return e(this,jr,"f").status}cancelFileTransfer(){e(this,jr,"f").cancel()}get tfliteName(){return e(this,qr,"f").name}get setTfliteName(){return e(this,qr,"f").setName}get tfliteTask(){return e(this,qr,"f").task}get setTfliteTask(){return e(this,qr,"f").setTask}get tfliteSampleRate(){return e(this,qr,"f").sampleRate}get setTfliteSampleRate(){return e(this,qr,"f").setSampleRate}get tfliteSensorTypes(){return e(this,qr,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>ds.includes(e)))}get setTfliteSensorTypes(){return e(this,qr,"f").setSensorTypes}get tfliteIsReady(){return e(this,qr,"f").isReady}get tfliteInferencingEnabled(){return e(this,qr,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return e(this,qr,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return e(this,qr,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return e(this,qr,"f").captureDelay}get setTfliteCaptureDelay(){return e(this,qr,"f").setCaptureDelay}get tfliteThreshold(){return e(this,qr,"f").threshold}get setTfliteThreshold(){return e(this,qr,"f").setThreshold}get uploadFirmware(){return e(this,Gr,"f").uploadFirmware}async reset(){return await e(this,Gr,"f").reset(),e(this,yr,"f").disconnect()}get firmwareStatus(){return e(this,Gr,"f").status}get getFirmwareImages(){return e(this,Gr,"f").getImages}get firmwareImages(){return e(this,Gr,"f").images}get eraseFirmwareImage(){return e(this,Gr,"f").eraseImage}get confirmFirmwareImage(){return e(this,Gr,"f").confirmImage}get testFirmwareImage(){return e(this,Gr,"f").testImage}static get ConnectedDevices(){return e(this,mr,"f",Jr)}static get UseLocalStorage(){return e(this,mr,"f",Qr)}static set UseLocalStorage(s){e(this,mr,"m",Xr).call(this),ha.assertTypeWithError(s,"boolean"),t(this,mr,s,"f",Qr),e(this,mr,"f",Qr)&&!e(this,mr,"f",Zr)&&e(this,mr,"m",ta).call(this)}static get CanUseLocalStorage(){return i&&window.localStorage}static get AvailableDevices(){return e(this,mr,"f",ia)}static get CanGetDevices(){return i&&navigator.bluetooth?.getDevices&&!o}static async GetDevices(){if(!i)return void ha.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void ha.warn("bluetooth is not available in this browser");if(o)return void ha.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void ha.warn("bluetooth.getDevices() is not available in this browser");e(this,mr,"f",Zr)||e(this,mr,"m",ta).call(this);const t=e(this,mr,"f",Zr);if(!t.devices||0==t.devices.length)return void ha.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return ha.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=t.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const r=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(r)return void(n&&n?.bluetoothId==r.bluetoothId&&n!=r&&(this.AvailableDevices[e(this,mr,"f",ia).indexOf(r)]=n));if(n)return void this.AvailableDevices.push(n);const a=new mr,o=new Sn;o.device=s,s.name&&e(a,$r,"f").updateName(s.name),e(a,$r,"f").updateType(i.type),a.connectionManager=o,this.AvailableDevices.push(a)})),e(this,mr,"m",oa).call(this),this.AvailableDevices}static get AddEventListener(){return e(this,mr,"f",na).addEventListener}static get RemoveEventListener(){return e(this,mr,"f",na).removeEventListener}static async Connect(){const e=new mr;return await e.connect(),e}}var ga,fa,da,ma,pa;mr=ua,vr=new WeakMap,yr=new WeakMap,Sr=new WeakMap,Wr=new WeakMap,Ir=new WeakMap,xr=new WeakMap,Ar=new WeakMap,$r=new WeakMap,Br=new WeakMap,Pr=new WeakMap,Vr=new WeakMap,zr=new WeakMap,jr=new WeakMap,qr=new WeakMap,Gr=new WeakMap,dr=new WeakSet,pr=function(){return new Sn},wr=function(){return e(this,vr,"f").dispatchEvent},br=async function(t,s){await(e(this,yr,"f")?.sendTxMessages(t,s))},Er=function(){ha.assertWithError(this.isConnected,"not connected")},Dr=function(){return e(mr,mr,"f",Cr)},kr=function(){return e(this,dr,"a",Dr).every((e=>this.latestConnectionMessage.has(e)))},Tr=function(){const t=e(this,dr,"a",Dr).map((e=>({type:e})));e(this,dr,"m",br).call(this,t)},_r=function(s){if(ha.log({connectionStatus:s}),"not connected"==s?this.canReconnect&&this.reconnectOnDisconnection&&(ha.log("starting reconnect interval..."),t(this,Ir,setInterval((()=>{ha.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,Ir,"f")&&(ha.log("clearing reconnect interval"),clearInterval(e(this,Ir,"f")),t(this,Ir,void 0,"f")),e(this,dr,"m",Ur).call(this),"connected"!=s||e(this,Sr,"f")||e(this,dr,"m",Tr).call(this),"not connected"==s&&!this.canReconnect&&e(mr,mr,"f",ia).includes(this)){const t=e(mr,mr,"f",ia).indexOf(this);mr.AvailableDevices.splice(t,1),e(mr,mr,"m",oa).call(mr)}},Fr=function(t=!1){e(this,dr,"a",wr).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,dr,"a",wr).call(this,this.connectionStatus,{}),t&&e(this,dr,"a",wr).call(this,"isConnected",{isConnected:this.isConnected})},Ur=function(){switch(t(this,Sr,Boolean(this.connectionManager?.isConnected)&&e(this,dr,"a",kr)&&e(this,$r,"f").isCurrentTimeSet,"f"),this.connectionStatus){case"connected":e(this,Sr,"f")&&e(this,dr,"m",Fr).call(this,!0);break;case"not connected":e(this,dr,"m",Fr).call(this,!0);break;default:e(this,dr,"m",Fr).call(this,!1)}},Lr=function(){this.latestConnectionMessage.clear(),e(this,$r,"f").clear(),e(this,xr,"f").clear()},Rr=function(t,s){if(ha.log({messageType:t,dataView:s}),"batteryLevel"===t){const t=s.getUint8(0);ha.log("received battery level",{batteryLevel:t}),e(this,dr,"m",Or).call(this,t)}else if(Ie.includes(t))e(this,jr,"f").parseMessage(t,s);else if(us.includes(t))e(this,qr,"f").parseMessage(t,s);else if(ft.includes(t))e(this,Vr,"f").parseMessage(t,s);else if(lr.includes(t))e(this,Gr,"f").parseMessage(t,s);else if(Es.includes(t))e(this,xr,"f").parseMessage(t,s);else if(Js.includes(t))e(this,$r,"f").parseMessage(t,s);else{if(!Ut.includes(t))throw Error(`uncaught messageType ${t}`);e(this,Br,"f").parseMessage(t,s)}this.latestConnectionMessage.set(t,s),e(this,dr,"a",wr).call(this,"connectionMessage",{messageType:t,dataView:s}),!this.isConnected&&e(this,dr,"a",kr)&&e(this,dr,"m",Ur).call(this)},Or=function(s){ha.assertTypeWithError(s,"number"),e(this,Ar,"f")!=s?(t(this,Ar,s,"f"),ha.log({updatedBatteryLevel:e(this,Ar,"f")}),e(this,dr,"a",wr).call(this,"batteryLevel",{batteryLevel:e(this,Ar,"f")})):ha.log(`duplicate batteryLevel assignment ${s}`)},Hr=function(t){return e(this,yr,"f").sendSmpMessage(t)},Xr=function(){ha.assertWithError(i,"localStorage is only available in the browser"),ha.assertWithError(window.localStorage,"localStorage not found")},ea=function(){e(this,mr,"m",Xr).call(this),localStorage.setItem(e(this,mr,"f",Yr),JSON.stringify(e(this,mr,"f",Zr)))},ta=async function(){e(this,mr,"m",Xr).call(this);let s=localStorage.getItem(e(this,mr,"f",Yr));if("string"!=typeof s)return ha.log("no info found in localStorage"),t(this,mr,Object.assign({},e(this,mr,"f",Kr)),"f",Zr),void e(this,mr,"m",ea).call(this);try{const e=JSON.parse(s);ha.log({configuration:e}),t(this,mr,e,"f",Zr),this.CanGetDevices&&await this.GetDevices()}catch(e){ha.error(e)}},sa=function(t){if("webBluetooth"!=t.connectionType)return void ha.log("localStorage is only for webBluetooth devices");e(this,mr,"m",Xr).call(this);const s=e(this,mr,"f",Zr).devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1!=s&&(e(this,mr,"f",Zr).devices[s].type=t.type,e(this,mr,"m",ea).call(this))},ra=function(){return e(this,mr,"f",na).dispatchEvent},aa=function(t){if(t.isConnected)if(e(this,mr,"f",Jr).includes(t))ha.log("device already included");else{if(ha.log("adding device",t),e(this,mr,"f",Jr).push(t),this.UseLocalStorage&&"webBluetooth"==t.connectionType){const s={type:t.type,bluetoothId:t.bluetoothId},i=e(this,mr,"f",Zr).devices.findIndex((e=>e.bluetoothId==s.bluetoothId));-1==i?e(this,mr,"f",Zr).devices.push(s):e(this,mr,"f",Zr).devices[i]=s,e(this,mr,"m",ea).call(this)}e(this,mr,"a",ra).call(this,"deviceConnected",{device:t}),e(this,mr,"a",ra).call(this,"deviceIsConnected",{device:t}),e(this,mr,"m",ca).call(this)}else e(this,mr,"f",Jr).includes(t)?(ha.log("removing device",t),e(this,mr,"f",Jr).splice(e(this,mr,"f",Jr).indexOf(t),1),e(this,mr,"a",ra).call(this,"deviceDisconnected",{device:t}),e(this,mr,"a",ra).call(this,"deviceIsConnected",{device:t}),e(this,mr,"m",ca).call(this)):ha.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),t.isConnected&&!this.AvailableDevices.includes(t)){const s=this.AvailableDevices.find((e=>e.bluetoothId==t.bluetoothId));ha.log({existingAvailableDevice:s}),s?this.AvailableDevices[this.AvailableDevices.indexOf(s)]=t:this.AvailableDevices.push(t),e(this,mr,"m",oa).call(this)}},oa=function(){ha.log({AvailableDevices:this.AvailableDevices}),e(this,mr,"a",ra).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},ca=function(){ha.log({ConnectedDevices:this.ConnectedDevices}),e(this,mr,"a",ra).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},Cr={value:["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"]},Mr={value:!1},Nr={value:!0},Jr={value:[]},Qr={value:!1},Kr={value:{devices:[]}},Zr={value:void 0},Yr={value:"BS.Device"},ia={value:[]},na={value:new I(mr,["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"])},mr.CanUseLocalStorage&&(mr.UseLocalStorage=!0);const va=T("DevicePairPressureSensorDataManager",{log:!0});class wa{constructor(){ga.add(this),fa.set(this,{}),da.set(this,new qe)}resetPressureRange(){e(this,da,"f").reset()}onDevicePressureData(t){const{pressure:s}=t.message,i=t.target.insoleSide;if(va.log({pressure:s,insoleSide:i}),e(this,fa,"f")[i]=s,e(this,ga,"a",ma))return e(this,ga,"m",pa).call(this);va.log("doesn't have all pressure data yet...")}}var ya;fa=new WeakMap,da=new WeakMap,ga=new WeakSet,ma=function(){return qs.every((t=>t in e(this,fa,"f")))},pa=function(){const t={rawSum:0,normalizedSum:0};return qs.forEach((s=>{t.rawSum+=e(this,fa,"f")[s].scaledSum,t.normalizedSum+=e(this,fa,"f")[s].normalizedSum})),t.normalizedSum>0&&(t.center={x:0,y:0},qs.forEach((s=>{const i=e(this,fa,"f")[s],n=i.normalizedSum/t.normalizedSum;n>0&&(t.center.y+=i.normalizedCenter.y*n,"right"==s&&(t.center.x=n))})),t.normalizedCenter=e(this,da,"f").updateAndGetNormalization(t.center)),va.log({devicePairPressure:t}),t};const ba=T("DevicePairSensorDataManager",{log:!0}),Sa=["pressure","sensorData"];class Ea{constructor(){ya.set(this,{}),this.pressureSensorDataManager=new wa}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(t){const{timestamp:s,sensorType:i}=t.message;let n;if(ba.log({sensorType:i,timestamp:s,event:t}),e(this,ya,"f")[i]||(e(this,ya,"f")[i]={}),e(this,ya,"f")[i][t.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(t);else ba.log(`uncaught sensorType "${i}"`);if(n){const t=Object.assign({},e(this,ya,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:t,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:t,[i]:n})}else ba.log("no value received")}}var Ca,Da,ka,Ta,Ma,Wa,Ia,_a,Fa,Ua,La,Ra,xa,Aa;ya=new WeakMap;const Oa=T("DevicePair",{log:!0});function $a(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const Ba=["isConnected",...Sa,...la.map((e=>$a(e)))];class Na{constructor(){Ca.add(this),ka.set(this,new I(this,Ba)),Ma.set(this,void 0),Wa.set(this,void 0),_a.set(this,{connectionStatus:e(this,Ca,"m",Fa).bind(this),isConnected:e(this,Ca,"m",Ua).bind(this),sensorData:e(this,Ca,"m",xa).bind(this),getSensorConfiguration:e(this,Ca,"m",Fa).bind(this),getType:e(this,Ca,"m",La).bind(this)}),Ra.set(this,new Ea),e(this,Ra,"f").eventDispatcher=e(this,ka,"f")}get sides(){return qs}get addEventListener(){return e(this,ka,"f").addEventListener}get removeEventListener(){return e(this,ka,"f").removeEventListener}get waitForEvent(){return e(this,ka,"f").waitForEvent}get left(){return e(this,Ma,"f")}get right(){return e(this,Wa,"f")}get isConnected(){return qs.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return qs.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(s){if(!s.isInsole)return void Oa.warn("device is not an insole");const i=s.insoleSide,n=this[i];if(s!=n){switch(n&&qi(n,e(this,_a,"f")),ji(s,e(this,_a,"f")),i){case"left":t(this,Ma,s,"f");break;case"right":t(this,Wa,s,"f")}return Oa.log(`assigned ${i} insole`,s),this.resetPressureRange(),e(this,Ca,"a",Ta).call(this,"isConnected",{isConnected:this.isConnected}),e(this,Ca,"a",Ta).call(this,"deviceIsConnected",{device:s,isConnected:s.isConnected,side:i}),n}Oa.log("device already assigned")}setSensorConfiguration(e){qs.forEach((t=>{this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){e(this,Ra,"f").resetPressureRange()}async triggerVibration(e,t){const s=qs.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return e(this,Da,"f",Aa)}}Da=Na,ka=new WeakMap,Ma=new WeakMap,Wa=new WeakMap,_a=new WeakMap,Ra=new WeakMap,Ca=new WeakSet,Ta=function(){return e(this,ka,"f").dispatchEvent},Ia=function(t){const s=qs.some((s=>this[s]==t&&(Oa.log(`removing ${s} insole`,t),qi(t,e(this,_a,"f")),delete this[s],!0)));return s&&e(this,Ca,"a",Ta).call(this,"isConnected",{isConnected:this.isConnected}),s},Fa=function(t){const{type:s,target:i,message:n}=t;e(this,Ca,"a",Ta).call(this,$a(s),{...n,device:i,side:i.insoleSide})},Ua=function(t){e(this,Ca,"m",Fa).call(this,t),e(this,Ca,"a",Ta).call(this,"isConnected",{isConnected:this.isConnected})},La=function(t){const{target:s}=t;if(this[s.insoleSide]==s)return;e(this,Ca,"m",Ia).call(this,s)&&this.assignInsole(s)},xa=function(t){e(this,Ca,"m",Fa).call(this,t),this.isConnected&&e(this,Ra,"f").onDeviceSensorData(t)},Aa={value:new Da},ua.AddEventListener("deviceConnected",(t=>{const s=t.message.device;s.isInsole&&e(Da,Da,"f",Aa).assignInsole(s)}));const Pa=T("ServerUtils",{log:!1}),Va=["ping","pong","isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function za(e,...t){Pa.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=z(...t.data),i=s.byteLength;Pa.assertEnumWithError(t.type,e);return z(e.indexOf(t.type),Uint16Array.from([i]),s)}));return Pa.log("messageBuffers",...s),z(...s)}function ja(...e){return Pa.log("createServerMessage",...e),za(Va,...e)}function qa(...e){return Pa.log("createClientDeviceMessage",...e),za(Pi,...e)}ja("ping"),ja("pong"),ja("isScanningAvailable"),ja("isScanning"),ja("startScan"),ja("stopScan");const Ga=ja("discoveredDevices");var Ha,Ja,Qa,Ka,Za;const Xa=T("WebSocketClientConnectionManager",{log:!0}),Ya=[...Es,"batteryLevel"];class eo extends Vi{constructor(){super(...arguments),Ha.add(this),Ja.set(this,void 0),Qa.set(this,!1)}static get isSupported(){return i}static get type(){return"webSocketClient"}get bluetoothId(){return e(this,Ja,"f")}set bluetoothId(s){Xa.assertTypeWithError(s,"string"),e(this,Ja,"f")!=s?t(this,Ja,s,"f"):Xa.log("redundant bluetoothId assignment")}get isConnected(){return e(this,Qa,"f")}set isConnected(s){Xa.assertTypeWithError(s,"boolean"),e(this,Qa,"f")!=s?(t(this,Qa,s,"f"),this.status=e(this,Qa,"f")?"connected":"not connected",this.isConnected&&e(this,Ha,"m",Ka).call(this)):Xa.log("redundant newIsConnected assignment",s)}async connect(){await super.connect(),this.sendWebSocketConnectMessage()}async disconnect(){await super.disconnect(),this.sendWebSocketDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),Xa.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendWebSocketMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendWebSocketMessage({type:"tx",data:e})}onWebSocketMessage(t){Xa.log({dataView:t}),ht(t,la,e(this,Ha,"m",Za).bind(this),null,!0)}}var to,so,io,no,ro,ao,oo,co,ho,lo,uo,go,fo,mo,po,vo,wo,yo,bo,So,Eo;Ja=new WeakMap,Qa=new WeakMap,Ha=new WeakSet,Ka=function(){this.sendWebSocketMessage(...Ya)},Za=function(e,t){let s=0;switch(e){case"isConnected":const i=Boolean(t.getUint8(s++));Xa.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}};const Co=T("WebSocketClient",{log:!0}),Do=["not connected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class ko{constructor(){to.add(this),so.set(this,{}),io.set(this,new I(this,Do)),this._reconnectOnDisconnection=this.baseConstructor.ReconnectOnDisconnection,no.set(this,"not connected"),this.pingTimer=new R(e(this,to,"m",ao).bind(this),3e7),co.set(this,!1),go.set(this,!1),yo.set(this,{})}get baseConstructor(){return this.constructor}get devices(){return e(this,so,"f")}get addEventListener(){return e(this,io,"f").addEventListener}get dispatchEvent(){return e(this,io,"f").dispatchEvent}get removeEventListener(){return e(this,io,"f").removeEventListener}get waitForEvent(){return e(this,io,"f").waitForEvent}assertConnection(){Co.assertWithError(this.isConnected,"not connected")}assertDisconnection(){Co.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return this._reconnectOnDisconnection}static set ReconnectOnDisconnection(e){Co.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}get reconnectOnDisconnection(){return this._reconnectOnDisconnection}set reconnectOnDisconnection(e){Co.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}sendServerMessage(...e){this.sendMessage(ja(...e))}get _connectionStatus(){return e(this,no,"f")}set _connectionStatus(e){switch(Co.assertTypeWithError(e,"string"),Co.log({newConnectionStatus:e}),t(this,no,e,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),e){case"connected":case"not connected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):(t(this,to,!1,"a",lo),t(this,to,!1,"a",mo))}}get connectionStatus(){return this._connectionStatus}parseMessage(t){Co.log("parseMessage",{dataView:t}),ht(t,Va,e(this,to,"m",ro).bind(this),null,!0)}get isScanningAvailable(){return e(this,to,"a",ho)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return e(this,to,"a",fo)}startScan(){e(this,to,"m",wo).call(this),this.sendServerMessage("startScan")}stopScan(){e(this,to,"m",vo).call(this),this.sendServerMessage("stopScan")}toggleScan(){e(this,to,"m",uo).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return e(this,yo,"f")}onDiscoveredDevice(t){Co.log({discoveredDevice:t}),e(this,yo,"f")[t.bluetoothId]=t,this.dispatchEvent("discoveredDevice",{discoveredDevice:t})}requestDiscoveredDevices(){this.sendMessage(Ga)}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(t){this.assertConnection(),Co.assertTypeWithError(t,"string");const s=e(this,to,"m",So).call(this,t);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendMessage(this.createConnectToDeviceMessage(e))}createConnectToDeviceMessage(e){return ja({type:"connectToDevice",data:e})}onConnectedBluetoothDeviceIds(t){Co.log({bluetoothIds:t}),t.forEach((t=>{e(this,to,"m",So).call(this,t).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),Co.assertTypeWithError(e,"string");const t=this.devices[e];return Co.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(t){this.sendMessage(e(this,to,"m",Eo).call(this,t))}sendDeviceMessage(e,...t){this.sendMessage(this.createDeviceMessage(e,...t))}createDeviceMessage(e,...t){return ja({type:"deviceMessage",data:[e,qa(...t)]})}}var To,Mo,Wo,Io,_o,Fo,Uo;so=new WeakMap,io=new WeakMap,no=new WeakMap,co=new WeakMap,go=new WeakMap,yo=new WeakMap,to=new WeakSet,ro=function(s,i){let n=0;switch(s){case"ping":e(this,to,"m",oo).call(this);break;case"pong":break;case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));Co.log({isScanningAvailable:e}),t(this,to,e,"a",lo)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));Co.log({isScanning:e}),t(this,to,e,"a",mo)}break;case"discoveredDevice":{const{string:e}=ct(i,n);Co.log({discoveredDeviceString:e});const t=JSON.parse(e);Co.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:t}=ct(i,n);e(this,to,"m",bo).call(this,t)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=ct(i,n);Co.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);Co.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:t,byteOffset:s}=ct(i,n);n=s;const r=e(this,so,"f")[t];Co.assertWithError(r,`no device found for id ${t}`);const a=r.connectionManager,o=q(i,n);a.onWebSocketMessage(o)}break;default:Co.error(`uncaught messageType "${s}"`)}},ao=function(){this.sendServerMessage("ping")},oo=function(){this.sendServerMessage("pong")},ho=function(){return e(this,co,"f")},lo=function(s){Co.assertTypeWithError(s,"boolean"),t(this,co,s,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&e(this,to,"m",po).call(this)},uo=function(){this.assertConnection(),Co.assertWithError(this.isScanningAvailable,"scanning is not available")},fo=function(){return e(this,go,"f")},mo=function(e){Co.assertTypeWithError(e,"boolean"),t(this,go,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},po=function(){this.sendServerMessage("isScanning")},vo=function(){Co.assertWithError(this.isScanning,"is not scanning")},wo=function(){Co.assertWithError(!this.isScanning,"is already scanning")},bo=function(t){Co.log({expiredBluetoothDeviceId:t});const s=e(this,yo,"f")[t];s?(Co.log({expiredDiscoveredDevice:s}),delete e(this,yo,"f")[t],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):Co.warn(`no discoveredDevice found with id "${t}"`)},So=function(t){let s=e(this,so,"f")[t];return s||(s=this.createDevice(t),e(this,so,"f")[t]=s),s},Eo=function(e){return ja({type:"disconnectFromDevice",data:e})},ko._reconnectOnDisconnection=!0;const Lo=T("WebSocketClient",{log:!0});class Ro extends ko{constructor(){super(...arguments),To.add(this),Mo.set(this,void 0),Wo.set(this,{open:e(this,To,"m",Io).bind(this),message:e(this,To,"m",_o).bind(this),close:e(this,To,"m",Fo).bind(this),error:e(this,To,"m",Uo).bind(this)})}get webSocket(){return e(this,Mo,"f")}set webSocket(s){e(this,Mo,"f")!=s?(Lo.log("assigning webSocket",s),e(this,Mo,"f")&&qi(e(this,Mo,"f"),e(this,Wo,"f")),ji(s,e(this,Wo,"f")),t(this,Mo,s,"f"),Lo.log("assigned webSocket")):Lo.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.webSocket=new WebSocket(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(t){this.assertConnection(),e(this,Mo,"f").send(t)}createDevice(e){const t=new ua,s=new eo;return s.bluetoothId=e,s.sendWebSocketMessage=this.sendDeviceMessage.bind(this,e),s.sendWebSocketConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendWebSocketDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}}Mo=new WeakMap,Wo=new WeakMap,To=new WeakSet,Io=function(e){Lo.log("webSocket.open",e),this.pingTimer.start(),this._connectionStatus="connected"},_o=async function(e){Lo.log("webSocket.message",e),this.pingTimer.restart();const t=await e.data.arrayBuffer(),s=new DataView(t);this.parseMessage(s)},Fo=function(e){Lo.log("webSocket.close",e),this._connectionStatus="not connected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),this.pingTimer.stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},Uo=function(e){Lo.error("webSocket.error",e.message)};export{gt as ContinuousSensorTypes,Qe as DefaultNumberOfPressureSensors,ua as Device,Na as DevicePair,js as DeviceTypes,w as Environment,Le as FileTransferDirections,_e as FileTypes,Hs as MaxNameLength,vi as MaxNumberOfVibrationWaveformEffectSegments,Si as MaxNumberOfVibrationWaveformSegments,_t as MaxSensorRate,yi as MaxVibrationWaveformEffectSegmentDelay,bi as MaxVibrationWaveformEffectSegmentLoopCount,Ei as MaxVibrationWaveformEffectSequenceLoopCount,wi as MaxVibrationWaveformSegmentDuration,Gs as MinNameLength,Ft as SensorRateStep,ut as SensorTypes,ds as TfliteSensorTypes,fs as TfliteTasks,mi as VibrationLocations,pi as VibrationTypes,Zs as VibrationWaveformEffects,Ro as WebSocketClient,W as setAllConsoleLevelFlags,M as setConsoleLevelFlagsForType};
//# sourceMappingURL=brilliantsole.module.min.js.map
