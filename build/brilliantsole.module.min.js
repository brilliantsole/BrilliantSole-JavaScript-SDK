/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function t(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const s=!1,i="undefined"!=typeof window&&void 0!==window?.document,n="undefined"!=typeof process&&null!=process?.versions?.node,r=i&&navigator.userAgent||"";let a=!1;i?a=Boolean(navigator.bluetooth):n&&(a=!0);const o=i&&/Bluefy/i.test(r),c=i&&/WebBLE/i.test(r),h=i&&/Android/i.test(r),l=i&&/Safari/i.test(r)&&!/Chrome/i.test(r),g=i&&/iPad|iPhone|iPod/i.test(r),u=i&&/Macintosh/i.test(r),f=!i&&!n&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var d,m,p,v,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return a},isIOS:g,isInBluefy:o,isInBrowser:i,isInDev:s,isInLensStudio:f,isInNode:n,isInProduction:!0,isInWebBLE:c,isMac:u,isSafari:l});if(f){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(v={}).log=e,v.warn=e.bind(v,"WARNING"),v.error=e.bind(v,"ERROR")}else v=console;if(!v.assert){const e=(e,...t)=>{e||v.warn(...t)};v.assert=e}if(!v.table){const e=(...e)=>{v.log(...e)};v.table=e}function y(){}const b=v.log.bind(v),S=v.warn.bind(v),E=v.error.bind(v),C=v.table.bind(v),M=v.assert.bind(v);class D{constructor(t){if(p.set(this,{log:s,warn:s,assert:!0,error:!0,table:!0}),e(d,d,"f",m)[t])throw new Error(`"${t}" console already exists`);e(d,d,"f",m)[t]=this}setLevelFlags(t){Object.assign(e(this,p,"f"),t)}static setLevelFlagsForType(t,s){if(!e(this,d,"f",m)[t])throw new Error(`no console found with type "${t}"`);e(this,d,"f",m)[t].setLevelFlags(s)}static setAllLevelFlags(t){for(const s in e(this,d,"f",m))e(this,d,"f",m)[s].setLevelFlags(t)}static create(t,s){return e(this,d,"f",m)[t]||new d(t)}get log(){return e(this,p,"f").log?b:y}get warn(){return e(this,p,"f").warn?S:y}get error(){return e(this,p,"f").error?E:y}get assert(){return e(this,p,"f").assert?M:y}get table(){return e(this,p,"f").table?C:y}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function k(e,t){return D.create(e,t)}function T(e,t){D.setLevelFlagsForType(e,t)}function W(e){D.setAllLevelFlags(e)}d=D,p=new WeakMap,m={value:{}};class _{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push({listener:t,once:s.once})}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((e=>e.listener!==t)))}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);if(!this.listeners[e])return;const s=this.listeners[e];s.forEach(((i,n)=>{i.listener({type:e,target:this.target,message:t}),i.once&&s.splice(n,1)}))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var I,F,U;const L=k("Timer",{log:!1});class R{get callback(){return e(this,I,"f")}set callback(e){L.assertTypeWithError(e,"function"),L.log({newCallback:e}),t(this,I,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,F,"f")}set interval(e){L.assertTypeWithError(e,"number"),L.assertWithError(e>0,"interval must be above 0"),L.log({newInterval:e}),t(this,F,e,"f"),this.isRunning&&this.restart()}constructor(e,t){I.set(this,void 0),F.set(this,void 0),U.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,U,"f")}start(){this.isRunning?L.log("interval already running"):(L.log("starting interval"),t(this,U,setInterval(e(this,I,"f"),e(this,F,"f")),"f"))}stop(){this.isRunning?(L.log("stopping interval"),clearInterval(e(this,U,"f")),t(this,U,void 0,"f")):L.log("interval already not running")}restart(){this.stop(),this.start()}}function x(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}I=new WeakMap,F=new WeakMap,U=new WeakMap,k("checksum",{log:!0});const A=new Uint32Array(256);for(let e=0;e<256;++e)A[e]=x(e);function O(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(A[i^n]^s>>>8)>>>0}return s}var $,B;$="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,B="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const N=new $,P=new B,V=k("ArrayBufferUtils",{log:!1});function z(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return j(e)}if(e instanceof Array){return z(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return j(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function j(e){const t=N.encode(e);return z(t.byteLength,t)}function G(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),V.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function q(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}function H(e,{include:t,exclude:s}={}){const i=e=>{const i=t=>"string"==typeof t?e===t:t.test(e);return t?t.some(i):!s||!s.some(i)};for(const[t,s]of(e=>{const t=new Set;do{for(const s of Reflect.ownKeys(e))t.add([e,s])}while((e=Reflect.getPrototypeOf(e))&&e!==Object.prototype);return t})(e.constructor.prototype)){if("constructor"===s||!i(s))continue;const n=Reflect.getOwnPropertyDescriptor(t,s);n&&"function"==typeof n.value&&(e[s]=e[s].bind(e))}return e}var J,Q,K,Z,X,Y,ee,te,se,ie,ne,re,ae,oe,ce,he,le,ge,ue,fe,de,me,pe,ve,we,ye,be,Se,Ee,Ce,Me,De,ke,Te;const We=k("FileTransferManager",{log:!0}),_e=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock"],Ie=["tflite"],Fe=["idle","sending","receiving"],Ue=["startSend","startReceive","cancel"],Le=["sending","receiving"],Re=[..._e,"fileTransferProgress","fileTransferComplete","fileReceived"];class xe{constructor(){J.add(this),se.set(this,Q.MaxLength),ae.set(this,void 0),le.set(this,0),de.set(this,0),ye.set(this,"idle"),Me.set(this,[]),H(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return e(this,Q,"f",te)}get maxLength(){return e(this,se,"f")}get type(){return e(this,ae,"f")}get length(){return e(this,le,"f")}get checksum(){return e(this,de,"f")}get status(){return e(this,ye,"f")}parseMessage(t,s){switch(We.log({messageType:t}),t){case"maxFileLength":e(this,J,"m",ie).call(this,s);break;case"getFileType":case"setFileType":e(this,J,"m",oe).call(this,s);break;case"getFileLength":case"setFileLength":e(this,J,"m",ge).call(this,s);break;case"getFileChecksum":case"setFileChecksum":e(this,J,"m",me).call(this,s);break;case"fileTransferStatus":e(this,J,"m",be).call(this,s);break;case"getFileBlock":e(this,J,"m",De).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}async send(t,s){e(this,J,"m",Ee).call(this),e(this,J,"m",Z).call(this,t);const i=await q(s),n=[];n.push(e(this,J,"m",he).call(this,t,!1));const r=i.byteLength;n.push(e(this,J,"m",fe).call(this,r,!1));const a=O(i);n.push(e(this,J,"m",ve).call(this,a,!1)),n.push(e(this,J,"m",we).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await e(this,J,"m",ke).call(this,i)}async receive(t){e(this,J,"m",Ee).call(this),e(this,J,"m",Z).call(this,t),await e(this,J,"m",he).call(this,t),await e(this,J,"m",we).call(this,"startReceive")}async cancel(){e(this,J,"m",Ce).call(this),await e(this,J,"m",we).call(this,"cancel")}}Q=xe,se=new WeakMap,ae=new WeakMap,le=new WeakMap,de=new WeakMap,ye=new WeakMap,Me=new WeakMap,J=new WeakSet,K=function(){return this.eventDispatcher.dispatchEvent},Z=function(e){We.assertEnumWithError(e,Ie)},X=function(e){We.assertWithError(e in Ie,`invalid typeEnum ${e}`)},Y=function(e){We.assertWithError(e in Fe,`invalid statusEnum ${e}`)},ee=function(e){We.assertEnumWithError(e,Ue)},ie=function(t){We.log("parseFileMaxLength",t);const s=t.getUint32(0,!0);We.log(`maxLength: ${s/1024}kB`),e(this,J,"m",ne).call(this,s)},ne=function(s){We.log({maxLength:s}),t(this,se,s,"f"),e(this,J,"a",K).call(this,"maxFileLength",{maxFileLength:s})},re=function(e){We.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},oe=function(t){We.log("parseFileType",t);const s=t.getUint8(0);e(this,J,"m",X).call(this,s);const i=Ie[s];e(this,J,"m",ce).call(this,i)},ce=function(s){We.log({fileTransferType:s}),t(this,ae,s,"f"),e(this,J,"a",K).call(this,"getFileType",{fileType:s})},he=async function(t,s){if(e(this,J,"m",Z).call(this,t),this.type==t)return void We.log(`redundant type assignment ${t}`);const i=this.waitForEvent("getFileType"),n=Ie.indexOf(t);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},ge=function(t){We.log("parseFileLength",t);const s=t.getUint32(0,!0);e(this,J,"m",ue).call(this,s)},ue=function(s){We.log(`length: ${s/1024}kB`),t(this,le,s,"f"),e(this,J,"a",K).call(this,"getFileLength",{fileLength:s})},fe=async function(t,s){if(We.assertTypeWithError(t,"number"),e(this,J,"m",re).call(this,t),this.length==t)return void We.log(`redundant length assignment ${t}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,t,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},me=function(t){We.log("checksum",t);const s=t.getUint32(0,!0);e(this,J,"m",pe).call(this,s)},pe=function(s){We.log({checksum:s}),t(this,de,s,"f"),e(this,J,"a",K).call(this,"getFileChecksum",{fileChecksum:s})},ve=async function(e,t){if(We.assertTypeWithError(e,"number"),this.checksum==e)return void We.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},we=async function(t,s){e(this,J,"m",ee).call(this,t);const i=this.waitForEvent("fileTransferStatus"),n=Ue.indexOf(t);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},be=function(t){We.log("parseFileStatus",t);const s=t.getUint8(0);e(this,J,"m",Y).call(this,s);const i=Fe[s];e(this,J,"m",Se).call(this,i)},Se=function(s){We.log({status:s}),t(this,ye,s,"f"),e(this,J,"a",K).call(this,"fileTransferStatus",{fileTransferStatus:s}),e(this,Me,"f").length=0},Ee=function(){We.assertWithError("idle"==e(this,ye,"f"),"status is not idle")},Ce=function(){We.assertWithError("idle"!=e(this,ye,"f"),"status is idle")},De=async function(t){We.log("parseFileBlock",t),e(this,Me,"f").push(t.buffer);const s=e(this,Me,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/e(this,le,"f");if(We.log(`received ${s} of ${e(this,le,"f")} bytes (${100*i}%)`),e(this,J,"a",K).call(this,"fileTransferProgress",{progress:i}),s!=e(this,le,"f"))return;We.log("file transfer complete");let n,r=(new Date).toLocaleString();if("tflite"===this.type)r+=".tflite";n="undefined"!=typeof File?new File(e(this,Me,"f"),r):new Blob(e(this,Me,"f"));const a=O(await n.arrayBuffer());We.log({checksum:a}),a==e(this,de,"f")?(We.log("received file",n),e(this,J,"a",K).call(this,"getFileBlock",{fileTransferBlock:t}),e(this,J,"a",K).call(this,"fileTransferComplete",{direction:"receiving"}),e(this,J,"a",K).call(this,"fileReceived",{file:n})):We.error(`wrong checksum - expected ${e(this,de,"f")}, got ${a}`)},ke=async function(t){return e(this,J,"m",Te).call(this,t)},Te=async function t(s,i=0){if("sending"!=this.status)return;const n=s.slice(i,i+(this.mtu-3-3));We.log("slicedBuffer",n);const r=1-(s.byteLength-i)/s.byteLength;if(We.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*r}%)`),e(this,J,"a",K).call(this,"fileTransferProgress",{progress:r}),0!=n.byteLength)return await this.sendMessage([{type:"setFileBlock",data:n}]),e(this,J,"m",t).call(this,s,i+n.byteLength);We.log("finished sending buffer"),e(this,J,"a",K).call(this,"fileTransferComplete",{direction:"sending"})},te={value:0};const Ae=65536;function Oe(e,t){const s=Date.now();var i;return(i=s)-i%Ae+e.getUint16(t,!0)}var $e;const Be={min:1/0,max:-1/0,range:0};class Ne{constructor(){$e.set(this,Object.assign({},Be))}reset(){Object.assign(e(this,$e,"f"),Be)}update(t){e(this,$e,"f").min=Math.min(t,e(this,$e,"f").min),e(this,$e,"f").max=Math.max(t,e(this,$e,"f").max),e(this,$e,"f").range=e(this,$e,"f").max-e(this,$e,"f").min}getNormalization(t){return e(this,$e,"f").range*t||0}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}var Pe,Ve,ze,je;$e=new WeakMap;class Ge{constructor(){Pe.set(this,{x:new Ne,y:new Ne})}reset(){e(this,Pe,"f").x.reset(),e(this,Pe,"f").y.reset()}update(t){e(this,Pe,"f").x.update(t.x),e(this,Pe,"f").y.update(t.y)}getNormalization(t){return{x:e(this,Pe,"f").x.getNormalization(t.x),y:e(this,Pe,"f").y.getNormalization(t.y)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}Pe=new WeakMap;const qe=k("PressureDataManager",{log:!0}),He=["pressure"],Je=He,Qe=8;class Ke{constructor(){Ve.set(this,[]),ze.set(this,void 0),je.set(this,new Ge)}get positions(){return e(this,Ve,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const s=[];for(let t=0,i=0;i<e.byteLength;t++,i+=2)s.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;qe.log({positions:s}),t(this,Ve,s,"f"),t(this,ze,(i=this.numberOfSensors,n=()=>new Ne,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){e(this,ze,"f").forEach((e=>e.reset())),e(this,je,"f").reset()}parseData(t,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,r=0;r<t.byteLength;n++,r+=2){const a=t.getUint16(r,!0),o=a*s,c=e(this,ze,"f")[n].updateAndGetNormalization(o),h=this.positions[n];i.sensors[n]={rawValue:a,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=e(this,je,"f").updateAndGetNormalization(i.center)),qe.log({pressure:i}),i}}Ve=new WeakMap,ze=new WeakMap,je=new WeakMap;const Ze=k("MotionSensorDataManager",{log:!0}),Xe=["still","walking","running","bicycle","vehicle","tilting"],Ye=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class et{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const r={x:s,y:i,z:n};return Ze.log({vector:r}),r}parseQuaternion(e,t){let[s,i,n,r]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const a={x:s,y:i,z:n,w:r};return Ze.log({quaternion:a}),a}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1;const r={heading:s,pitch:i,roll:n};return Ze.log({euler:r}),r}parseStepCounter(e){Ze.log("parseStepCounter",e);const t=e.getUint32(0,!0);return Ze.log({stepCount:t}),t}parseActivity(e){Ze.log("parseActivity",e);const t={},s=e.getUint8(0);return Ze.log("activityBitfield",s.toString(2)),Xe.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),Ze.log("activity",t),t}parseDeviceOrientation(e){Ze.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=Ye[t];return Ze.assertWithError(s,"undefined deviceOrientation"),Ze.log({deviceOrientation:s}),s}}var tt,st;const it=["barometer"],nt=it,rt=k("BarometerSensorDataManager",{log:!0});class at{constructor(){tt.add(this)}parseData(t,s){const i=t.getUint32(0,!0)*s,n=e(this,tt,"m",st).call(this,i);return rt.log({pressure:i,altitude:n}),{pressure:i}}}tt=new WeakSet,st=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const ot=k("ParseUtils",{log:!0});function ct(e,t=0){const s=e.getUint8(t++);return{string:P.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function ht(e,t,s,i,n=!1){let r=0;for(;r<e.byteLength;){const a=e.getUint8(r++);ot.assertWithError(a in t,`invalid messageTypeEnum ${a}`);const o=t[a];let c;n?(c=e.getUint16(r,!0),r+=2):c=e.getUint8(r++),ot.log({messageTypeEnum:a,messageType:o,messageLength:c,dataView:e,byteOffset:r});const h=G(e,r,c);ot.log({_dataView:h}),s(o,h,i),r+=c}}var lt;const gt=k("SensorDataManager",{log:!0}),ut=[...He,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...it],ft=[...Je,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...nt],dt=["getPressurePositions","getSensorScalars","sensorData"],mt=[...dt,...ut];class pt{constructor(){this.pressureSensorDataManager=new Ke,this.motionSensorDataManager=new et,this.barometerSensorDataManager=new at,lt.set(this,new Map)}static AssertValidSensorType(e){gt.assertEnumWithError(e,ut)}static AssertValidSensorTypeEnum(e){gt.assertTypeWithError(e,"number"),gt.assertWithError(e in ut,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(gt.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(t){for(let s=0;s<t.byteLength;s+=5){const i=t.getUint8(s),n=ut[i];if(!n){gt.warn(`unknown sensorType index ${i}`);continue}const r=t.getFloat32(s+1,!0);gt.log({sensorType:n,sensorScalar:r}),e(this,lt,"f").set(n,r)}}parseData(e){gt.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=Oe(e,t);t+=2;ht(new DataView(e.buffer,t),ut,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(t,s,{timestamp:i}){const n=e(this,lt,"f").get(t)||1;let r=null;switch(t){case"pressure":r=this.pressureSensorDataManager.parseData(s,n);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":r=this.motionSensorDataManager.parseVector3(s,n);break;case"gameRotation":case"rotation":r=this.motionSensorDataManager.parseQuaternion(s,n);break;case"orientation":r=this.motionSensorDataManager.parseEuler(s,n);break;case"stepCounter":r=this.motionSensorDataManager.parseStepCounter(s);break;case"stepDetector":r={};break;case"activity":r=this.motionSensorDataManager.parseActivity(s);break;case"deviceOrientation":r=this.motionSensorDataManager.parseDeviceOrientation(s);break;case"barometer":r=this.barometerSensorDataManager.parseData(s,n);break;default:gt.error(`uncaught sensorType "${t}"`)}gt.assertWithError(null!=r,`no sensorData defined for sensorType "${t}"`),gt.log({sensorType:t,sensorData:r}),this.dispatchEvent(t,{sensorType:t,[t]:r,timestamp:i}),this.dispatchEvent("sensorData",{sensorType:t,[t]:r,timestamp:i})}}var vt,wt,yt,bt,St,Et,Ct,Mt,Dt,kt,Tt,Wt,_t;lt=new WeakMap;const It=k("SensorConfigurationManager",{log:!0}),Ft=65535,Ut=5,Lt=["getSensorConfiguration","setSensorConfiguration"],Rt=Lt;class xt{constructor(){vt.add(this),bt.set(this,void 0),Et.set(this,void 0),H(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return e(this,Et,"f")}async setConfiguration(t,s){if(s&&(t=Object.assign({...this.zeroSensorConfiguration},t)),It.log({newSensorConfiguration:t}),e(this,vt,"m",Mt).call(this,t))return void It.log("redundant sensor configuration");const i=e(this,vt,"m",Wt).call(this,t);It.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get ZeroSensorConfiguration(){return e(this,wt,"f",_t)}get zeroSensorConfiguration(){const e={};return ut.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(t,s){switch(It.log({messageType:t}),t){case"getSensorConfiguration":case"setSensorConfiguration":const i=e(this,vt,"m",Dt).call(this,s);e(this,vt,"m",Ct).call(this,i);break;default:throw Error(`uncaught messageType ${t}`)}}}var At,Ot,$t,Bt,Nt,Pt,Vt,zt,jt,Gt,qt,Ht,Jt,Qt,Kt,Zt,Xt,Yt,es,ts,ss,is,ns,rs,as,os,cs,hs,ls,gs;wt=xt,bt=new WeakMap,Et=new WeakMap,vt=new WeakSet,yt=function(){return this.eventDispatcher.dispatchEvent},St=function(t){It.assertWithError(e(this,bt,"f"),"must get initial sensorConfiguration");const s=e(this,bt,"f")?.includes(t);return It.assert(s,`unavailable sensor type "${t}"`),s},Ct=function(s){t(this,Et,s,"f"),It.log({updatedConfiguration:e(this,Et,"f")}),e(this,vt,"a",yt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},Mt=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},Dt=function(e){const s={};for(let t=0;t<e.byteLength;t+=3){const i=e.getUint8(t),n=ut[i];if(!n){It.warn(`unknown sensorType index ${i}`);continue}const r=e.getUint16(t+1,!0);It.log({sensorType:n,sensorRate:r}),s[n]=r}return It.log({parsedSensorConfiguration:s}),t(this,bt,Object.keys(s),"f"),s},kt=function(e){It.assertTypeWithError(e,"number"),It.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),It.assertWithError(e<65535,`sensorRate must be 0 or greater (got ${e})`),It.assertWithError(e%5==0,"sensorRate must be multiple of 5")},Tt=function(t){e(wt,wt,"m",kt).call(wt,t)},Wt=function(t){let s=Object.keys(t);s=s.filter((t=>e(this,vt,"m",St).call(this,t)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{pt.AssertValidSensorType(s);const r=ut.indexOf(s);i.setUint8(3*n,r);const a=t[s];e(this,vt,"m",Tt).call(this,a),i.setUint16(3*n+1,a,!0)})),It.log({sensorConfigurationData:i}),i},_t={value:{}},ut.forEach((t=>{e(wt,wt,"f",_t)[t]=0}));const us=k("TfliteManager",{log:!0}),fs=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],ds=fs,ms=["classification","regression"],ps=["pressure","linearAcceleration","gyroscope","magnetometer"];class vs{constructor(){At.add(this),Nt.set(this,void 0),zt.set(this,void 0),qt.set(this,void 0),Qt.set(this,[]),Xt.set(this,void 0),ss.set(this,void 0),rs.set(this,void 0),cs.set(this,void 0),H(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return e(this,Nt,"f")}async setName(e,t){if(us.assertTypeWithError(e,"string"),this.name==e)return void us.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=N.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return e(this,zt,"f")}async setTask(t,s){if(e(this,At,"m",Ot).call(this,t),this.task==t)return void us.log(`redundant task assignment ${t}`);const i=this.waitForEvent("getTfliteTask"),n=ms.indexOf(t);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return e(this,qt,"f")}async setSampleRate(t,s){if(us.assertTypeWithError(t,"number"),t-=t%5,us.assertWithError(t>=5,`sampleRate must be multiple of 5 greater than 0 (got ${t})`),e(this,qt,"f")==t)return void us.log(`redundant sampleRate assignment ${t}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static AssertValidSensorType(e){pt.AssertValidSensorType(e),us.assertWithError(ps.includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return e(this,Qt,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{vs.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>ut.indexOf(e))).sort();us.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return e(this,Xt,"f")}get captureDelay(){return e(this,ss,"f")}async setCaptureDelay(t,s){if(us.assertTypeWithError(t,"number"),e(this,ss,"f")==t)return void us.log(`redundant captureDelay assignment ${t}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return e(this,rs,"f")}async setThreshold(t,s){if(us.assertTypeWithError(t,"number"),us.assertWithError(t>=0,`threshold must be positive (got ${t})`),e(this,rs,"f")==t)return void us.log(`redundant threshold assignment ${t}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,t,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return e(this,cs,"f")}async setInferencingEnabled(t,s=!0){if(us.assertTypeWithError(t,"boolean"),!t&&!this.isReady)return;if(e(this,At,"m",ts).call(this),e(this,cs,"f")==t)return void us.log(`redundant inferencingEnabled assignment ${t}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(t)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(t,s){switch(us.log({messageType:t}),t){case"getTfliteName":case"setTfliteName":e(this,At,"m",Pt).call(this,s);break;case"getTfliteTask":case"setTfliteTask":e(this,At,"m",jt).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":e(this,At,"m",Ht).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":e(this,At,"m",Kt).call(this,s);break;case"tfliteIsReady":e(this,At,"m",Yt).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":e(this,At,"m",is).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":e(this,At,"m",as).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":e(this,At,"m",hs).call(this,s);break;case"tfliteInference":e(this,At,"m",gs).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}}var ws,ys,bs,Ss,Es;Nt=new WeakMap,zt=new WeakMap,qt=new WeakMap,Qt=new WeakMap,Xt=new WeakMap,ss=new WeakMap,rs=new WeakMap,cs=new WeakMap,At=new WeakSet,Ot=function(e){us.assertEnumWithError(e,ms)},$t=function(e){us.assertWithError(e in ms,`invalid taskEnum ${e}`)},Bt=function(){return this.eventDispatcher.dispatchEvent},Pt=function(t){us.log("parseName",t);const s=P.decode(t.buffer);e(this,At,"m",Vt).call(this,s)},Vt=function(s){us.log({name:s}),t(this,Nt,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteName",{tfliteName:s})},jt=function(t){us.log("parseTask",t);const s=t.getUint8(0);e(this,At,"m",$t).call(this,s);const i=ms[s];e(this,At,"m",Gt).call(this,i)},Gt=function(s){us.log({task:s}),t(this,zt,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteTask",{tfliteTask:s})},Ht=function(t){us.log("parseSampleRate",t);const s=t.getUint16(0,!0);e(this,At,"m",Jt).call(this,s)},Jt=function(s){us.log({sampleRate:s}),t(this,qt,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteSampleRate",{tfliteSampleRate:s})},Kt=function(t){us.log("parseSensorTypes",t);const s=[];for(let e=0;e<t.byteLength;e++){const i=t.getUint8(e),n=ut[i];n?s.push(n):us.error(`invalid sensorTypeEnum ${i}`)}e(this,At,"m",Zt).call(this,s)},Zt=function(s){us.log({sensorTypes:s}),t(this,Qt,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:s})},Yt=function(t){us.log("parseIsReady",t);const s=Boolean(t.getUint8(0));e(this,At,"m",es).call(this,s)},es=function(s){us.log({isReady:s}),t(this,Xt,s,"f"),e(this,At,"a",Bt).call(this,"tfliteIsReady",{tfliteIsReady:s})},ts=function(){us.assertWithError(this.isReady,"tflite is not ready")},is=function(t){us.log("parseCaptureDelay",t);const s=t.getUint16(0,!0);e(this,At,"m",ns).call(this,s)},ns=function(s){us.log({captureDelay:s}),t(this,ss,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:s})},as=function(t){us.log("parseThreshold",t);const s=t.getFloat32(0,!0);e(this,At,"m",os).call(this,s)},os=function(s){us.log({threshold:s}),t(this,rs,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteThreshold",{tfliteThreshold:s})},hs=function(t){us.log("parseInferencingEnabled",t);const s=Boolean(t.getUint8(0));e(this,At,"m",ls).call(this,s)},ls=function(s){us.log({inferencingEnabled:s}),t(this,cs,s,"f"),e(this,At,"a",Bt).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:s})},gs=function(t){us.log("parseInference",t);const s=Oe(t,0);us.log({timestamp:s});const i=[];for(let e=0,s=2;s<t.byteLength;e++,s+=4){const e=t.getFloat32(s,!0);i.push(e)}us.log("values",i);const n={timestamp:s,values:i};e(this,At,"a",Bt).call(this,"tfliteInference",{tfliteInference:n})};const Cs=k("DeviceInformationManager",{log:!0}),Ms=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],Ds=[...Ms,"deviceInformation"];class ks{constructor(){ws.add(this),bs.set(this,{})}get information(){return e(this,bs,"f")}clear(){t(this,bs,{},"f")}parseMessage(t,s){switch(Cs.log({messageType:t}),t){case"manufacturerName":const i=P.decode(s.buffer);Cs.log({manufacturerName:i}),e(this,ws,"m",Es).call(this,{manufacturerName:i});break;case"modelNumber":const n=P.decode(s.buffer);Cs.log({modelNumber:n}),e(this,ws,"m",Es).call(this,{modelNumber:n});break;case"softwareRevision":const r=P.decode(s.buffer);Cs.log({softwareRevision:r}),e(this,ws,"m",Es).call(this,{softwareRevision:r});break;case"hardwareRevision":const a=P.decode(s.buffer);Cs.log({hardwareRevision:a}),e(this,ws,"m",Es).call(this,{hardwareRevision:a});break;case"firmwareRevision":const o=P.decode(s.buffer);Cs.log({firmwareRevision:o}),e(this,ws,"m",Es).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),Cs.log({pnpId:c}),e(this,ws,"m",Es).call(this,{pnpId:c});break;case"serialNumber":const h=P.decode(s.buffer);Cs.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}var Ts,Ws,_s,Is,Fs,Us,Ls,Rs,xs,As,Os,$s,Bs,Ns,Ps,Vs,zs,js;bs=new WeakMap,ws=new WeakSet,ys=function(){return this.eventDispatcher.dispatchEvent},Ss=function(){return Ms.every((t=>t in e(this,bs,"f")))},Es=function(t){Cs.log({partialDeviceInformation:t});Object.keys(t).forEach((s=>{e(this,ws,"a",ys).call(this,s,{[s]:t[s]})})),Object.assign(e(this,bs,"f"),t),Cs.log({deviceInformation:e(this,bs,"f")}),e(this,ws,"a",Ss)&&(Cs.log("completed deviceInformation"),e(this,ws,"a",ys).call(this,"deviceInformation",{deviceInformation:this.information}))};const Gs=k("InformationManager",{log:!0}),qs=["leftInsole","rightInsole"],Hs=["left","right"],Js=2,Qs=30,Ks=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],Zs=Ks;class Xs{constructor(){Ts.add(this),_s.set(this,!1),Fs.set(this,void 0),Ls.set(this,void 0),xs.set(this,""),As.set(this,void 0),Ns.set(this,0),Vs.set(this,!1),H(this)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return e(this,_s,"f")}get batteryCurrent(){return e(this,Fs,"f")}async getBatteryCurrent(){Gs.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}get id(){return e(this,Ls,"f")}get name(){return e(this,xs,"f")}updateName(s){Gs.assertTypeWithError(s,"string"),t(this,xs,s,"f"),Gs.log({updatedName:e(this,xs,"f")}),e(this,Ts,"a",Ws).call(this,"getName",{name:e(this,xs,"f")})}async setName(e){Gs.assertTypeWithError(e,"string"),Gs.assertWithError(e.length>=2,`name must be greater than 2 characters long ("${e}" is ${e.length} characters long)`),Gs.assertWithError(e.length<30,`name must be less than 30 characters long ("${e}" is ${e.length} characters long)`);const t=N.encode(e);Gs.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return e(this,As,"f")}get typeEnum(){return qs.indexOf(this.type)}updateType(s){e(this,Ts,"m",Os).call(this,s),s!=this.type?(t(this,As,s,"f"),Gs.log({updatedType:e(this,As,"f")}),e(this,Ts,"a",Ws).call(this,"getType",{type:e(this,As,"f")})):Gs.log("redundant type assignment")}async setType(t){e(this,Ts,"m",Os).call(this,t);const s=qs.indexOf(t);e(this,Ts,"m",Bs).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return e(this,Ns,"f")}get isCurrentTimeSet(){return e(this,Vs,"f")}parseMessage(t,s){switch(Gs.log({messageType:t}),t){case"isCharging":const i=Boolean(s.getUint8(0));Gs.log({isCharging:i}),e(this,Ts,"m",Is).call(this,i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);Gs.log({batteryCurrent:n}),e(this,Ts,"m",Us).call(this,n);break;case"getId":const r=P.decode(s.buffer);Gs.log({id:r}),e(this,Ts,"m",Rs).call(this,r);break;case"getName":case"setName":const a=P.decode(s.buffer);Gs.log({name:a}),this.updateName(a);break;case"getType":case"setType":const o=s.getUint8(0),c=qs[o];Gs.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);Gs.log({mtu:h}),e(this,Ts,"m",Ps).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));e(this,Ts,"m",zs).call(this,l);break;default:throw Error(`uncaught messageType ${t}`)}}clear(){t(this,Vs,!1,"f")}}_s=new WeakMap,Fs=new WeakMap,Ls=new WeakMap,xs=new WeakMap,As=new WeakMap,Ns=new WeakMap,Vs=new WeakMap,Ts=new WeakSet,Ws=function(){return this.eventDispatcher.dispatchEvent},Is=function(s){Gs.assertTypeWithError(s,"boolean"),t(this,_s,s,"f"),Gs.log({isCharging:e(this,_s,"f")}),e(this,Ts,"a",Ws).call(this,"isCharging",{isCharging:e(this,_s,"f")})},Us=function(s){Gs.assertTypeWithError(s,"number"),t(this,Fs,s,"f"),Gs.log({batteryCurrent:e(this,Fs,"f")}),e(this,Ts,"a",Ws).call(this,"getBatteryCurrent",{batteryCurrent:e(this,Fs,"f")})},Rs=function(s){Gs.assertTypeWithError(s,"string"),t(this,Ls,s,"f"),Gs.log({id:e(this,Ls,"f")}),e(this,Ts,"a",Ws).call(this,"getId",{id:e(this,Ls,"f")})},Os=function(e){Gs.assertEnumWithError(e,qs)},$s=function(e){Gs.assertTypeWithError(e,"number"),Gs.assertWithError(e in qs,`invalid typeEnum ${e}`)},Bs=async function(t){e(this,Ts,"m",$s).call(this,t);const s=Uint8Array.from([t]);Gs.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Ps=function(s){Gs.assertTypeWithError(s,"number"),e(this,Ns,"f")!=s?(t(this,Ns,s,"f"),e(this,Ts,"a",Ws).call(this,"getMtu",{mtu:e(this,Ns,"f")})):Gs.log("redundant mtu assignment",s)},zs=function(s){Gs.log({currentTime:s}),t(this,Vs,0!=s,"f"),e(this,Vs,"f")||e(this,Ts,"m",js).call(this)},js=async function(){Gs.log("setting current time...");const e=new DataView(new ArrayBuffer(8));e.setBigUint64(0,BigInt(Date.now()),!0);const t=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:e.buffer}]),await t};const Ys=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var ei,ti,si,ii,ni,ri,ai,oi,ci,hi,li,gi,ui,fi,di,mi;const pi=k("VibrationManager"),vi=["front","rear"],wi=["waveformEffect","waveform"],yi=8,bi=2550,Si=1270,Ei=3,Ci=20,Mi=6;class Di{constructor(){ei.add(this),H(this)}async triggerVibration(t,s=!0){let i;t.forEach((t=>{const{type:s}=t;let n,{locations:r}=t;switch(r=r||vi.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=t;n=e(this,ei,"m",ui).call(this,r,s,i)}break;case"waveform":{const{segments:s}=t;n=e(this,ei,"m",fi).call(this,r,s)}break;default:throw Error(`invalid vibration type "${s}"`)}pi.log({type:s,arrayBuffer:n}),i=z(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var ki,Ti,Wi,_i,Ii,Fi,Ui,Li,Ri,xi,Ai,Oi,$i,Bi;ei=new WeakSet,ti=function(e){pi.assertTypeWithError(e,"string"),pi.assertWithError(vi.includes(e),`invalid location "${e}"`)},si=function(t){e(this,ei,"m",ni).call(this,t),t.forEach((t=>{e(this,ei,"m",ti).call(this,t)}))},ii=function(t){e(this,ei,"m",si).call(this,t);let s=0;return t.forEach((e=>{const t=vi.indexOf(e);s|=1<<t})),pi.log({locationsBitmask:s}),pi.assertWithError(s>0,"locationsBitmask must not be zero"),s},ni=function(e){pi.assertWithError(Array.isArray(e),"passed non-array"),pi.assertWithError(e.length>0,"passed empty array")},ri=function(e){pi.assertWithError(Ys.includes(e),`invalid waveformEffect "${e}"`)},ai=function(t){if(null!=t.effect){const s=t.effect;e(this,ei,"m",ri).call(this,s)}else{if(null==t.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:e}=t;pi.assertWithError(e>=0,`delay must be 0ms or greater (got ${e})`),pi.assertWithError(e<=Si,`delay must be 1270ms or less (got ${e})`)}}if(null!=t.loopCount){const{loopCount:s}=t;e(this,ei,"m",oi).call(this,s)}},oi=function(e){pi.assertTypeWithError(e,"number"),pi.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),pi.assertWithError(e<=3,`waveformEffectSegmentLoopCount must be 3 or fewer (got ${e})`)},ci=function(t){e(this,ei,"m",ni).call(this,t),pi.assertWithError(t.length<=8,`must have 8 waveformEffectSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,ei,"m",ai).call(this,t)}))},hi=function(e){pi.assertTypeWithError(e,"number"),pi.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),pi.assertWithError(e<=6,`waveformEffectSequenceLoopCount must be 6 or fewer (got ${e})`)},li=function(e){pi.assertTypeWithError(e.amplitude,"number"),pi.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),pi.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),pi.assertTypeWithError(e.duration,"number"),pi.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),pi.assertWithError(e.duration<=bi,`duration must be 2550ms or less (got ${e.duration}ms)`)},gi=function(t){e(this,ei,"m",ni).call(this,t),pi.assertWithError(t.length<=20,`must have 20 waveformSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,ei,"m",li).call(this,t)}))},ui=function(t,s,i=0){e(this,ei,"m",ci).call(this,s),e(this,ei,"m",hi).call(this,i);let n=[],r=0;const a=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||a&&e<8;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[r++]=Ys.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[r++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<8;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[r]=0);const i=e%4*2;n[r]|=t<<i,3!=e&&7!=e||r++}0!=i&&(n[r++]=i);const c=new DataView(Uint8Array.from(n).buffer);return pi.log({dataArray:n,dataView:c}),e(this,ei,"m",mi).call(this,t,"waveformEffect",c)},fi=function(t,s){e(this,ei,"m",gi).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),pi.log({dataView:i}),e(this,ei,"m",mi).call(this,t,"waveform",i)},di=function(e){pi.assertTypeWithError(e,"string"),pi.assertWithError(wi.includes(e),`invalid vibrationType "${e}"`)},mi=function(t,s,i){pi.assertWithError(i?.byteLength>0,"no data received");const n=e(this,ei,"m",ii).call(this,t);e(this,ei,"m",di).call(this,s);const r=wi.indexOf(s);pi.log({locationsBitmask:n,vibrationTypeIndex:r,dataView:i});const a=z(n,r,i.byteLength,i);return pi.log({data:a}),a};const Ni=k("BaseConnectionManager",{log:!0}),Pi=["notConnected","connecting","connected","disconnecting"],Vi=[...Pi,"connectionStatus","isConnected"],zi=[...Ks,...Lt,...dt,"triggerVibration",...fs,..._e],ji=["batteryLevel"],Gi=["rx","tx"],qi=[...ji,...Ms,...Gi,...zi,"smp"];class Hi{get baseConstructor(){return this.constructor}static get isSupported(){return!1}get isSupported(){return this.baseConstructor.isSupported}get type(){return this.baseConstructor.type}constructor(){ki.add(this),Ii.set(this,"notConnected"),Ai.set(this,[]),$i.set(this,new R(e(this,ki,"m",Bi).bind(this),5e3)),e(this,ki,"m",_i).call(this)}get status(){return e(this,Ii,"f")}set status(s){Ni.assertEnumWithError(s,Pi),e(this,Ii,"f")!=s?(Ni.log(`new connection status "${s}"`),t(this,Ii,s,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,$i,"f").start():e(this,$i,"f").stop(),"notConnected"==e(this,Ii,"f")&&(this.mtu=void 0)):Ni.log(`tried to assign same connection status "${s}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,ki,"m",Fi).call(this),e(this,ki,"m",Ui).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,ki,"m",Fi).call(this),e(this,ki,"m",Ui).call(this),Ni.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,ki,"m",Li).call(this),e(this,ki,"m",Ri).call(this),this.status="disconnecting",Ni.log("disconnecting from device...")}async sendSmpMessage(t){e(this,ki,"m",xi).call(this),Ni.log("sending smp message",t)}async sendTxMessages(t,s=!0){if(e(this,ki,"m",xi).call(this),t&&e(this,Ai,"f").push(...t),!s)return;Ni.log("sendTxMessages",e(this,Ai,"f").slice());const i=e(this,Ai,"f").map((t=>{e(Ti,Ti,"m",Wi).call(Ti,t.type);const s=zi.indexOf(t.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,t.data?.byteLength||0,!0),z(s,i,t.data)}));if(this.mtu)for(;i.length>0;){let e=0,t=0;i.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=i.splice(0,t);Ni.log({arrayBufferCount:t,arrayBuffersToSend:s});const n=z(...s);Ni.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=z(...i);Ni.log("sending arrayBuffer",e),await this.sendTxData(e)}e(this,Ai,"f").length=0}async sendTxData(e){Ni.log("sendTxData",e)}parseRxMessage(t){ht(t,zi,e(this,ki,"m",Oi).bind(this),null,!0)}}Ti=Hi,Ii=new WeakMap,Ai=new WeakMap,$i=new WeakMap,ki=new WeakSet,Wi=function(e){Ni.assertEnumWithError(e,zi)},_i=function(){Ni.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Fi=function(){Ni.assertWithError(!this.isConnected,"device is already connected")},Ui=function(){Ni.assertWithError("connecting"!=this.status,"device is already connecting")},Li=function(){Ni.assertWithError(this.isConnected,"device is not connected")},Ri=function(){Ni.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},xi=function(){e(this,ki,"m",Li).call(this),e(this,ki,"m",Ri).call(this)},Oi=function(e,t){Ni.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Bi=function(){this.isConnected||(Ni.log("timer detected disconnection"),this.status="notConnected")};const Ji=k("EventUtils",{log:!1});function Qi(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;Ji.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function Ki(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;Ji.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Zi=k("bluetoothUUIDs",{log:!1});if(i)var Xi=window.BluetoothUUID;function Yi(e){return Zi.assertTypeWithError(e,"string"),Zi.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function en(e){return Xi?.getCharacteristic?.(e)}function tn(e){return Xi?.getService?.(e)}const sn=Object.freeze({services:{deviceInformation:{uuid:tn("device_information"),characteristics:{manufacturerName:{uuid:en("manufacturer_name_string")},modelNumber:{uuid:en("model_number_string")},hardwareRevision:{uuid:en("hardware_revision_string")},firmwareRevision:{uuid:en("firmware_revision_string")},softwareRevision:{uuid:en("software_revision_string")},pnpId:{uuid:en("pnp_id")},serialNumber:{uuid:en("serial_number_string")}}},battery:{uuid:tn("battery_service"),characteristics:{batteryLevel:{uuid:en("battery_level")}}},main:{uuid:Yi("0000"),characteristics:{rx:{uuid:Yi("1000")},tx:{uuid:Yi("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),nn=[sn.services.main.uuid],rn=[sn.services.deviceInformation.uuid,sn.services.battery.uuid,sn.services.smp.uuid];function an(e){e=e.toString().toLowerCase();return Object.keys(sn.services).find((t=>{let s=sn.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const on=[],cn=[];function hn(e){var t;return e=e.toString().toLowerCase(),Object.values(sn.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function ln(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}switch(e){case"tx":case"smp":t.writeWithoutResponse=!0}return t}Object.values(sn.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];nn.includes(e.uuid)&&(on.push(i.uuid),t.push(s)),cn.push(i.uuid)}))}),[]);const gn=k("BluetoothConnectionManager",{log:!0});class un extends Hi{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){gn.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var fn,dn,mn,pn,vn,wn,yn,bn,Sn,En,Cn;const Mn=k("WebBluetoothConnectionManager",{log:!0});var Dn;i&&(Dn=window.navigator.bluetooth);class kn extends un{constructor(){super(...arguments),fn.add(this),dn.set(this,{characteristicvaluechanged:e(this,fn,"m",Sn).bind(this)}),mn.set(this,{gattserverdisconnected:e(this,fn,"m",Cn).bind(this)}),pn.set(this,void 0),vn.set(this,new Map),wn.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(Dn)}static get type(){return"webBluetooth"}get device(){return e(this,pn,"f")}set device(s){e(this,pn,"f")!=s?(e(this,pn,"f")&&Ki(e(this,pn,"f"),e(this,mn,"f")),s&&Qi(s,e(this,mn,"f")),t(this,pn,s,"f")):Mn.log("tried to assign the same BluetoothDevice")}get server(){return e(this,pn,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await Dn.requestDevice({filters:[{services:nn}],optionalServices:i?rn:[]});Mn.log("got BluetoothDevice"),this.device=t,Mn.log("connecting to device...");const s=await this.server.connect();Mn.log(`connected to device? ${s.connected}`),await e(this,fn,"m",yn).call(this),Mn.log("fully connected"),this.status="connected"}catch(t){Mn.error(t),this.status="notConnected",this.server?.disconnect(),e(this,fn,"m",bn).call(this)}}async disconnect(){await e(this,fn,"m",bn).call(this),await super.disconnect(),this.server?.disconnect(),this.status="notConnected"}async writeCharacteristic(t,s){super.writeCharacteristic(t,s);const i=e(this,wn,"f").get(t);Mn.assertWithError(i,`${t} characteristic not found`),Mn.log("writing characteristic",i,s);const n=i.properties||ln(t);n.writeWithoutResponse?(Mn.log("writing without response"),await i.writeValueWithoutResponse(s)):(Mn.log("writing with response"),await i.writeValueWithResponse(s)),Mn.log("wrote characteristic"),n.read&&!n.notify&&(Mn.log("reading value after write..."),await i.readValue(),(o||c)&&e(this,fn,"m",En).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),Mn.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){Mn.error(e),this.isInRange=!1}this.isConnected?(Mn.log("successfully reconnected!"),await e(this,fn,"m",yn).call(this),this.status="connected"):(Mn.log("unable to reconnect"),this.status="notConnected")}}dn=new WeakMap,mn=new WeakMap,pn=new WeakMap,vn=new WeakMap,wn=new WeakMap,fn=new WeakSet,yn=async function(){e(this,fn,"m",bn).call(this),Mn.log("getting services...");const t=await this.server.getPrimaryServices();Mn.log("got services",t.length),await this.server.getPrimaryService("8d53dc1d-1db7-4cd3-868b-8a527460aa84"),Mn.log("getting characteristics...");for(const s in t){const i=t[s];Mn.log({service:i});const n=an(i.uuid);Mn.assertWithError(n,`no name found for service uuid "${i.uuid}"`),Mn.log(`got "${n}" service`),i.name=n,e(this,vn,"f").set(n,i),Mn.log(`getting characteristics for "${n}" service`);const r=await i.getCharacteristics();Mn.log(`got characteristics for "${n}" service`);for(const t in r){const s=r[t];Mn.log({characteristic:s});const i=hn(s.uuid);Mn.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),Mn.log(`got "${i}" characteristic in "${n}" service`),s.name=i,e(this,wn,"f").set(i,s),Qi(s,e(this,dn,"f"));const a=s.properties||ln(i);a.notify&&(Mn.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),a.read&&(Mn.log(`reading "${i}" characteristic...`),await s.readValue(),(o||c)&&e(this,fn,"m",En).call(this,s))}}},bn=async function(){this.device&&Ki(this.device,e(this,mn,"f"));const t=Array.from(e(this,wn,"f").keys()).map((t=>{const s=e(this,wn,"f").get(t);Ki(s,e(this,dn,"f"));if((s.properties||ln(t)).notify)return Mn.log(`stopping notifications for "${t}" characteristic`),s.stopNotifications()}));return Promise.allSettled(t)},Sn=function(t){Mn.log("oncharacteristicvaluechanged");const s=t.target;e(this,fn,"m",En).call(this,s)},En=function(e){Mn.log("onCharacteristicValue");const t=e.name;Mn.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),Mn.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;Mn.assertWithError(s,`no data found for "${t}" characteristic`),Mn.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){Mn.error(e)}},Cn=function(){Mn.log("gattserverdisconnected"),this.status="notConnected"};const Tn=4294967296,Wn=9007199254740992;const _n={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function r(e){let r=s.byteLength;const a=n+e;for(;r<a;)r<<=1;if(r!==s.byteLength){const e=i;s=new ArrayBuffer(r),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function a(){n+=t}function o(e){a(r(1).setUint8(n,e))}function c(e){const t=r(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);a()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){a(r(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){a(r(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%Tn,s=(e-t)/Tn,i=r(8);i.setUint32(n,s),i.setUint32(n+4,t),a()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=Wn)return h(0,t);if(-Wn<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){a(r(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),g=new DataView(l);for(let e=0;e<n;++e)g.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function r(e,t){return n+=e,t}function a(t){return r(t,new Uint8Array(e,n,t))}function o(){return r(1,i.getUint8(n))}function c(){return r(2,i.getUint16(n))}function h(){return r(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function g(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*Tn+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function u(e){const t=o();if(255===t)return-1;const s=g(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function f(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const r=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==r)return(i?-1:1)*r*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|r<<13),t.getFloat32(0)}();case 26:return r(4,i.getFloat32(n));case 27:return r(8,i.getFloat64(n))}if(v=g(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=u(d))>=0;)t+=v,e.push(a(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return a(v);case 3:if(v<0)for(;(v=u(d))>=0;)f(w,v);else f(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},In=k("mcumgr",{log:!0}),Fn=0,Un=1,Ln=2,Rn=3,xn=0,An=1,On=8,$n=0,Bn=2,Nn=3,Pn=5,Vn=0,zn=1,jn=5,Gn=0;class qn{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(_n.encode(i))]);const r=255&n.length,a=[e,0,n.length>>8,r,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,a}_notification(e){In.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,r,,a]=e,o=_n.decode(e.slice(8).buffer),c=256*s+i,h=256*n+r;return In.log("mcumgr - Process Message - Group: "+h+", Id: "+a+", Off: "+o.off),h===An&&a===zn&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===Rn&&h===On&&a===Gn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===Un&&h===On&&a===Gn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),In.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}))}cmdReset(){return this._getMessage(Ln,xn,Pn)}smpEcho(e){return this._getMessage(Ln,xn,$n,{d:e})}cmdImageState(){return this._getMessage(Fn,An,Vn)}cmdImageErase(){return this._getMessage(Ln,An,jn,{})}cmdImageTest(e){return this._getMessage(Ln,An,Vn,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(Ln,An,Vn,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-_n.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(Ln,An,zn,e);In.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?In.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?In.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(In.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-_n.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(Ln,On,Gn,e);In.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?In.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage(Fn,On,Gn,e);In.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const r=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=r,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var Hn,Jn,Qn,Kn,Zn,Xn,Yn,er,tr,sr,ir,nr,rr,ar,or,cr,hr,lr,gr,ur,fr;const dr=k("FirmwareManager",{log:!0}),mr=["smp"],pr=[...mr,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],vr=["idle","uploading","uploaded","pending","testing","erasing"];class wr{constructor(){Hn.add(this),Qn.set(this,"idle"),Zn.set(this,void 0),er.set(this,void 0),tr.set(this,new qn),e(this,Hn,"m",sr).call(this),H(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(t,s){if(dr.log({messageType:t}),"smp"!==t)throw Error(`uncaught messageType ${t}`);e(this,tr,"f")._notification(Array.from(new Uint8Array(s.buffer))),e(this,Hn,"a",Jn).call(this,"smp",{dataView:s})}async uploadFirmware(t){dr.log("uploadFirmware",t);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await q(t),n=await e(this,tr,"f").imageInfo(i);dr.log({imageInfo:n}),e(this,tr,"f").cmdUpload(i,1),e(this,Hn,"m",Kn).call(this,"uploading"),await s}get status(){return e(this,Qn,"f")}get images(){return e(this,Zn,"f")}async getImages(){const t=this.waitForEvent("firmwareImages");dr.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(e(this,tr,"f").cmdImageState()).buffer),await t}async testImage(t=1){if(e(this,Hn,"m",Yn).call(this,t),e(this,Hn,"m",Xn).call(this),!e(this,Zn,"f")[t])return void dr.log(`image ${t} not found`);if(1==e(this,Zn,"f")[t].pending)return void dr.log(`image ${t} is already pending`);if(e(this,Zn,"f")[t].empty)return void dr.log(`image ${t} is empty`);const s=this.waitForEvent("smp");dr.log("testing firmware image..."),this.sendMessage(Uint8Array.from(e(this,tr,"f").cmdImageTest(e(this,Zn,"f")[t].hash)).buffer),await s}async eraseImage(){e(this,Hn,"m",Xn).call(this);const t=this.waitForEvent("smp");dr.log("erasing image..."),this.sendMessage(Uint8Array.from(e(this,tr,"f").cmdImageErase()).buffer),e(this,Hn,"m",Kn).call(this,"erasing"),await t,await this.getImages()}async confirmImage(t=0){if(e(this,Hn,"m",Yn).call(this,t),e(this,Hn,"m",Xn).call(this),!0===e(this,Zn,"f")[t].confirmed)return void dr.log(`image ${t} is already confirmed`);const s=this.waitForEvent("smp");dr.log("confirming image..."),this.sendMessage(Uint8Array.from(e(this,tr,"f").cmdImageConfirm(e(this,Zn,"f")[t].hash)).buffer),await s}async echo(t){dr.assertTypeWithError(t,"string");const s=this.waitForEvent("smp");dr.log("sending echo..."),this.sendMessage(Uint8Array.from(e(this,tr,"f").smpEcho(t)).buffer),await s}async reset(){const t=this.waitForEvent("smp");dr.log("resetting..."),this.sendMessage(Uint8Array.from(e(this,tr,"f").cmdReset()).buffer),await t}get mtu(){return e(this,er,"f")}set mtu(s){t(this,er,s,"f"),e(this,tr,"f")._mtu=s}}var yr,br,Sr,Er,Cr,Mr,Dr,kr,Tr,Wr,_r,Ir,Fr,Ur,Lr,Rr,xr,Ar;Qn=new WeakMap,Zn=new WeakMap,er=new WeakMap,tr=new WeakMap,Hn=new WeakSet,Jn=function(){return this.eventDispatcher.dispatchEvent},Kn=function(s){dr.assertEnumWithError(s,vr),e(this,Qn,"f")!=s?(t(this,Qn,s,"f"),dr.log({firmwareStatus:e(this,Qn,"f")}),e(this,Hn,"a",Jn).call(this,"firmwareStatus",{firmwareStatus:e(this,Qn,"f")})):dr.log(`redundant firmwareStatus assignment "${s}"`)},Xn=function(){dr.assertWithError(e(this,Zn,"f"),"didn't get imageState")},Yn=function(e){dr.assertTypeWithError(e,"number"),dr.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},sr=function(){e(this,tr,"f").onMessage(e(this,Hn,"m",ir).bind(this)),e(this,tr,"f").onFileDownloadNext(e(this,Hn,"m",nr)),e(this,tr,"f").onFileDownloadProgress(e(this,Hn,"m",rr).bind(this)),e(this,tr,"f").onFileDownloadFinished(e(this,Hn,"m",ar).bind(this)),e(this,tr,"f").onFileUploadNext(e(this,Hn,"m",or).bind(this)),e(this,tr,"f").onFileUploadProgress(e(this,Hn,"m",cr).bind(this)),e(this,tr,"f").onFileUploadFinished(e(this,Hn,"m",hr).bind(this)),e(this,tr,"f").onImageUploadNext(e(this,Hn,"m",lr).bind(this)),e(this,tr,"f").onImageUploadProgress(e(this,Hn,"m",gr).bind(this)),e(this,tr,"f").onImageUploadFinished(e(this,Hn,"m",ur).bind(this))},ir=function({op:t,group:s,id:i,data:n,length:r}){switch(dr.log("onMcuMessage",...arguments),s){case xn:switch(i){case $n:dr.log(`echo "${n.r}"`);break;case Bn:dr.table(n.tasks);break;case Nn:dr.log(n)}break;case An:if(i===Vn)e(this,Hn,"m",fr).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},nr=function(){dr.log("onMcuFileDownloadNext",...arguments)},rr=function(){dr.log("onMcuFileDownloadProgress",...arguments)},ar=function(){dr.log("onMcuFileDownloadFinished",...arguments)},or=function(){dr.log("onMcuFileUploadNext")},cr=function(){dr.log("onMcuFileUploadProgress")},hr=function(){dr.log("onMcuFileUploadFinished")},lr=function({packet:e}){dr.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},gr=function({percentage:t}){const s=t/100;dr.log("onMcuImageUploadProgress",...arguments),e(this,Hn,"a",Jn).call(this,"firmwareUploadProgress",{progress:s})},ur=async function(){dr.log("onMcuImageUploadFinished",...arguments),await this.getImages(),e(this,Hn,"a",Jn).call(this,"firmwareUploadProgress",{progress:100}),e(this,Hn,"a",Jn).call(this,"firmwareUploadComplete",{})},fr=function({images:s}){if(!s)return void dr.log("no images found");t(this,Zn,s,"f"),dr.log("images",e(this,Zn,"f"));let i="idle";2==e(this,Zn,"f").length&&(e(this,Zn,"f")[1].bootable?e(this,Zn,"f")[0].confirmed?e(this,Zn,"f")[1].pending?(dr.log("reset to upload to the new firmware image"),i="pending"):(dr.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(dr.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):dr.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==e(this,Zn,"f").length&&(e(this,Zn,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),dr.log("Select a firmware upload image to upload to slot 1.")),e(this,Hn,"m",Kn).call(this,i),e(this,Hn,"a",Jn).call(this,"firmwareImages",{firmwareImages:e(this,Zn,"f")})};const Or=k("DeviceManager",{log:!0}),$r=["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"];class Br{constructor(){if(yr.add(this),br.set(this,{getType:e(this,yr,"m",Sr).bind(this),isConnected:e(this,yr,"m",Rr).bind(this)}),Er.set(this,[]),Cr.set(this,!1),Mr.set(this,{devices:[]}),Dr.set(this,void 0),Tr.set(this,"BS.Device"),Fr.set(this,[]),Ur.set(this,new _(this,$r)),Br.shared&&this!=Br.shared)throw Error("DeviceManager is a singleton - use DeviceManager.shared");this.CanUseLocalStorage&&(this.UseLocalStorage=!0)}onDevice(t){Qi(t,e(this,br,"f"))}OnDeviceConnectionStatusUpdated(t,s){if("notConnected"==s&&!t.canReconnect&&e(this,Fr,"f").includes(t)){const s=e(this,Fr,"f").indexOf(t);this.AvailableDevices.splice(s,1),e(this,yr,"m",xr).call(this)}}get ConnectedDevices(){return e(this,Er,"f")}get UseLocalStorage(){return e(this,Cr,"f")}set UseLocalStorage(s){e(this,yr,"m",kr).call(this),Or.assertTypeWithError(s,"boolean"),t(this,Cr,s,"f"),e(this,Cr,"f")&&!e(this,Dr,"f")&&e(this,yr,"m",_r).call(this)}get CanUseLocalStorage(){return i&&window.localStorage}get AvailableDevices(){return e(this,Fr,"f")}get CanGetDevices(){return Or.log("current firmware doesn't pair-bond"),!1}async GetDevices(){if(!i)return void Or.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void Or.warn("bluetooth is not available in this browser");if(o)return void Or.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void Or.warn("bluetooth.getDevices() is not available in this browser");if(!this.CanGetDevices)return void Or.log("CanGetDevices is false");e(this,Dr,"f")||e(this,yr,"m",_r).call(this);const t=e(this,Dr,"f");if(!t.devices||0==t.devices.length)return void Or.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return Or.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=t.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const r=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(r)return void(n&&n?.bluetoothId==r.bluetoothId&&n!=r&&(this.AvailableDevices[e(this,Fr,"f").indexOf(r)]=n));if(n)return void this.AvailableDevices.push(n);const a=new Wa,o=new kn;o.device=s,s.name&&a._informationManager.updateName(s.name),a._informationManager.updateType(i.type),a.connectionManager=o,this.AvailableDevices.push(a)})),e(this,yr,"m",xr).call(this),this.AvailableDevices}get AddEventListener(){return e(this,Ur,"f").addEventListener}get RemoveEventListener(){return e(this,Ur,"f").removeEventListener}}br=new WeakMap,Er=new WeakMap,Cr=new WeakMap,Mr=new WeakMap,Dr=new WeakMap,Tr=new WeakMap,Fr=new WeakMap,Ur=new WeakMap,yr=new WeakSet,Sr=function(t){e(this,Cr,"f")&&e(this,yr,"m",Ir).call(this,t.target)},kr=function(){Or.assertWithError(i,"localStorage is only available in the browser"),Or.assertWithError(window.localStorage,"localStorage not found")},Wr=function(){e(this,yr,"m",kr).call(this),localStorage.setItem(e(this,Tr,"f"),JSON.stringify(e(this,Dr,"f")))},_r=async function(){e(this,yr,"m",kr).call(this);let s=localStorage.getItem(e(this,Tr,"f"));if("string"!=typeof s)return Or.log("no info found in localStorage"),t(this,Dr,Object.assign({},e(this,Mr,"f")),"f"),void e(this,yr,"m",Wr).call(this);try{const e=JSON.parse(s);Or.log({configuration:e}),t(this,Dr,e,"f"),this.CanGetDevices&&await this.GetDevices()}catch(e){Or.error(e)}},Ir=function(t){if("webBluetooth"!=t.connectionType)return void Or.log("localStorage is only for webBluetooth devices");e(this,yr,"m",kr).call(this);const s=e(this,Dr,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1!=s&&(e(this,Dr,"f").devices[s].type=t.type,e(this,yr,"m",Wr).call(this))},Lr=function(){return e(this,Ur,"f").dispatchEvent},Rr=function(t){const{target:s}=t;if(s.isConnected)if(e(this,Er,"f").includes(s))Or.log("device already included");else{if(Or.log("adding device",s),e(this,Er,"f").push(s),this.UseLocalStorage&&"webBluetooth"==s.connectionType){const t={type:s.type,bluetoothId:s.bluetoothId},i=e(this,Dr,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1==i?e(this,Dr,"f").devices.push(t):e(this,Dr,"f").devices[i]=t,e(this,yr,"m",Wr).call(this)}e(this,yr,"a",Lr).call(this,"deviceConnected",{device:s}),e(this,yr,"a",Lr).call(this,"deviceIsConnected",{device:s}),e(this,yr,"m",Ar).call(this)}else e(this,Er,"f").includes(s)?(Or.log("removing device",s),e(this,Er,"f").splice(e(this,Er,"f").indexOf(s),1),e(this,yr,"a",Lr).call(this,"deviceDisconnected",{device:s}),e(this,yr,"a",Lr).call(this,"deviceIsConnected",{device:s}),e(this,yr,"m",Ar).call(this)):Or.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),s.isConnected&&!this.AvailableDevices.includes(s)){const t=this.AvailableDevices.find((e=>e.bluetoothId==s.bluetoothId));Or.log({existingAvailableDevice:t}),t?this.AvailableDevices[this.AvailableDevices.indexOf(t)]=s:this.AvailableDevices.push(s),e(this,yr,"m",xr).call(this)}},xr=function(){Or.log({AvailableDevices:this.AvailableDevices}),e(this,yr,"a",Lr).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},Ar=function(){Or.log({ConnectedDevices:this.ConnectedDevices}),e(this,yr,"a",Lr).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},Br.shared=new Br;var Nr,Pr,Vr,zr,jr,Gr,qr,Hr,Jr,Qr,Kr,Zr,Xr,Yr,ea,ta,sa,ia,na,ra,aa,oa,ca,ha,la,ga,ua,fa,da,ma,pa,va,wa=Br.shared;const ya=k("Device",{log:!0}),ba=["connectionMessage",...Vi,...Gi,...ji,...Zs,...Ds,...Rt,...mt,...Re,...ds,...pr],Sa=["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"];class Ea{get bluetoothId(){return e(this,Gr,"f")?.bluetoothId}constructor(){Nr.add(this),zr.set(this,new _(this,ba)),Gr.set(this,void 0),this.sendTxMessages=e(this,Nr,"m",qr).bind(this),Hr.set(this,!1),Yr.set(this,Pr.ReconnectOnDisconnection),ea.set(this,void 0),this.latestConnectionMessage=new Map,aa.set(this,new ks),oa.set(this,0),this._informationManager=new Xs,ha.set(this,new xt),ga.set(this,Pr.ClearSensorConfigurationOnLeave),ua.set(this,new pt),fa.set(this,new Di),da.set(this,new xe),ma.set(this,new vs),pa.set(this,new wr),this.sendSmpMessage=e(this,Nr,"m",va).bind(this),e(this,aa,"f").eventDispatcher=e(this,zr,"f"),this._informationManager.sendMessage=this.sendTxMessages,this._informationManager.eventDispatcher=e(this,zr,"f"),e(this,ha,"f").sendMessage=this.sendTxMessages,e(this,ha,"f").eventDispatcher=e(this,zr,"f"),e(this,ua,"f").eventDispatcher=e(this,zr,"f"),e(this,fa,"f").sendMessage=this.sendTxMessages,e(this,ma,"f").sendMessage=this.sendTxMessages,e(this,ma,"f").eventDispatcher=e(this,zr,"f"),e(this,da,"f").sendMessage=this.sendTxMessages,e(this,da,"f").eventDispatcher=e(this,zr,"f"),e(this,pa,"f").sendMessage=this.sendSmpMessage,e(this,pa,"f").eventDispatcher=e(this,zr,"f"),this.addEventListener("getMtu",(()=>{e(this,pa,"f").mtu=this.mtu,e(this,da,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),wa.onDevice(this),i&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),n&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()}))}get addEventListener(){return e(this,zr,"f").addEventListener}get removeEventListener(){return e(this,zr,"f").removeEventListener}get waitForEvent(){return e(this,zr,"f").waitForEvent}get connectionManager(){return e(this,Gr,"f")}set connectionManager(s){this.connectionManager!=s?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0),s&&(s.onStatusUpdated=e(this,Nr,"m",ta).bind(this),s.onMessageReceived=e(this,Nr,"m",ra).bind(this)),t(this,Gr,s,"f"),ya.log("assigned new connectionManager",e(this,Gr,"f"))):ya.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(Pr,Pr,"m",Vr).call(Pr)),e(this,Nr,"m",na).call(this),this.connectionManager.connect()}get isConnected(){return e(this,Hr,"f")}get canReconnect(){return ya.log("devices don't pair bond, so you can't reconnect"),!1}async reconnect(){return e(this,Nr,"m",Zr).call(this),e(this,Nr,"m",na).call(this),this.connectionManager?.reconnect()}static async Connect(){const e=new Pr;return await e.connect(),e}static get ReconnectOnDisconnection(){return e(this,Pr,"f",Xr)}static set ReconnectOnDisconnection(e){ya.assertTypeWithError(e,"boolean"),t(this,Pr,e,"f",Xr)}get reconnectOnDisconnection(){return e(this,Yr,"f")}set reconnectOnDisconnection(e){ya.assertTypeWithError(e,"boolean"),t(this,Yr,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,Nr,"m",Jr).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,Gr,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"notConnected":case"connecting":case"disconnecting":return e(this,Gr,"f").status;default:return"notConnected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,aa,"f").information}get batteryLevel(){return e(this,oa,"f")}get id(){return this._informationManager.id}get isCharging(){return this._informationManager.isCharging}get batteryCurrent(){return this._informationManager.batteryCurrent}get getBatteryCurrent(){return this._informationManager.getBatteryCurrent}get name(){return this._informationManager.name}get setName(){return this._informationManager.setName}get type(){return this._informationManager.type}get setType(){return this._informationManager.setType}get isInsole(){return this._informationManager.isInsole}get insoleSide(){return this._informationManager.insoleSide}get mtu(){return this._informationManager.mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return ft.filter((e=>this.sensorTypes.includes(e)))}get sensorConfiguration(){return e(this,ha,"f").configuration}async setSensorConfiguration(t,s){await e(this,ha,"f").setConfiguration(t,s)}async clearSensorConfiguration(){return e(this,ha,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return e(this,Pr,"f",la)}static set ClearSensorConfigurationOnLeave(e){ya.assertTypeWithError(e,"boolean"),t(this,Pr,e,"f",la)}get clearSensorConfigurationOnLeave(){return e(this,ga,"f")}set clearSensorConfigurationOnLeave(e){ya.assertTypeWithError(e,"boolean"),t(this,ga,e,"f")}get numberOfPressureSensors(){return e(this,ua,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){e(this,ua,"f").pressureSensorDataManager.resetRange()}async triggerVibration(t,s){e(this,fa,"f").triggerVibration(t,s)}get maxFileLength(){return e(this,da,"f").maxLength}async sendFile(t,s){const i=this.waitForEvent("fileTransferComplete");e(this,da,"f").send(t,s),await i}async receiveFile(t){const s=this.waitForEvent("fileTransferComplete");e(this,da,"f").receive(t),await s}get fileTransferStatus(){return e(this,da,"f").status}cancelFileTransfer(){e(this,da,"f").cancel()}get tfliteName(){return e(this,ma,"f").name}get setTfliteName(){return e(this,ma,"f").setName}get tfliteTask(){return e(this,ma,"f").task}get setTfliteTask(){return e(this,ma,"f").setTask}get tfliteSampleRate(){return e(this,ma,"f").sampleRate}get setTfliteSampleRate(){return e(this,ma,"f").setSampleRate}get tfliteSensorTypes(){return e(this,ma,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>ps.includes(e)))}get setTfliteSensorTypes(){return e(this,ma,"f").setSensorTypes}get tfliteIsReady(){return e(this,ma,"f").isReady}get tfliteInferencingEnabled(){return e(this,ma,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return e(this,ma,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return e(this,ma,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return e(this,ma,"f").captureDelay}get setTfliteCaptureDelay(){return e(this,ma,"f").setCaptureDelay}get tfliteThreshold(){return e(this,ma,"f").threshold}get setTfliteThreshold(){return e(this,ma,"f").setThreshold}get uploadFirmware(){return e(this,pa,"f").uploadFirmware}async reset(){return await e(this,pa,"f").reset(),e(this,Gr,"f").disconnect()}get firmwareStatus(){return e(this,pa,"f").status}get getFirmwareImages(){return e(this,pa,"f").getImages}get firmwareImages(){return e(this,pa,"f").images}get eraseFirmwareImage(){return e(this,pa,"f").eraseImage}get confirmFirmwareImage(){return e(this,pa,"f").confirmImage}get testFirmwareImage(){return e(this,pa,"f").testImage}}Pr=Ea,zr=new WeakMap,Gr=new WeakMap,Hr=new WeakMap,Yr=new WeakMap,ea=new WeakMap,aa=new WeakMap,oa=new WeakMap,ha=new WeakMap,ga=new WeakMap,ua=new WeakMap,fa=new WeakMap,da=new WeakMap,ma=new WeakMap,pa=new WeakMap,Nr=new WeakSet,Vr=function(){return new kn},jr=function(){return e(this,zr,"f").dispatchEvent},qr=async function(t,s){await(e(this,Gr,"f")?.sendTxMessages(t,s))},Jr=function(){ya.assertWithError(this.isConnected,"notConnected")},Qr=function(){return Sa.every((e=>this.latestConnectionMessage.has(e)))},Kr=function(){const t=Sa.map((e=>({type:e})));e(this,Nr,"m",qr).call(this,t)},Zr=function(){ya.assertWithError(this.canReconnect,"cannot reconnect to device")},ta=function(s){ya.log({connectionStatus:s}),"notConnected"==s?this.canReconnect&&this.reconnectOnDisconnection&&(ya.log("starting reconnect interval..."),t(this,ea,setInterval((()=>{ya.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,ea,"f")&&(ya.log("clearing reconnect interval"),clearInterval(e(this,ea,"f")),t(this,ea,void 0,"f")),e(this,Nr,"m",ia).call(this),"connected"!=s||e(this,Hr,"f")||e(this,Nr,"m",Kr).call(this),wa.OnDeviceConnectionStatusUpdated(this,s)},sa=function(t=!1){e(this,Nr,"a",jr).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,Nr,"a",jr).call(this,this.connectionStatus,{}),t&&e(this,Nr,"a",jr).call(this,"isConnected",{isConnected:this.isConnected})},ia=function(){switch(t(this,Hr,Boolean(this.connectionManager?.isConnected)&&e(this,Nr,"a",Qr)&&this._informationManager.isCurrentTimeSet,"f"),this.connectionStatus){case"connected":e(this,Hr,"f")&&e(this,Nr,"m",sa).call(this,!0);break;case"notConnected":e(this,Nr,"m",sa).call(this,!0);break;default:e(this,Nr,"m",sa).call(this,!1)}},na=function(){this.latestConnectionMessage.clear(),this._informationManager.clear(),e(this,aa,"f").clear()},ra=function(t,s){if(ya.log({messageType:t,dataView:s}),"batteryLevel"===t){const t=s.getUint8(0);ya.log("received battery level",{batteryLevel:t}),e(this,Nr,"m",ca).call(this,t)}else if(_e.includes(t))e(this,da,"f").parseMessage(t,s);else if(fs.includes(t))e(this,ma,"f").parseMessage(t,s);else if(dt.includes(t))e(this,ua,"f").parseMessage(t,s);else if(mr.includes(t))e(this,pa,"f").parseMessage(t,s);else if(Ms.includes(t))e(this,aa,"f").parseMessage(t,s);else if(Ks.includes(t))this._informationManager.parseMessage(t,s);else{if(!Lt.includes(t))throw Error(`uncaught messageType ${t}`);e(this,ha,"f").parseMessage(t,s)}this.latestConnectionMessage.set(t,s),e(this,Nr,"a",jr).call(this,"connectionMessage",{messageType:t,dataView:s}),!this.isConnected&&e(this,Nr,"a",Qr)&&e(this,Nr,"m",ia).call(this)},ca=function(s){ya.assertTypeWithError(s,"number"),e(this,oa,"f")!=s?(t(this,oa,s,"f"),ya.log({updatedBatteryLevel:e(this,oa,"f")}),e(this,Nr,"a",jr).call(this,"batteryLevel",{batteryLevel:e(this,oa,"f")})):ya.log(`duplicate batteryLevel assignment ${s}`)},va=function(t){return e(this,Gr,"f").sendSmpMessage(t)},Xr={value:!1},la={value:!0};var Ca,Ma,Da,ka,Ta,Wa=Ea;const _a=k("DevicePairPressureSensorDataManager",{log:!0});class Ia{constructor(){Ca.add(this),Ma.set(this,{}),Da.set(this,new Ge)}resetPressureRange(){e(this,Da,"f").reset()}onDevicePressureData(t){const{pressure:s}=t.message,i=t.target.insoleSide;if(_a.log({pressure:s,insoleSide:i}),e(this,Ma,"f")[i]=s,e(this,Ca,"a",ka))return e(this,Ca,"m",Ta).call(this);_a.log("doesn't have all pressure data yet...")}}var Fa;Ma=new WeakMap,Da=new WeakMap,Ca=new WeakSet,ka=function(){return Hs.every((t=>t in e(this,Ma,"f")))},Ta=function(){const t={rawSum:0,normalizedSum:0};return Hs.forEach((s=>{t.rawSum+=e(this,Ma,"f")[s].scaledSum,t.normalizedSum+=e(this,Ma,"f")[s].normalizedSum})),t.normalizedSum>0&&(t.center={x:0,y:0},Hs.forEach((s=>{const i=e(this,Ma,"f")[s],n=i.normalizedSum/t.normalizedSum;n>0&&(t.center.y+=i.normalizedCenter.y*n,"right"==s&&(t.center.x=n))})),t.normalizedCenter=e(this,Da,"f").updateAndGetNormalization(t.center)),_a.log({devicePairPressure:t}),t};const Ua=k("DevicePairSensorDataManager",{log:!0}),La=["pressure","sensorData"];class Ra{constructor(){Fa.set(this,{}),this.pressureSensorDataManager=new Ia}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(t){const{timestamp:s,sensorType:i}=t.message;let n;if(Ua.log({sensorType:i,timestamp:s,event:t}),e(this,Fa,"f")[i]||(e(this,Fa,"f")[i]={}),e(this,Fa,"f")[i][t.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(t);else Ua.log(`uncaught sensorType "${i}"`);if(n){const t=Object.assign({},e(this,Fa,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:t,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:t,[i]:n})}else Ua.log("no value received")}}var xa,Aa,Oa,$a,Ba,Na,Pa,Va,za,ja,Ga,qa,Ha,Ja,Qa,Ka;Fa=new WeakMap;const Za=k("DevicePair",{log:!0});function Xa(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const Ya=["isConnected",...La,...ba.map((e=>Xa(e)))];class eo{constructor(){xa.add(this),Oa.set(this,new _(this,Ya)),Ba.set(this,void 0),Na.set(this,void 0),ja.set(this,{isConnected:e(this,xa,"m",qa).bind(this),sensorData:e(this,xa,"m",Qa).bind(this),getType:e(this,xa,"m",Ha).bind(this)}),Ja.set(this,new Ra),e(this,Ja,"f").eventDispatcher=e(this,Oa,"f")}get sides(){return Hs}get addEventListener(){return e(this,Oa,"f").addEventListener}get removeEventListener(){return e(this,Oa,"f").removeEventListener}get waitForEvent(){return e(this,Oa,"f").waitForEvent}get left(){return e(this,Ba,"f")}get right(){return e(this,Na,"f")}get isConnected(){return Hs.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return Hs.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(s){if(!s.isInsole)return void Za.warn("device is not an insole");const i=s.insoleSide,n=this[i];if(s!=n){switch(n&&e(this,xa,"m",Va).call(this,n),e(this,xa,"m",Pa).call(this,s),i){case"left":t(this,Ba,s,"f");break;case"right":t(this,Na,s,"f")}return Za.log(`assigned ${i} insole`,s),this.resetPressureRange(),e(this,xa,"a",$a).call(this,"isConnected",{isConnected:this.isConnected}),e(this,xa,"a",$a).call(this,"deviceIsConnected",{device:s,isConnected:s.isConnected,side:i}),n}Za.log("device already assigned")}setSensorConfiguration(e){Hs.forEach((t=>{this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){e(this,Ja,"f").resetPressureRange()}async triggerVibration(e,t){const s=Hs.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return e(this,Aa,"f",Ka)}}Aa=eo,Oa=new WeakMap,Ba=new WeakMap,Na=new WeakMap,ja=new WeakMap,Ja=new WeakMap,xa=new WeakSet,$a=function(){return e(this,Oa,"f").dispatchEvent},Pa=function(t){Qi(t,e(this,ja,"f")),ba.forEach((s=>{t.addEventListener(s,e(this,xa,"m",Ga).bind(this))}))},Va=function(t){Ki(t,e(this,ja,"f")),ba.forEach((s=>{t.removeEventListener(s,e(this,xa,"m",Ga).bind(this))}))},za=function(t){const s=Hs.some((s=>this[s]==t&&(Za.log(`removing ${s} insole`,t),Ki(t,e(this,ja,"f")),delete this[s],!0)));return s&&e(this,xa,"a",$a).call(this,"isConnected",{isConnected:this.isConnected}),s},Ga=function(t){const{type:s,target:i,message:n}=t;e(this,xa,"a",$a).call(this,Xa(s),{...n,device:i,side:i.insoleSide})},qa=function(t){e(this,xa,"a",$a).call(this,"isConnected",{isConnected:this.isConnected})},Ha=function(t){const{target:s}=t;if(this[s.insoleSide]==s)return;e(this,xa,"m",za).call(this,s)&&this.assignInsole(s)},Qa=function(t){this.isConnected&&e(this,Ja,"f").onDeviceSensorData(t)},Ka={value:new Aa},wa.AddEventListener("deviceConnected",(t=>{const{device:s}=t.message;s.isInsole&&e(Aa,Aa,"f",Ka).assignInsole(s)}));const to=k("ServerUtils",{log:!1}),so=["ping","pong","isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function io(e,...t){to.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=z(...t.data),i=s.byteLength;to.assertEnumWithError(t.type,e);return z(e.indexOf(t.type),Uint16Array.from([i]),s)}));return to.log("messageBuffers",...s),z(...s)}function no(...e){return to.log("createServerMessage",...e),io(so,...e)}function ro(...e){return to.log("createClientDeviceMessage",...e),io(qi,...e)}no("ping"),no("pong"),no("isScanningAvailable"),no("isScanning"),no("startScan"),no("stopScan");const ao=no("discoveredDevices");var oo,co,ho,lo,go;const uo=k("WebSocketClientConnectionManager",{log:!0}),fo=[...Ms,"batteryLevel"];class mo extends Hi{constructor(){super(...arguments),oo.add(this),co.set(this,void 0),ho.set(this,!1)}static get isSupported(){return i}static get type(){return"webSocketClient"}get bluetoothId(){return e(this,co,"f")}set bluetoothId(s){uo.assertTypeWithError(s,"string"),e(this,co,"f")!=s?t(this,co,s,"f"):uo.log("redundant bluetoothId assignment")}get isConnected(){return e(this,ho,"f")}set isConnected(s){uo.assertTypeWithError(s,"boolean"),e(this,ho,"f")!=s?(t(this,ho,s,"f"),this.status=e(this,ho,"f")?"connected":"notConnected",this.isConnected&&e(this,oo,"m",lo).call(this)):uo.log("redundant newIsConnected assignment",s)}async connect(){await super.connect(),this.sendWebSocketConnectMessage()}async disconnect(){await super.disconnect(),this.sendWebSocketDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),uo.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendWebSocketMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendWebSocketMessage({type:"tx",data:e})}onWebSocketMessage(t){uo.log({dataView:t}),ht(t,ba,e(this,oo,"m",go).bind(this),null,!0)}}var po,vo,wo,yo,bo,So,Eo,Co,Mo,Do,ko,To,Wo,_o,Io,Fo,Uo,Lo,Ro,xo,Ao;co=new WeakMap,ho=new WeakMap,oo=new WeakSet,lo=function(){this.sendWebSocketMessage(...fo)},go=function(e,t){let s=0;switch(e){case"isConnected":const i=Boolean(t.getUint8(s++));uo.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}};const Oo=k("WebSocketClient",{log:!0}),$o=["notConnected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class Bo{constructor(){po.add(this),vo.set(this,{}),wo.set(this,new _(this,$o)),this._reconnectOnDisconnection=this.baseConstructor.ReconnectOnDisconnection,yo.set(this,"notConnected"),this.pingTimer=new R(e(this,po,"m",So).bind(this),3e7),Co.set(this,!1),To.set(this,!1),Lo.set(this,{})}get baseConstructor(){return this.constructor}get devices(){return e(this,vo,"f")}get addEventListener(){return e(this,wo,"f").addEventListener}get dispatchEvent(){return e(this,wo,"f").dispatchEvent}get removeEventListener(){return e(this,wo,"f").removeEventListener}get waitForEvent(){return e(this,wo,"f").waitForEvent}assertConnection(){Oo.assertWithError(this.isConnected,"notConnected")}assertDisconnection(){Oo.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return this._reconnectOnDisconnection}static set ReconnectOnDisconnection(e){Oo.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}get reconnectOnDisconnection(){return this._reconnectOnDisconnection}set reconnectOnDisconnection(e){Oo.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}sendServerMessage(...e){this.sendMessage(no(...e))}get _connectionStatus(){return e(this,yo,"f")}set _connectionStatus(e){switch(Oo.assertTypeWithError(e,"string"),Oo.log({newConnectionStatus:e}),t(this,yo,e,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),e){case"connected":case"notConnected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):(t(this,po,!1,"a",Do),t(this,po,!1,"a",_o))}}get connectionStatus(){return this._connectionStatus}parseMessage(t){Oo.log("parseMessage",{dataView:t}),ht(t,so,e(this,po,"m",bo).bind(this),null,!0)}get isScanningAvailable(){return e(this,po,"a",Mo)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return e(this,po,"a",Wo)}startScan(){e(this,po,"m",Uo).call(this),this.sendServerMessage("startScan")}stopScan(){e(this,po,"m",Fo).call(this),this.sendServerMessage("stopScan")}toggleScan(){e(this,po,"m",ko).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return e(this,Lo,"f")}onDiscoveredDevice(t){Oo.log({discoveredDevice:t}),e(this,Lo,"f")[t.bluetoothId]=t,this.dispatchEvent("discoveredDevice",{discoveredDevice:t})}requestDiscoveredDevices(){this.sendMessage(ao)}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(t){this.assertConnection(),Oo.assertTypeWithError(t,"string");const s=e(this,po,"m",xo).call(this,t);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendMessage(this.createConnectToDeviceMessage(e))}createConnectToDeviceMessage(e){return no({type:"connectToDevice",data:e})}onConnectedBluetoothDeviceIds(t){Oo.log({bluetoothIds:t}),t.forEach((t=>{e(this,po,"m",xo).call(this,t).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),Oo.assertTypeWithError(e,"string");const t=this.devices[e];return Oo.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(t){this.sendMessage(e(this,po,"m",Ao).call(this,t))}sendDeviceMessage(e,...t){this.sendMessage(this.createDeviceMessage(e,...t))}createDeviceMessage(e,...t){return no({type:"deviceMessage",data:[e,ro(...t)]})}}var No,Po,Vo,zo,jo,Go,qo;vo=new WeakMap,wo=new WeakMap,yo=new WeakMap,Co=new WeakMap,To=new WeakMap,Lo=new WeakMap,po=new WeakSet,bo=function(s,i){let n=0;switch(s){case"ping":e(this,po,"m",Eo).call(this);break;case"pong":break;case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));Oo.log({isScanningAvailable:e}),t(this,po,e,"a",Do)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));Oo.log({isScanning:e}),t(this,po,e,"a",_o)}break;case"discoveredDevice":{const{string:e}=ct(i,n);Oo.log({discoveredDeviceString:e});const t=JSON.parse(e);Oo.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:t}=ct(i,n);e(this,po,"m",Ro).call(this,t)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=ct(i,n);Oo.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);Oo.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:t,byteOffset:s}=ct(i,n);n=s;const r=e(this,vo,"f")[t];Oo.assertWithError(r,`no device found for id ${t}`);const a=r.connectionManager,o=G(i,n);a.onWebSocketMessage(o)}break;default:Oo.error(`uncaught messageType "${s}"`)}},So=function(){this.sendServerMessage("ping")},Eo=function(){this.sendServerMessage("pong")},Mo=function(){return e(this,Co,"f")},Do=function(s){Oo.assertTypeWithError(s,"boolean"),t(this,Co,s,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&e(this,po,"m",Io).call(this)},ko=function(){this.assertConnection(),Oo.assertWithError(this.isScanningAvailable,"scanning is not available")},Wo=function(){return e(this,To,"f")},_o=function(e){Oo.assertTypeWithError(e,"boolean"),t(this,To,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},Io=function(){this.sendServerMessage("isScanning")},Fo=function(){Oo.assertWithError(this.isScanning,"is not scanning")},Uo=function(){Oo.assertWithError(!this.isScanning,"is already scanning")},Ro=function(t){Oo.log({expiredBluetoothDeviceId:t});const s=e(this,Lo,"f")[t];s?(Oo.log({expiredDiscoveredDevice:s}),delete e(this,Lo,"f")[t],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):Oo.warn(`no discoveredDevice found with id "${t}"`)},xo=function(t){let s=e(this,vo,"f")[t];return s||(s=this.createDevice(t),e(this,vo,"f")[t]=s),s},Ao=function(e){return no({type:"disconnectFromDevice",data:e})},Bo._reconnectOnDisconnection=!0;const Ho=k("WebSocketClient",{log:!0});class Jo extends Bo{constructor(){super(...arguments),No.add(this),Po.set(this,void 0),Vo.set(this,{open:e(this,No,"m",zo).bind(this),message:e(this,No,"m",jo).bind(this),close:e(this,No,"m",Go).bind(this),error:e(this,No,"m",qo).bind(this)})}get webSocket(){return e(this,Po,"f")}set webSocket(s){e(this,Po,"f")!=s?(Ho.log("assigning webSocket",s),e(this,Po,"f")&&Ki(e(this,Po,"f"),e(this,Vo,"f")),Qi(s,e(this,Vo,"f")),t(this,Po,s,"f"),Ho.log("assigned webSocket")):Ho.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.webSocket=new WebSocket(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(t){this.assertConnection(),e(this,Po,"f").send(t)}createDevice(e){const t=new Wa,s=new mo;return s.bluetoothId=e,s.sendWebSocketMessage=this.sendDeviceMessage.bind(this,e),s.sendWebSocketConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendWebSocketDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}}Po=new WeakMap,Vo=new WeakMap,No=new WeakSet,zo=function(e){Ho.log("webSocket.open",e),this.pingTimer.start(),this._connectionStatus="connected"},jo=async function(e){Ho.log("webSocket.message",e),this.pingTimer.restart();const t=await e.data.arrayBuffer(),s=new DataView(t);this.parseMessage(s)},Go=function(e){Ho.log("webSocket.close",e),this._connectionStatus="notConnected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),this.pingTimer.stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},qo=function(e){Ho.error("webSocket.error",e.message)};export{ft as ContinuousSensorTypes,Qe as DefaultNumberOfPressureSensors,Wa as Device,wa as DeviceManager,eo as DevicePair,qs as DeviceTypes,w as Environment,Le as FileTransferDirections,Ie as FileTypes,Qs as MaxNameLength,yi as MaxNumberOfVibrationWaveformEffectSegments,Ci as MaxNumberOfVibrationWaveformSegments,Ft as MaxSensorRate,Si as MaxVibrationWaveformEffectSegmentDelay,Ei as MaxVibrationWaveformEffectSegmentLoopCount,Mi as MaxVibrationWaveformEffectSequenceLoopCount,bi as MaxVibrationWaveformSegmentDuration,Js as MinNameLength,Ut as SensorRateStep,ut as SensorTypes,ps as TfliteSensorTypes,ms as TfliteTasks,vi as VibrationLocations,wi as VibrationTypes,Ys as VibrationWaveformEffects,Jo as WebSocketClient,W as setAllConsoleLevelFlags,T as setConsoleLevelFlagsForType};
//# sourceMappingURL=brilliantsole.module.min.js.map
