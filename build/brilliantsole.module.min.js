/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function t(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const s=!1,i="undefined"!=typeof window&&void 0!==window?.document,n="undefined"!=typeof process&&null!=process?.versions?.node,r=i&&navigator.userAgent||"";let a=!1;i?a=Boolean(navigator.bluetooth):n&&(a=!0);const o=i&&/Bluefy/i.test(r),c=i&&/WebBLE/i.test(r),h=i&&/Android/i.test(r),l=i&&/Safari/i.test(r)&&!/Chrome/i.test(r),g=i&&/iPad|iPhone|iPod/i.test(r),f=i&&/Macintosh/i.test(r),u=!i&&!n&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var d,m,p,v,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return a},isIOS:g,isInBluefy:o,isInBrowser:i,isInDev:s,isInLensStudio:u,isInNode:n,isInProduction:!0,isInWebBLE:c,isMac:f,isSafari:l});if(u){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(v={}).log=e,v.warn=e.bind(v,"WARNING"),v.error=e.bind(v,"ERROR")}else v=console;if(!v.assert){const e=(e,...t)=>{e||v.warn(...t)};v.assert=e}if(!v.table){const e=(...e)=>{v.log(...e)};v.table=e}function y(){}const b=v.log.bind(v),S=v.warn.bind(v),E=v.error.bind(v),C=v.table.bind(v),M=v.assert.bind(v);class D{constructor(t){if(p.set(this,{log:s,warn:s,assert:!0,error:!0,table:!0}),e(d,d,"f",m)[t])throw new Error(`"${t}" console already exists`);e(d,d,"f",m)[t]=this}setLevelFlags(t){Object.assign(e(this,p,"f"),t)}static setLevelFlagsForType(t,s){if(!e(this,d,"f",m)[t])throw new Error(`no console found with type "${t}"`);e(this,d,"f",m)[t].setLevelFlags(s)}static setAllLevelFlags(t){for(const s in e(this,d,"f",m))e(this,d,"f",m)[s].setLevelFlags(t)}static create(t,s){return e(this,d,"f",m)[t]||new d(t)}get log(){return e(this,p,"f").log?b:y}get warn(){return e(this,p,"f").warn?S:y}get error(){return e(this,p,"f").error?E:y}get assert(){return e(this,p,"f").assert?M:y}get table(){return e(this,p,"f").table?C:y}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function k(e,t){return D.create(e,t)}function T(e,t){D.setLevelFlagsForType(e,t)}function _(e){D.setAllLevelFlags(e)}d=D,p=new WeakMap,m={value:{}};const W=k("EventDispatcher",{log:!1});class I{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.removeEventListeners=this.removeEventListeners.bind(this),this.removeAllEventListeners=this.removeAllEventListeners.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}updateEventListeners(e){this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((t=>(t.shouldRemove&&W.log(`removing "${e}" eventListener`,t),!t.shouldRemove))))}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[],W.log(`creating "${e}" listeners array`,this.listeners[e]));this.listeners[e].find((e=>e.listener==t&&e.once==s.once))?W.log("already added listener"):(W.log(`adding "${e}" listener`,t,s),this.listeners[e].push({listener:t,once:s.once}),W.log(`currently have ${this.listeners[e].length} "${e}" listeners`))}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(W.log(`removing "${e}" listener...`,t),this.listeners[e].forEach((s=>{s.listener===t&&(W.log(`flagging "${e}" listener`,t),s.shouldRemove=!0)})),this.updateEventListeners(e))}removeEventListeners(e){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(W.log(`removing "${e}" listeners...`),this.listeners[e]=[])}removeAllEventListeners(){W.log("removing listeners..."),this.listeners={}}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e].forEach((s=>{s.shouldRemove||(W.log(`dispatching "${e}" listener`,s),s.listener({type:e,target:this.target,message:t}),s.once&&(W.log(`flagging "${e}" listener`,s),s.shouldRemove=!0))})),this.updateEventListeners(e))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var L,U,F;const R=k("Timer",{log:!1});class x{get callback(){return e(this,L,"f")}set callback(e){R.assertTypeWithError(e,"function"),R.log({newCallback:e}),t(this,L,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,U,"f")}set interval(e){R.assertTypeWithError(e,"number"),R.assertWithError(e>0,"interval must be above 0"),R.log({newInterval:e}),t(this,U,e,"f"),this.isRunning&&this.restart()}constructor(e,t){L.set(this,void 0),U.set(this,void 0),F.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,F,"f")}start(){this.isRunning?R.log("interval already running"):(R.log("starting interval"),t(this,F,setInterval(e(this,L,"f"),e(this,U,"f")),"f"))}stop(){this.isRunning?(R.log("stopping interval"),clearInterval(e(this,F,"f")),t(this,F,void 0,"f")):R.log("interval already not running")}restart(){this.stop(),this.start()}}function A(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}L=new WeakMap,U=new WeakMap,F=new WeakMap,k("checksum",{log:!0});const O=new Uint32Array(256);for(let e=0;e<256;++e)O[e]=A(e);function $(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(O[i^n]^s>>>8)>>>0}return s}var B,N;B="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,N="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const P=new B,V=new N,z=k("ArrayBufferUtils",{log:!1});function j(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return q(e)}if(e instanceof Array){return j(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return q(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function q(e){const t=P.encode(e);return j(t.byteLength,t)}function G(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),z.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function H(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}function J(e,{include:t,exclude:s}={}){const i=e=>{const i=t=>"string"==typeof t?e===t:t.test(e);return t?t.some(i):!s||!s.some(i)};for(const[t,s]of(e=>{const t=new Set;do{for(const s of Reflect.ownKeys(e))t.add([e,s])}while((e=Reflect.getPrototypeOf(e))&&e!==Object.prototype);return t})(e.constructor.prototype)){if("constructor"===s||!i(s))continue;const n=Reflect.getOwnPropertyDescriptor(t,s);n&&"function"==typeof n.value&&(e[s]=e[s].bind(e))}return e}var Q,K,Z,X,Y,ee,te,se,ie,ne,re,ae,oe,ce,he,le,ge,fe,ue,de,me,pe,ve,we,ye,be,Se,Ee,Ce,Me,De,ke,Te,_e,We,Ie,Le,Ue;const Fe=k("FileTransferManager",{log:!0}),Re=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock","fileBytesTransferred"],xe=["tflite"],Ae=["idle","sending","receiving"],Oe=["startSend","startReceive","cancel"],$e=["sending","receiving"],Be=[...Re,"fileTransferProgress","fileTransferComplete","fileReceived"];class Ne{constructor(){Q.add(this),ie.set(this,K.MaxLength),oe.set(this,void 0),ge.set(this,0),me.set(this,0),be.set(this,"idle"),De.set(this,[]),Te.set(this,void 0),_e.set(this,0),Ue.set(this,!1),J(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return e(this,K,"f",se)}get maxLength(){return e(this,ie,"f")}get type(){return e(this,oe,"f")}get length(){return e(this,ge,"f")}get checksum(){return e(this,me,"f")}get status(){return e(this,be,"f")}parseMessage(t,s){switch(Fe.log({messageType:t}),t){case"maxFileLength":e(this,Q,"m",ne).call(this,s);break;case"getFileType":case"setFileType":e(this,Q,"m",ce).call(this,s);break;case"getFileLength":case"setFileLength":e(this,Q,"m",fe).call(this,s);break;case"getFileChecksum":case"setFileChecksum":e(this,Q,"m",pe).call(this,s);break;case"fileTransferStatus":e(this,Q,"m",Se).call(this,s);break;case"getFileBlock":e(this,Q,"m",ke).call(this,s);break;case"fileBytesTransferred":e(this,Q,"m",Le).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}async send(t,s){e(this,Q,"m",Ce).call(this),e(this,Q,"m",X).call(this,t);const i=await H(s),n=[];n.push(e(this,Q,"m",le).call(this,t,!1));const r=i.byteLength;n.push(e(this,Q,"m",de).call(this,r,!1));const a=$(i);n.push(e(this,Q,"m",we).call(this,a,!1)),n.push(e(this,Q,"m",ye).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await e(this,Q,"m",We).call(this,i)}async receive(t){e(this,Q,"m",Ce).call(this),e(this,Q,"m",X).call(this,t),await e(this,Q,"m",le).call(this,t),await e(this,Q,"m",ye).call(this,"startReceive")}async cancel(){e(this,Q,"m",Me).call(this),await e(this,Q,"m",ye).call(this,"cancel")}get isServerSide(){return e(this,Ue,"f")}set isServerSide(s){e(this,Ue,"f")!=s?(Fe.log({newIsServerSide:s}),t(this,Ue,s,"f")):Fe.log("redundant isServerSide assignment")}}K=Ne,ie=new WeakMap,oe=new WeakMap,ge=new WeakMap,me=new WeakMap,be=new WeakMap,De=new WeakMap,Te=new WeakMap,_e=new WeakMap,Ue=new WeakMap,Q=new WeakSet,Z=function(){return this.eventDispatcher.dispatchEvent},X=function(e){Fe.assertEnumWithError(e,xe)},Y=function(e){Fe.assertWithError(e in xe,`invalid typeEnum ${e}`)},ee=function(e){Fe.assertWithError(e in Ae,`invalid statusEnum ${e}`)},te=function(e){Fe.assertEnumWithError(e,Oe)},ne=function(t){Fe.log("parseFileMaxLength",t);const s=t.getUint32(0,!0);Fe.log(`maxLength: ${s/1024}kB`),e(this,Q,"m",re).call(this,s)},re=function(s){Fe.log({maxLength:s}),t(this,ie,s,"f"),e(this,Q,"a",Z).call(this,"maxFileLength",{maxFileLength:s})},ae=function(e){Fe.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},ce=function(t){Fe.log("parseFileType",t);const s=t.getUint8(0);e(this,Q,"m",Y).call(this,s);const i=xe[s];e(this,Q,"m",he).call(this,i)},he=function(s){Fe.log({fileTransferType:s}),t(this,oe,s,"f"),e(this,Q,"a",Z).call(this,"getFileType",{fileType:s})},le=async function(t,s){if(e(this,Q,"m",X).call(this,t),this.type==t)return void Fe.log(`redundant type assignment ${t}`);const i=this.waitForEvent("getFileType"),n=xe.indexOf(t);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},fe=function(t){Fe.log("parseFileLength",t);const s=t.getUint32(0,!0);e(this,Q,"m",ue).call(this,s)},ue=function(s){Fe.log(`length: ${s/1024}kB`),t(this,ge,s,"f"),e(this,Q,"a",Z).call(this,"getFileLength",{fileLength:s})},de=async function(t,s){if(Fe.assertTypeWithError(t,"number"),e(this,Q,"m",ae).call(this,t),this.length==t)return void Fe.log(`redundant length assignment ${t}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,t,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},pe=function(t){Fe.log("checksum",t);const s=t.getUint32(0,!0);e(this,Q,"m",ve).call(this,s)},ve=function(s){Fe.log({checksum:s}),t(this,me,s,"f"),e(this,Q,"a",Z).call(this,"getFileChecksum",{fileChecksum:s})},we=async function(e,t){if(Fe.assertTypeWithError(e,"number"),this.checksum==e)return void Fe.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},ye=async function(t,s){e(this,Q,"m",te).call(this,t);const i=this.waitForEvent("fileTransferStatus"),n=Oe.indexOf(t);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},Se=function(t){Fe.log("parseFileStatus",t);const s=t.getUint8(0);e(this,Q,"m",ee).call(this,s);const i=Ae[s];e(this,Q,"m",Ee).call(this,i)},Ee=function(s){Fe.log({status:s}),t(this,be,s,"f"),e(this,Q,"a",Z).call(this,"fileTransferStatus",{fileTransferStatus:s}),e(this,De,"f").length=0},Ce=function(){Fe.assertWithError("idle"==e(this,be,"f"),"status is not idle")},Me=function(){Fe.assertWithError("idle"!=e(this,be,"f"),"status is idle")},ke=async function(t){Fe.log("parseFileBlock",t),e(this,De,"f").push(t.buffer);const s=e(this,De,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/e(this,ge,"f");if(Fe.log(`received ${s} of ${e(this,ge,"f")} bytes (${100*i}%)`),e(this,Q,"a",Z).call(this,"fileTransferProgress",{progress:i}),s!=e(this,ge,"f")){const e=new DataView(new ArrayBuffer(4));if(e.setUint32(0,s,!0),this.isServerSide)return;return void await this.sendMessage([{type:"fileBytesTransferred",data:e.buffer}])}Fe.log("file transfer complete");let n,r=(new Date).toLocaleString();if("tflite"===this.type)r+=".tflite";n="undefined"!=typeof File?new File(e(this,De,"f"),r):new Blob(e(this,De,"f"));const a=$(await n.arrayBuffer());Fe.log({checksum:a}),a==e(this,me,"f")?(Fe.log("received file",n),e(this,Q,"a",Z).call(this,"getFileBlock",{fileTransferBlock:t}),e(this,Q,"a",Z).call(this,"fileTransferComplete",{direction:"receiving"}),e(this,Q,"a",Z).call(this,"fileReceived",{file:n})):Fe.error(`wrong checksum - expected ${e(this,me,"f")}, got ${a}`)},We=async function(s){return t(this,Te,s,"f"),t(this,_e,0,"f"),e(this,Q,"m",Ie).call(this)},Ie=async function(){if("sending"!=this.status)return;if(!e(this,Te,"f"))return void Fe.error("no buffer defined");const s=e(this,Te,"f");let i=e(this,_e,"f");const n=s.slice(i,i+(this.mtu-3-3));Fe.log("slicedBuffer",n);const r=1-(s.byteLength-i)/s.byteLength;Fe.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*r}%)`),e(this,Q,"a",Z).call(this,"fileTransferProgress",{progress:r}),0==n.byteLength?(Fe.log("finished sending buffer"),e(this,Q,"a",Z).call(this,"fileTransferComplete",{direction:"sending"})):(await this.sendMessage([{type:"setFileBlock",data:n}]),t(this,_e,i+n.byteLength,"f"))},Le=async function(t){Fe.log("parseBytesTransferred",t);const s=t.getUint32(0,!0);if(Fe.log({bytesTransferred:s}),"sending"==this.status)return this.isServerSide||e(this,_e,"f")==s?void e(this,Q,"m",Ie).call(this):(Fe.error(`bytesTransferred are not equal - got ${s}, expected ${e(this,_e,"f")}`),void this.cancel());Fe.error("not currently sending file")},se={value:0};const Pe=k("MathUtils",{log:!0});const Ve=65536;function ze(e,t){const s=Date.now();var i;let n=(i=s)-i%Ve+e.getUint16(t,!0);return Math.abs(s-n)>6e4&&(Pe.log("correcting timestamp delta"),n+=Ve*Math.sign(s-n)),n}var je;const qe={min:1/0,max:-1/0,span:0};class Ge{constructor(){je.set(this,Object.assign({},qe))}reset(){Object.assign(e(this,je,"f"),qe)}update(t){e(this,je,"f").min=Math.min(t,e(this,je,"f").min),e(this,je,"f").max=Math.max(t,e(this,je,"f").max),e(this,je,"f").span=e(this,je,"f").max-e(this,je,"f").min}getNormalization(t,s){let i=function(e,t,s,i){return null==i&&(i=s-t),(e-t)/i}(t,e(this,je,"f").min,e(this,je,"f").max,e(this,je,"f").span);return s&&(i*=e(this,je,"f").span),i||0}updateAndGetNormalization(e,t){return this.update(e),this.getNormalization(e,t)}}var He,Je,Qe,Ke;je=new WeakMap;class Ze{constructor(){He.set(this,{x:new Ge,y:new Ge})}reset(){e(this,He,"f").x.reset(),e(this,He,"f").y.reset()}update(t){e(this,He,"f").x.update(t.x),e(this,He,"f").y.update(t.y)}getNormalization(t){return{x:e(this,He,"f").x.getNormalization(t.x,!1),y:e(this,He,"f").y.getNormalization(t.y,!1)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}He=new WeakMap;const Xe=k("PressureDataManager",{log:!0}),Ye=["pressure"],et=Ye,tt=8;class st{constructor(){Je.set(this,[]),Qe.set(this,void 0),Ke.set(this,new Ze)}get positions(){return e(this,Je,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const s=[];for(let t=0,i=0;i<e.byteLength;t++,i+=2)s.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;Xe.log({positions:s}),t(this,Je,s,"f"),t(this,Qe,(i=this.numberOfSensors,n=()=>new Ge,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){e(this,Qe,"f").forEach((e=>e.reset())),e(this,Ke,"f").reset()}parseData(t,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,r=0;r<t.byteLength;n++,r+=2){const a=t.getUint16(r,!0),o=a*s,c=e(this,Qe,"f")[n].updateAndGetNormalization(o,!0),h=this.positions[n];i.sensors[n]={rawValue:a,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&i.normalizedSum>.001&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=e(this,Ke,"f").updateAndGetNormalization(i.center)),Xe.log({pressure:i}),i}}Je=new WeakMap,Qe=new WeakMap,Ke=new WeakMap;const it=k("MotionSensorDataManager",{log:!0}),nt=["still","walking","running","bicycle","vehicle","tilting"],rt=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class at{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const r={x:s,y:i,z:n};return it.log({vector:r}),r}parseQuaternion(e,t){let[s,i,n,r]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const a={x:s,y:i,z:n,w:r};return it.log({quaternion:a}),a}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1,s+=360;const r={heading:s,pitch:i,roll:n};return it.log({euler:r}),r}parseStepCounter(e){it.log("parseStepCounter",e);const t=e.getUint32(0,!0);return it.log({stepCount:t}),t}parseActivity(e){it.log("parseActivity",e);const t={},s=e.getUint8(0);return it.log("activityBitfield",s.toString(2)),nt.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),it.log("activity",t),t}parseDeviceOrientation(e){it.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=rt[t];return it.assertWithError(s,"undefined deviceOrientation"),it.log({deviceOrientation:s}),s}}var ot,ct;const ht=["barometer"],lt=ht,gt=k("BarometerSensorDataManager",{log:!0});class ft{constructor(){ot.add(this)}parseData(t,s){const i=t.getUint32(0,!0)*s,n=e(this,ot,"m",ct).call(this,i);return gt.log({pressure:i,altitude:n}),{pressure:i}}}ot=new WeakSet,ct=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const ut=k("ParseUtils",{log:!0});function dt(e,t=0){const s=e.getUint8(t++);return{string:V.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function mt(e,t,s,i,n=!1){let r=0;for(;r<e.byteLength;){const a=e.getUint8(r++);ut.assertWithError(a in t,`invalid messageTypeEnum ${a}`);const o=t[a];let c;n?(c=e.getUint16(r,!0),r+=2):c=e.getUint8(r++),ut.log({messageTypeEnum:a,messageType:o,messageLength:c,dataView:e,byteOffset:r});const h=G(e,r,c);ut.log({_dataView:h}),s(o,h,i),r+=c}}var pt;const vt=k("SensorDataManager",{log:!0}),wt=[...Ye,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...ht],yt=[...et,"acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...lt],bt=["getPressurePositions","getSensorScalars","sensorData"],St=[...bt,...wt];class Et{constructor(){this.pressureSensorDataManager=new st,this.motionSensorDataManager=new at,this.barometerSensorDataManager=new ft,pt.set(this,new Map)}static AssertValidSensorType(e){vt.assertEnumWithError(e,wt)}static AssertValidSensorTypeEnum(e){vt.assertTypeWithError(e,"number"),vt.assertWithError(e in wt,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(vt.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(t){for(let s=0;s<t.byteLength;s+=5){const i=t.getUint8(s),n=wt[i];if(!n){vt.warn(`unknown sensorType index ${i}`);continue}const r=t.getFloat32(s+1,!0);vt.log({sensorType:n,sensorScalar:r}),e(this,pt,"f").set(n,r)}}parseData(e){vt.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=ze(e,t);t+=2;mt(new DataView(e.buffer,t),wt,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(t,s,{timestamp:i}){const n=e(this,pt,"f").get(t)||1;let r=null;switch(t){case"pressure":r=this.pressureSensorDataManager.parseData(s,n);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":r=this.motionSensorDataManager.parseVector3(s,n);break;case"gameRotation":case"rotation":r=this.motionSensorDataManager.parseQuaternion(s,n);break;case"orientation":r=this.motionSensorDataManager.parseEuler(s,n);break;case"stepCounter":r=this.motionSensorDataManager.parseStepCounter(s);break;case"stepDetector":r={};break;case"activity":r=this.motionSensorDataManager.parseActivity(s);break;case"deviceOrientation":r=this.motionSensorDataManager.parseDeviceOrientation(s);break;case"barometer":r=this.barometerSensorDataManager.parseData(s,n);break;default:vt.error(`uncaught sensorType "${t}"`)}vt.assertWithError(null!=r,`no sensorData defined for sensorType "${t}"`),vt.log({sensorType:t,sensorData:r}),this.dispatchEvent(t,{sensorType:t,[t]:r,timestamp:i}),this.dispatchEvent("sensorData",{sensorType:t,[t]:r,timestamp:i})}}var Ct,Mt,Dt,kt,Tt,_t,Wt,It,Lt,Ut,Ft,Rt,xt;pt=new WeakMap;const At=k("SensorConfigurationManager",{log:!0}),Ot=65535,$t=5,Bt=["getSensorConfiguration","setSensorConfiguration"],Nt=Bt;class Pt{constructor(){Ct.add(this),kt.set(this,void 0),_t.set(this,void 0),J(this)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return e(this,_t,"f")}async setConfiguration(t,s){if(s&&(t=Object.assign({...this.zeroSensorConfiguration},t)),At.log({newSensorConfiguration:t}),e(this,Ct,"m",It).call(this,t))return void At.log("redundant sensor configuration");const i=e(this,Ct,"m",Rt).call(this,t);At.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get ZeroSensorConfiguration(){return e(this,Mt,"f",xt)}get zeroSensorConfiguration(){const e={};return wt.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(t,s){switch(At.log({messageType:t}),t){case"getSensorConfiguration":case"setSensorConfiguration":const i=e(this,Ct,"m",Lt).call(this,s);e(this,Ct,"m",Wt).call(this,i);break;default:throw Error(`uncaught messageType ${t}`)}}}var Vt,zt,jt,qt,Gt,Ht,Jt,Qt,Kt,Zt,Xt,Yt,es,ts,ss,is,ns,rs,as,os,cs,hs,ls,gs,fs,us,ds,ms,ps,vs;Mt=Pt,kt=new WeakMap,_t=new WeakMap,Ct=new WeakSet,Dt=function(){return this.eventDispatcher.dispatchEvent},Tt=function(t){At.assertWithError(e(this,kt,"f"),"must get initial sensorConfiguration");const s=e(this,kt,"f")?.includes(t);return At.assert(s,`unavailable sensor type "${t}"`),s},Wt=function(s){t(this,_t,s,"f"),At.log({updatedConfiguration:e(this,_t,"f")}),e(this,Ct,"a",Dt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},It=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},Lt=function(e){const s={};for(let t=0;t<e.byteLength;t+=3){const i=e.getUint8(t),n=wt[i];if(!n){At.warn(`unknown sensorType index ${i}`);continue}const r=e.getUint16(t+1,!0);At.log({sensorType:n,sensorRate:r}),s[n]=r}return At.log({parsedSensorConfiguration:s}),t(this,kt,Object.keys(s),"f"),s},Ut=function(e){At.assertTypeWithError(e,"number"),At.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),At.assertWithError(e<65535,`sensorRate must be 0 or greater (got ${e})`),At.assertWithError(e%5==0,"sensorRate must be multiple of 5")},Ft=function(t){e(Mt,Mt,"m",Ut).call(Mt,t)},Rt=function(t){let s=Object.keys(t);s=s.filter((t=>e(this,Ct,"m",Tt).call(this,t)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{Et.AssertValidSensorType(s);const r=wt.indexOf(s);i.setUint8(3*n,r);const a=t[s];e(this,Ct,"m",Ft).call(this,a),i.setUint16(3*n+1,a,!0)})),At.log({sensorConfigurationData:i}),i},xt={value:{}},wt.forEach((t=>{e(Mt,Mt,"f",xt)[t]=0}));const ws=k("TfliteManager",{log:!0}),ys=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],bs=ys,Ss=["classification","regression"],Es=["pressure","linearAcceleration","gyroscope","magnetometer"];class Cs{constructor(){Vt.add(this),Gt.set(this,void 0),Qt.set(this,void 0),Xt.set(this,void 0),ts.set(this,[]),ns.set(this,void 0),cs.set(this,void 0),gs.set(this,void 0),ds.set(this,void 0),J(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return e(this,Gt,"f")}async setName(e,t){if(ws.assertTypeWithError(e,"string"),this.name==e)return void ws.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=P.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return e(this,Qt,"f")}async setTask(t,s){if(e(this,Vt,"m",zt).call(this,t),this.task==t)return void ws.log(`redundant task assignment ${t}`);const i=this.waitForEvent("getTfliteTask"),n=Ss.indexOf(t);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return e(this,Xt,"f")}async setSampleRate(t,s){if(ws.assertTypeWithError(t,"number"),t-=t%5,ws.assertWithError(t>=5,`sampleRate must be multiple of 5 greater than 0 (got ${t})`),e(this,Xt,"f")==t)return void ws.log(`redundant sampleRate assignment ${t}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static AssertValidSensorType(e){Et.AssertValidSensorType(e),ws.assertWithError(Es.includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return e(this,ts,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{Cs.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>wt.indexOf(e))).sort();ws.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return e(this,ns,"f")}get captureDelay(){return e(this,cs,"f")}async setCaptureDelay(t,s){if(ws.assertTypeWithError(t,"number"),e(this,cs,"f")==t)return void ws.log(`redundant captureDelay assignment ${t}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return e(this,gs,"f")}async setThreshold(t,s){if(ws.assertTypeWithError(t,"number"),ws.assertWithError(t>=0,`threshold must be positive (got ${t})`),e(this,gs,"f")==t)return void ws.log(`redundant threshold assignment ${t}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,t,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return e(this,ds,"f")}async setInferencingEnabled(t,s=!0){if(ws.assertTypeWithError(t,"boolean"),!t&&!this.isReady)return;if(e(this,Vt,"m",os).call(this),e(this,ds,"f")==t)return void ws.log(`redundant inferencingEnabled assignment ${t}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(t)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(t,s){switch(ws.log({messageType:t}),t){case"getTfliteName":case"setTfliteName":e(this,Vt,"m",Ht).call(this,s);break;case"getTfliteTask":case"setTfliteTask":e(this,Vt,"m",Kt).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":e(this,Vt,"m",Yt).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":e(this,Vt,"m",ss).call(this,s);break;case"tfliteIsReady":e(this,Vt,"m",rs).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":e(this,Vt,"m",hs).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":e(this,Vt,"m",fs).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":e(this,Vt,"m",ms).call(this,s);break;case"tfliteInference":e(this,Vt,"m",vs).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}}var Ms,Ds,ks,Ts,_s;Gt=new WeakMap,Qt=new WeakMap,Xt=new WeakMap,ts=new WeakMap,ns=new WeakMap,cs=new WeakMap,gs=new WeakMap,ds=new WeakMap,Vt=new WeakSet,zt=function(e){ws.assertEnumWithError(e,Ss)},jt=function(e){ws.assertWithError(e in Ss,`invalid taskEnum ${e}`)},qt=function(){return this.eventDispatcher.dispatchEvent},Ht=function(t){ws.log("parseName",t);const s=V.decode(t.buffer);e(this,Vt,"m",Jt).call(this,s)},Jt=function(s){ws.log({name:s}),t(this,Gt,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteName",{tfliteName:s})},Kt=function(t){ws.log("parseTask",t);const s=t.getUint8(0);e(this,Vt,"m",jt).call(this,s);const i=Ss[s];e(this,Vt,"m",Zt).call(this,i)},Zt=function(s){ws.log({task:s}),t(this,Qt,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteTask",{tfliteTask:s})},Yt=function(t){ws.log("parseSampleRate",t);const s=t.getUint16(0,!0);e(this,Vt,"m",es).call(this,s)},es=function(s){ws.log({sampleRate:s}),t(this,Xt,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteSampleRate",{tfliteSampleRate:s})},ss=function(t){ws.log("parseSensorTypes",t);const s=[];for(let e=0;e<t.byteLength;e++){const i=t.getUint8(e),n=wt[i];n?s.push(n):ws.error(`invalid sensorTypeEnum ${i}`)}e(this,Vt,"m",is).call(this,s)},is=function(s){ws.log({sensorTypes:s}),t(this,ts,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:s})},rs=function(t){ws.log("parseIsReady",t);const s=Boolean(t.getUint8(0));e(this,Vt,"m",as).call(this,s)},as=function(s){ws.log({isReady:s}),t(this,ns,s,"f"),e(this,Vt,"a",qt).call(this,"tfliteIsReady",{tfliteIsReady:s})},os=function(){ws.assertWithError(this.isReady,"tflite is not ready")},hs=function(t){ws.log("parseCaptureDelay",t);const s=t.getUint16(0,!0);e(this,Vt,"m",ls).call(this,s)},ls=function(s){ws.log({captureDelay:s}),t(this,cs,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:s})},fs=function(t){ws.log("parseThreshold",t);const s=t.getFloat32(0,!0);e(this,Vt,"m",us).call(this,s)},us=function(s){ws.log({threshold:s}),t(this,gs,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteThreshold",{tfliteThreshold:s})},ms=function(t){ws.log("parseInferencingEnabled",t);const s=Boolean(t.getUint8(0));e(this,Vt,"m",ps).call(this,s)},ps=function(s){ws.log({inferencingEnabled:s}),t(this,ds,s,"f"),e(this,Vt,"a",qt).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:s})},vs=function(t){ws.log("parseInference",t);const s=ze(t,0);ws.log({timestamp:s});const i=[];for(let e=0,s=2;s<t.byteLength;e++,s+=4){const e=t.getFloat32(s,!0);i.push(e)}ws.log("values",i);const n={timestamp:s,values:i};if("classification"==this.task){let e=0,t=0;i.forEach(((s,i)=>{s>e&&(e=s,t=i)})),ws.log({maxIndex:t,maxValue:e}),n.maxIndex=t,n.maxValue=e}e(this,Vt,"a",qt).call(this,"tfliteInference",{tfliteInference:n})};const Ws=k("DeviceInformationManager",{log:!0}),Is=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],Ls=[...Is,"deviceInformation"];class Us{constructor(){Ms.add(this),ks.set(this,{})}get information(){return e(this,ks,"f")}clear(){t(this,ks,{},"f")}parseMessage(t,s){switch(Ws.log({messageType:t}),t){case"manufacturerName":const i=V.decode(s.buffer);Ws.log({manufacturerName:i}),e(this,Ms,"m",_s).call(this,{manufacturerName:i});break;case"modelNumber":const n=V.decode(s.buffer);Ws.log({modelNumber:n}),e(this,Ms,"m",_s).call(this,{modelNumber:n});break;case"softwareRevision":const r=V.decode(s.buffer);Ws.log({softwareRevision:r}),e(this,Ms,"m",_s).call(this,{softwareRevision:r});break;case"hardwareRevision":const a=V.decode(s.buffer);Ws.log({hardwareRevision:a}),e(this,Ms,"m",_s).call(this,{hardwareRevision:a});break;case"firmwareRevision":const o=V.decode(s.buffer);Ws.log({firmwareRevision:o}),e(this,Ms,"m",_s).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),Ws.log({pnpId:c}),e(this,Ms,"m",_s).call(this,{pnpId:c});break;case"serialNumber":const h=V.decode(s.buffer);Ws.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}var Fs,Rs,xs,As,Os,$s,Bs,Ns,Ps,Vs,zs,js,qs,Gs,Hs,Js,Qs,Ks;ks=new WeakMap,Ms=new WeakSet,Ds=function(){return this.eventDispatcher.dispatchEvent},Ts=function(){return Is.every((t=>t in e(this,ks,"f")))},_s=function(t){Ws.log({partialDeviceInformation:t});Object.keys(t).forEach((s=>{e(this,Ms,"a",Ds).call(this,s,{[s]:t[s]})})),Object.assign(e(this,ks,"f"),t),Ws.log({deviceInformation:e(this,ks,"f")}),e(this,Ms,"a",Ts)&&(Ws.log("completed deviceInformation"),e(this,Ms,"a",Ds).call(this,"deviceInformation",{deviceInformation:this.information}))};const Zs=k("InformationManager",{log:!0}),Xs=["leftInsole","rightInsole"],Ys=["left","right"],ei=2,ti=30,si=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],ii=si;class ni{constructor(){Fs.add(this),xs.set(this,!1),Os.set(this,void 0),Bs.set(this,void 0),Ps.set(this,""),Vs.set(this,void 0),Gs.set(this,0),Js.set(this,!1),J(this)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return e(this,xs,"f")}get batteryCurrent(){return e(this,Os,"f")}async getBatteryCurrent(){Zs.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}get id(){return e(this,Bs,"f")}get name(){return e(this,Ps,"f")}updateName(s){Zs.assertTypeWithError(s,"string"),t(this,Ps,s,"f"),Zs.log({updatedName:e(this,Ps,"f")}),e(this,Fs,"a",Rs).call(this,"getName",{name:e(this,Ps,"f")})}async setName(e){Zs.assertTypeWithError(e,"string"),Zs.assertWithError(e.length>=2,`name must be greater than 2 characters long ("${e}" is ${e.length} characters long)`),Zs.assertWithError(e.length<30,`name must be less than 30 characters long ("${e}" is ${e.length} characters long)`);const t=P.encode(e);Zs.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return e(this,Vs,"f")}get typeEnum(){return Xs.indexOf(this.type)}updateType(s){e(this,Fs,"m",zs).call(this,s),s!=this.type?(t(this,Vs,s,"f"),Zs.log({updatedType:e(this,Vs,"f")}),e(this,Fs,"a",Rs).call(this,"getType",{type:e(this,Vs,"f")})):Zs.log("redundant type assignment")}async setType(t){e(this,Fs,"m",zs).call(this,t);const s=Xs.indexOf(t);e(this,Fs,"m",qs).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return e(this,Gs,"f")}get isCurrentTimeSet(){return e(this,Js,"f")}parseMessage(t,s){switch(Zs.log({messageType:t}),t){case"isCharging":const i=Boolean(s.getUint8(0));Zs.log({isCharging:i}),e(this,Fs,"m",As).call(this,i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);Zs.log({batteryCurrent:n}),e(this,Fs,"m",$s).call(this,n);break;case"getId":const r=V.decode(s.buffer);Zs.log({id:r}),e(this,Fs,"m",Ns).call(this,r);break;case"getName":case"setName":const a=V.decode(s.buffer);Zs.log({name:a}),this.updateName(a);break;case"getType":case"setType":const o=s.getUint8(0),c=Xs[o];Zs.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);Zs.log({mtu:h}),e(this,Fs,"m",Hs).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));e(this,Fs,"m",Qs).call(this,l);break;default:throw Error(`uncaught messageType ${t}`)}}clear(){t(this,Js,!1,"f")}}xs=new WeakMap,Os=new WeakMap,Bs=new WeakMap,Ps=new WeakMap,Vs=new WeakMap,Gs=new WeakMap,Js=new WeakMap,Fs=new WeakSet,Rs=function(){return this.eventDispatcher.dispatchEvent},As=function(s){Zs.assertTypeWithError(s,"boolean"),t(this,xs,s,"f"),Zs.log({isCharging:e(this,xs,"f")}),e(this,Fs,"a",Rs).call(this,"isCharging",{isCharging:e(this,xs,"f")})},$s=function(s){Zs.assertTypeWithError(s,"number"),t(this,Os,s,"f"),Zs.log({batteryCurrent:e(this,Os,"f")}),e(this,Fs,"a",Rs).call(this,"getBatteryCurrent",{batteryCurrent:e(this,Os,"f")})},Ns=function(s){Zs.assertTypeWithError(s,"string"),t(this,Bs,s,"f"),Zs.log({id:e(this,Bs,"f")}),e(this,Fs,"a",Rs).call(this,"getId",{id:e(this,Bs,"f")})},zs=function(e){Zs.assertEnumWithError(e,Xs)},js=function(e){Zs.assertTypeWithError(e,"number"),Zs.assertWithError(e in Xs,`invalid typeEnum ${e}`)},qs=async function(t){e(this,Fs,"m",js).call(this,t);const s=Uint8Array.from([t]);Zs.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Hs=function(s){Zs.assertTypeWithError(s,"number"),e(this,Gs,"f")!=s?(t(this,Gs,s,"f"),e(this,Fs,"a",Rs).call(this,"getMtu",{mtu:e(this,Gs,"f")})):Zs.log("redundant mtu assignment",s)},Qs=function(s){Zs.log({currentTime:s}),t(this,Js,0!=s||Math.abs(Date.now()-s)<Ve,"f"),e(this,Js,"f")||e(this,Fs,"m",Ks).call(this,!1)},Ks=async function(e){Zs.log("setting current time...");const t=new DataView(new ArrayBuffer(8));t.setBigUint64(0,BigInt(Date.now()),!0);const s=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:t.buffer}],e),await s};const ri=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var ai,oi,ci,hi,li,gi,fi,ui,di,mi,pi,vi,wi,yi,bi,Si;const Ei=k("VibrationManager"),Ci=["front","rear"],Mi=["waveformEffect","waveform"],Di=8,ki=2550,Ti=1270,_i=3,Wi=20,Ii=6;class Li{constructor(){ai.add(this),J(this)}async triggerVibration(t,s=!0){let i;t.forEach((t=>{const{type:s}=t;let n,{locations:r}=t;switch(r=r||Ci.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=t;n=e(this,ai,"m",wi).call(this,r,s,i)}break;case"waveform":{const{segments:s}=t;n=e(this,ai,"m",yi).call(this,r,s)}break;default:throw Error(`invalid vibration type "${s}"`)}Ei.log({type:s,arrayBuffer:n}),i=j(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var Ui,Fi,Ri,xi,Ai,Oi,$i,Bi,Ni,Pi,Vi,zi,ji,qi,Gi;ai=new WeakSet,oi=function(e){Ei.assertTypeWithError(e,"string"),Ei.assertWithError(Ci.includes(e),`invalid location "${e}"`)},ci=function(t){e(this,ai,"m",li).call(this,t),t.forEach((t=>{e(this,ai,"m",oi).call(this,t)}))},hi=function(t){e(this,ai,"m",ci).call(this,t);let s=0;return t.forEach((e=>{const t=Ci.indexOf(e);s|=1<<t})),Ei.log({locationsBitmask:s}),Ei.assertWithError(s>0,"locationsBitmask must not be zero"),s},li=function(e){Ei.assertWithError(Array.isArray(e),"passed non-array"),Ei.assertWithError(e.length>0,"passed empty array")},gi=function(e){Ei.assertWithError(ri.includes(e),`invalid waveformEffect "${e}"`)},fi=function(t){if(null!=t.effect){const s=t.effect;e(this,ai,"m",gi).call(this,s)}else{if(null==t.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:e}=t;Ei.assertWithError(e>=0,`delay must be 0ms or greater (got ${e})`),Ei.assertWithError(e<=Ti,`delay must be 1270ms or less (got ${e})`)}}if(null!=t.loopCount){const{loopCount:s}=t;e(this,ai,"m",ui).call(this,s)}},ui=function(e){Ei.assertTypeWithError(e,"number"),Ei.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),Ei.assertWithError(e<=3,`waveformEffectSegmentLoopCount must be 3 or fewer (got ${e})`)},di=function(t){e(this,ai,"m",li).call(this,t),Ei.assertWithError(t.length<=8,`must have 8 waveformEffectSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,ai,"m",fi).call(this,t)}))},mi=function(e){Ei.assertTypeWithError(e,"number"),Ei.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),Ei.assertWithError(e<=6,`waveformEffectSequenceLoopCount must be 6 or fewer (got ${e})`)},pi=function(e){Ei.assertTypeWithError(e.amplitude,"number"),Ei.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),Ei.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),Ei.assertTypeWithError(e.duration,"number"),Ei.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),Ei.assertWithError(e.duration<=ki,`duration must be 2550ms or less (got ${e.duration}ms)`)},vi=function(t){e(this,ai,"m",li).call(this,t),Ei.assertWithError(t.length<=20,`must have 20 waveformSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,ai,"m",pi).call(this,t)}))},wi=function(t,s,i=0){e(this,ai,"m",di).call(this,s),e(this,ai,"m",mi).call(this,i);let n=[],r=0;const a=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||a&&e<8;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[r++]=ri.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[r++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<8;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[r]=0);const i=e%4*2;n[r]|=t<<i,3!=e&&7!=e||r++}0!=i&&(n[r++]=i);const c=new DataView(Uint8Array.from(n).buffer);return Ei.log({dataArray:n,dataView:c}),e(this,ai,"m",Si).call(this,t,"waveformEffect",c)},yi=function(t,s){e(this,ai,"m",vi).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),Ei.log({dataView:i}),e(this,ai,"m",Si).call(this,t,"waveform",i)},bi=function(e){Ei.assertTypeWithError(e,"string"),Ei.assertWithError(Mi.includes(e),`invalid vibrationType "${e}"`)},Si=function(t,s,i){Ei.assertWithError(i?.byteLength>0,"no data received");const n=e(this,ai,"m",hi).call(this,t);e(this,ai,"m",bi).call(this,s);const r=Mi.indexOf(s);Ei.log({locationsBitmask:n,vibrationTypeIndex:r,dataView:i});const a=j(n,r,i.byteLength,i);return Ei.log({data:a}),a};const Hi=k("BaseConnectionManager",{log:!0}),Ji=["notConnected","connecting","connected","disconnecting"],Qi=[...Ji,"connectionStatus","isConnected"],Ki=[...si,...Bt,...bt,"triggerVibration",...ys,...Re],Zi=["batteryLevel"],Xi=["rx","tx"],Yi=[...Zi,...Is,...Xi,...Ki,"smp"];class en{get baseConstructor(){return this.constructor}static get isSupported(){return!1}get isSupported(){return this.baseConstructor.isSupported}get type(){return this.baseConstructor.type}constructor(){Ui.add(this),Ai.set(this,"notConnected"),Vi.set(this,[]),zi.set(this,!1),qi.set(this,new x(e(this,Ui,"m",Gi).bind(this),5e3)),e(this,Ui,"m",xi).call(this)}get status(){return e(this,Ai,"f")}set status(s){Hi.assertEnumWithError(s,Ji),e(this,Ai,"f")!=s?(Hi.log(`new connection status "${s}"`),t(this,Ai,s,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,qi,"f").start():e(this,qi,"f").stop(),"notConnected"==e(this,Ai,"f")&&(this.mtu=void 0)):Hi.log(`tried to assign same connection status "${s}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,Ui,"m",Oi).call(this),e(this,Ui,"m",$i).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,Ui,"m",Oi).call(this),e(this,Ui,"m",$i).call(this),Hi.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,Ui,"m",Bi).call(this),e(this,Ui,"m",Ni).call(this),this.status="disconnecting",Hi.log("disconnecting from device...")}async sendSmpMessage(t){e(this,Ui,"m",Pi).call(this),Hi.log("sending smp message",t)}async sendTxMessages(s,i=!0){if(e(this,Ui,"m",Pi).call(this),s&&e(this,Vi,"f").push(...s),!i)return;if(e(this,zi,"f"))return;t(this,zi,!0,"f"),Hi.log("sendTxMessages",e(this,Vi,"f").slice());const n=e(this,Vi,"f").map((t=>{e(Fi,Fi,"m",Ri).call(Fi,t.type);const s=Ki.indexOf(t.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,t.data?.byteLength||0,!0),j(s,i,t.data)}));if(this.mtu)for(;n.length>0;){let e=0,t=0;n.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=n.splice(0,t);Hi.log({arrayBufferCount:t,arrayBuffersToSend:s});const i=j(...s);Hi.log("sending arrayBuffer",i),await this.sendTxData(i)}else{const e=j(...n);Hi.log("sending arrayBuffer",e),await this.sendTxData(e)}e(this,Vi,"f").length=0,t(this,zi,!1,"f")}async sendTxData(e){Hi.log("sendTxData",e)}parseRxMessage(t){mt(t,Ki,e(this,Ui,"m",ji).bind(this),null,!0),this.onMessagesReceived()}}Fi=en,Ai=new WeakMap,Vi=new WeakMap,zi=new WeakMap,qi=new WeakMap,Ui=new WeakSet,Ri=function(e){Hi.assertEnumWithError(e,Ki)},xi=function(){Hi.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Oi=function(){Hi.assertWithError(!this.isConnected,"device is already connected")},$i=function(){Hi.assertWithError("connecting"!=this.status,"device is already connecting")},Bi=function(){Hi.assertWithError(this.isConnected,"device is not connected")},Ni=function(){Hi.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Pi=function(){e(this,Ui,"m",Bi).call(this),e(this,Ui,"m",Ni).call(this)},ji=function(e,t){Hi.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Gi=function(){this.isConnected||(Hi.log("timer detected disconnection"),this.status="notConnected")};const tn=k("EventUtils",{log:!1});function sn(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;tn.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function nn(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;tn.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const rn=k("bluetoothUUIDs",{log:!1});if(i)var an=window.BluetoothUUID;function on(e){return rn.assertTypeWithError(e,"string"),rn.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function cn(e){return an?.getCharacteristic?.(e)}function hn(e){return an?.getService?.(e)}const ln=Object.freeze({services:{deviceInformation:{uuid:hn("device_information"),characteristics:{manufacturerName:{uuid:cn("manufacturer_name_string")},modelNumber:{uuid:cn("model_number_string")},hardwareRevision:{uuid:cn("hardware_revision_string")},firmwareRevision:{uuid:cn("firmware_revision_string")},softwareRevision:{uuid:cn("software_revision_string")},pnpId:{uuid:cn("pnp_id")},serialNumber:{uuid:cn("serial_number_string")}}},battery:{uuid:hn("battery_service"),characteristics:{batteryLevel:{uuid:cn("battery_level")}}},main:{uuid:on("0000"),characteristics:{rx:{uuid:on("1000")},tx:{uuid:on("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),gn=[ln.services.main.uuid],fn=[ln.services.deviceInformation.uuid,ln.services.battery.uuid,ln.services.smp.uuid];function un(e){e=e.toString().toLowerCase();return Object.keys(ln.services).find((t=>{let s=ln.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const dn=[],mn=[];function pn(e){var t;return e=e.toString().toLowerCase(),Object.values(ln.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function vn(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}if("smp"===e)t.writeWithoutResponse=!0;if("tx"===e)t.write=!0;return t}Object.values(ln.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];gn.includes(e.uuid)&&(dn.push(i.uuid),t.push(s)),mn.push(i.uuid)}))}),[]);const wn=k("BluetoothConnectionManager",{log:!0});class yn extends en{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){wn.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var bn,Sn,En,Cn,Mn,Dn,kn,Tn,_n,Wn,In;const Ln=k("WebBluetoothConnectionManager",{log:!0});var Un;i&&(Un=window.navigator.bluetooth);class Fn extends yn{constructor(){super(...arguments),bn.add(this),Sn.set(this,{characteristicvaluechanged:e(this,bn,"m",_n).bind(this)}),En.set(this,{gattserverdisconnected:e(this,bn,"m",In).bind(this)}),Cn.set(this,void 0),Mn.set(this,new Map),Dn.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(Un)}static get type(){return"webBluetooth"}get device(){return e(this,Cn,"f")}set device(s){e(this,Cn,"f")!=s?(e(this,Cn,"f")&&nn(e(this,Cn,"f"),e(this,En,"f")),s&&sn(s,e(this,En,"f")),t(this,Cn,s,"f")):Ln.log("tried to assign the same BluetoothDevice")}get server(){return e(this,Cn,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await Un.requestDevice({filters:[{services:gn}],optionalServices:i?fn:[]});Ln.log("got BluetoothDevice"),this.device=t,Ln.log("connecting to device...");const s=await this.server.connect();Ln.log(`connected to device? ${s.connected}`),await e(this,bn,"m",kn).call(this),Ln.log("fully connected"),this.status="connected"}catch(t){Ln.error(t),this.status="notConnected",this.server?.disconnect(),e(this,bn,"m",Tn).call(this)}}async disconnect(){await e(this,bn,"m",Tn).call(this),await super.disconnect(),this.server?.disconnect(),this.status="notConnected"}async writeCharacteristic(t,s){super.writeCharacteristic(t,s);const i=e(this,Dn,"f").get(t);Ln.assertWithError(i,`${t} characteristic not found`),Ln.log("writing characteristic",i,s);const n=i.properties||vn(t);n.writeWithoutResponse?(Ln.log("writing without response"),await i.writeValueWithoutResponse(s)):(Ln.log("writing with response"),await i.writeValueWithResponse(s)),Ln.log("wrote characteristic"),n.read&&!n.notify&&(Ln.log("reading value after write..."),await i.readValue(),(o||c)&&e(this,bn,"m",Wn).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),Ln.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){Ln.error(e),this.isInRange=!1}this.isConnected?(Ln.log("successfully reconnected!"),await e(this,bn,"m",kn).call(this),this.status="connected"):(Ln.log("unable to reconnect"),this.status="notConnected")}}Sn=new WeakMap,En=new WeakMap,Cn=new WeakMap,Mn=new WeakMap,Dn=new WeakMap,bn=new WeakSet,kn=async function(){e(this,bn,"m",Tn).call(this),Ln.log("getting services...");const t=await this.server.getPrimaryServices();Ln.log("got services",t.length),Ln.log("getting characteristics...");for(const s in t){const i=t[s];Ln.log({service:i});const n=un(i.uuid);Ln.assertWithError(n,`no name found for service uuid "${i.uuid}"`),Ln.log(`got "${n}" service`),i.name=n,e(this,Mn,"f").set(n,i),Ln.log(`getting characteristics for "${n}" service`);const r=await i.getCharacteristics();Ln.log(`got characteristics for "${n}" service`);for(const t in r){const s=r[t];Ln.log({characteristic:s});const i=pn(s.uuid);Ln.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),Ln.log(`got "${i}" characteristic in "${n}" service`),s.name=i,e(this,Dn,"f").set(i,s),sn(s,e(this,Sn,"f"));const a=s.properties||vn(i);a.notify&&(Ln.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),a.read&&(Ln.log(`reading "${i}" characteristic...`),await s.readValue(),(o||c)&&e(this,bn,"m",Wn).call(this,s))}}},Tn=async function(){this.device&&nn(this.device,e(this,En,"f"));const t=Array.from(e(this,Dn,"f").keys()).map((t=>{const s=e(this,Dn,"f").get(t);nn(s,e(this,Sn,"f"));if((s.properties||vn(t)).notify)return Ln.log(`stopping notifications for "${t}" characteristic`),s.stopNotifications()}));return Promise.allSettled(t)},_n=function(t){Ln.log("oncharacteristicvaluechanged");const s=t.target;e(this,bn,"m",Wn).call(this,s)},Wn=function(e){Ln.log("onCharacteristicValue");const t=e.name;Ln.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),Ln.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;Ln.assertWithError(s,`no data found for "${t}" characteristic`),Ln.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){Ln.error(e)}},In=function(){Ln.log("gattserverdisconnected"),this.status="notConnected"};const Rn=4294967296,xn=9007199254740992;const An={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function r(e){let r=s.byteLength;const a=n+e;for(;r<a;)r<<=1;if(r!==s.byteLength){const e=i;s=new ArrayBuffer(r),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function a(){n+=t}function o(e){a(r(1).setUint8(n,e))}function c(e){const t=r(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);a()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){a(r(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){a(r(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%Rn,s=(e-t)/Rn,i=r(8);i.setUint32(n,s),i.setUint32(n+4,t),a()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=xn)return h(0,t);if(-xn<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){a(r(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),g=new DataView(l);for(let e=0;e<n;++e)g.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function r(e,t){return n+=e,t}function a(t){return r(t,new Uint8Array(e,n,t))}function o(){return r(1,i.getUint8(n))}function c(){return r(2,i.getUint16(n))}function h(){return r(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function g(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*Rn+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function f(e){const t=o();if(255===t)return-1;const s=g(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function u(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const r=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==r)return(i?-1:1)*r*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|r<<13),t.getFloat32(0)}();case 26:return r(4,i.getFloat32(n));case 27:return r(8,i.getFloat64(n))}if(v=g(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=f(d))>=0;)t+=v,e.push(a(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return a(v);case 3:if(v<0)for(;(v=f(d))>=0;)u(w,v);else u(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},On=k("mcumgr",{log:!0}),$n=0,Bn=1,Nn=2,Pn=3,Vn=0,zn=1,jn=8,qn=0,Gn=2,Hn=3,Jn=5,Qn=0,Kn=1,Zn=5,Xn=0;class Yn{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(An.encode(i))]);const r=255&n.length,a=[e,0,n.length>>8,r,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,a}_notification(e){On.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,r,,a]=e,o=An.decode(e.slice(8).buffer),c=256*s+i,h=256*n+r;return On.log("mcumgr - Process Message - Group: "+h+", Id: "+a+", Off: "+o.off),h===zn&&a===Kn&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===Pn&&h===jn&&a===Xn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===Bn&&h===jn&&a===Xn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),On.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:a,data:o,length:c}))}cmdReset(){return this._getMessage(Nn,Vn,Jn)}smpEcho(e){return this._getMessage(Nn,Vn,qn,{d:e})}cmdImageState(){return this._getMessage($n,zn,Qn)}cmdImageErase(){return this._getMessage(Nn,zn,Zn,{})}cmdImageTest(e){return this._getMessage(Nn,zn,Qn,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(Nn,zn,Qn,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-An.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(Nn,zn,Kn,e);On.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?On.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?On.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(On.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-An.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(Nn,jn,Xn,e);On.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?On.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage($n,jn,Xn,e);On.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const r=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=r,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var er,tr,sr,ir,nr,rr,ar,or,cr,hr,lr,gr,fr,ur,dr,mr,pr,vr,wr,yr,br;const Sr=k("FirmwareManager",{log:!0}),Er=["smp"],Cr=[...Er,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],Mr=["idle","uploading","uploaded","pending","testing","erasing"];class Dr{constructor(){er.add(this),sr.set(this,"idle"),nr.set(this,void 0),or.set(this,void 0),cr.set(this,new Yn),e(this,er,"m",hr).call(this),J(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(t,s){if(Sr.log({messageType:t}),"smp"!==t)throw Error(`uncaught messageType ${t}`);e(this,cr,"f")._notification(Array.from(new Uint8Array(s.buffer))),e(this,er,"a",tr).call(this,"smp",{dataView:s})}async uploadFirmware(t){Sr.log("uploadFirmware",t);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await H(t),n=await e(this,cr,"f").imageInfo(i);Sr.log({imageInfo:n}),e(this,cr,"f").cmdUpload(i,1),e(this,er,"m",ir).call(this,"uploading"),await s}get status(){return e(this,sr,"f")}get images(){return e(this,nr,"f")}async getImages(){const t=this.waitForEvent("firmwareImages");Sr.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(e(this,cr,"f").cmdImageState()).buffer),await t}async testImage(t=1){if(e(this,er,"m",ar).call(this,t),e(this,er,"m",rr).call(this),!e(this,nr,"f")[t])return void Sr.log(`image ${t} not found`);if(1==e(this,nr,"f")[t].pending)return void Sr.log(`image ${t} is already pending`);if(e(this,nr,"f")[t].empty)return void Sr.log(`image ${t} is empty`);const s=this.waitForEvent("smp");Sr.log("testing firmware image..."),this.sendMessage(Uint8Array.from(e(this,cr,"f").cmdImageTest(e(this,nr,"f")[t].hash)).buffer),await s}async eraseImage(){e(this,er,"m",rr).call(this);const t=this.waitForEvent("smp");Sr.log("erasing image..."),this.sendMessage(Uint8Array.from(e(this,cr,"f").cmdImageErase()).buffer),e(this,er,"m",ir).call(this,"erasing"),await t,await this.getImages()}async confirmImage(t=0){if(e(this,er,"m",ar).call(this,t),e(this,er,"m",rr).call(this),!0===e(this,nr,"f")[t].confirmed)return void Sr.log(`image ${t} is already confirmed`);const s=this.waitForEvent("smp");Sr.log("confirming image..."),this.sendMessage(Uint8Array.from(e(this,cr,"f").cmdImageConfirm(e(this,nr,"f")[t].hash)).buffer),await s}async echo(t){Sr.assertTypeWithError(t,"string");const s=this.waitForEvent("smp");Sr.log("sending echo..."),this.sendMessage(Uint8Array.from(e(this,cr,"f").smpEcho(t)).buffer),await s}async reset(){const t=this.waitForEvent("smp");Sr.log("resetting..."),this.sendMessage(Uint8Array.from(e(this,cr,"f").cmdReset()).buffer),await t}get mtu(){return e(this,or,"f")}set mtu(s){t(this,or,s,"f"),e(this,cr,"f")._mtu=s}}var kr,Tr,_r,Wr,Ir,Lr,Ur,Fr,Rr,xr,Ar,Or,$r,Br,Nr,Pr,Vr,zr;sr=new WeakMap,nr=new WeakMap,or=new WeakMap,cr=new WeakMap,er=new WeakSet,tr=function(){return this.eventDispatcher.dispatchEvent},ir=function(s){Sr.assertEnumWithError(s,Mr),e(this,sr,"f")!=s?(t(this,sr,s,"f"),Sr.log({firmwareStatus:e(this,sr,"f")}),e(this,er,"a",tr).call(this,"firmwareStatus",{firmwareStatus:e(this,sr,"f")})):Sr.log(`redundant firmwareStatus assignment "${s}"`)},rr=function(){Sr.assertWithError(e(this,nr,"f"),"didn't get imageState")},ar=function(e){Sr.assertTypeWithError(e,"number"),Sr.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},hr=function(){e(this,cr,"f").onMessage(e(this,er,"m",lr).bind(this)),e(this,cr,"f").onFileDownloadNext(e(this,er,"m",gr)),e(this,cr,"f").onFileDownloadProgress(e(this,er,"m",fr).bind(this)),e(this,cr,"f").onFileDownloadFinished(e(this,er,"m",ur).bind(this)),e(this,cr,"f").onFileUploadNext(e(this,er,"m",dr).bind(this)),e(this,cr,"f").onFileUploadProgress(e(this,er,"m",mr).bind(this)),e(this,cr,"f").onFileUploadFinished(e(this,er,"m",pr).bind(this)),e(this,cr,"f").onImageUploadNext(e(this,er,"m",vr).bind(this)),e(this,cr,"f").onImageUploadProgress(e(this,er,"m",wr).bind(this)),e(this,cr,"f").onImageUploadFinished(e(this,er,"m",yr).bind(this))},lr=function({op:t,group:s,id:i,data:n,length:r}){switch(Sr.log("onMcuMessage",...arguments),s){case Vn:switch(i){case qn:Sr.log(`echo "${n.r}"`);break;case Gn:Sr.table(n.tasks);break;case Hn:Sr.log(n)}break;case zn:if(i===Qn)e(this,er,"m",br).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},gr=function(){Sr.log("onMcuFileDownloadNext",...arguments)},fr=function(){Sr.log("onMcuFileDownloadProgress",...arguments)},ur=function(){Sr.log("onMcuFileDownloadFinished",...arguments)},dr=function(){Sr.log("onMcuFileUploadNext")},mr=function(){Sr.log("onMcuFileUploadProgress")},pr=function(){Sr.log("onMcuFileUploadFinished")},vr=function({packet:e}){Sr.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},wr=function({percentage:t}){const s=t/100;Sr.log("onMcuImageUploadProgress",...arguments),e(this,er,"a",tr).call(this,"firmwareUploadProgress",{progress:s})},yr=async function(){Sr.log("onMcuImageUploadFinished",...arguments),await this.getImages(),e(this,er,"a",tr).call(this,"firmwareUploadProgress",{progress:100}),e(this,er,"a",tr).call(this,"firmwareUploadComplete",{})},br=function({images:s}){if(!s)return void Sr.log("no images found");t(this,nr,s,"f"),Sr.log("images",e(this,nr,"f"));let i="idle";2==e(this,nr,"f").length&&(e(this,nr,"f")[1].bootable?e(this,nr,"f")[0].confirmed?e(this,nr,"f")[1].pending?(Sr.log("reset to upload to the new firmware image"),i="pending"):(Sr.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(Sr.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):Sr.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==e(this,nr,"f").length&&(e(this,nr,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),Sr.log("Select a firmware upload image to upload to slot 1.")),e(this,er,"m",ir).call(this,i),e(this,er,"a",tr).call(this,"firmwareImages",{firmwareImages:e(this,nr,"f")})};const jr=k("DeviceManager",{log:!0}),qr=["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"];class Gr{constructor(){if(kr.add(this),Tr.set(this,{getType:e(this,kr,"m",_r).bind(this),isConnected:e(this,kr,"m",Pr).bind(this)}),Wr.set(this,[]),Ir.set(this,!1),Lr.set(this,{devices:[]}),Ur.set(this,void 0),Rr.set(this,"BS.Device"),$r.set(this,[]),Br.set(this,new I(this,qr)),Gr.shared&&this!=Gr.shared)throw Error("DeviceManager is a singleton - use DeviceManager.shared");this.CanUseLocalStorage&&(this.UseLocalStorage=!0)}onDevice(t){sn(t,e(this,Tr,"f"))}OnDeviceConnectionStatusUpdated(t,s){if("notConnected"==s&&!t.canReconnect&&e(this,$r,"f").includes(t)){const s=e(this,$r,"f").indexOf(t);this.AvailableDevices.splice(s,1),e(this,kr,"m",Vr).call(this)}}get ConnectedDevices(){return e(this,Wr,"f")}get UseLocalStorage(){return e(this,Ir,"f")}set UseLocalStorage(s){e(this,kr,"m",Fr).call(this),jr.assertTypeWithError(s,"boolean"),t(this,Ir,s,"f"),e(this,Ir,"f")&&!e(this,Ur,"f")&&e(this,kr,"m",Ar).call(this)}get CanUseLocalStorage(){return i&&window.localStorage}get AvailableDevices(){return e(this,$r,"f")}get CanGetDevices(){return i&&navigator.bluetooth?.getDevices}async GetDevices(){if(!i)return void jr.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void jr.warn("bluetooth is not available in this browser");if(o)return void jr.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void jr.warn("bluetooth.getDevices() is not available in this browser");if(!this.CanGetDevices)return void jr.log("CanGetDevices is false");e(this,Ur,"f")||e(this,kr,"m",Ar).call(this);const t=e(this,Ur,"f");if(!t.devices||0==t.devices.length)return void jr.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return jr.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=t.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const r=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(r)return void(n&&n?.bluetoothId==r.bluetoothId&&n!=r&&(this.AvailableDevices[e(this,$r,"f").indexOf(r)]=n));if(n)return void this.AvailableDevices.push(n);const a=new Oa,o=new Fn;o.device=s,s.name&&a._informationManager.updateName(s.name),a._informationManager.updateType(i.type),a.connectionManager=o,this.AvailableDevices.push(a)})),e(this,kr,"m",Vr).call(this),this.AvailableDevices}get AddEventListener(){return e(this,Br,"f").addEventListener}get RemoveEventListener(){return e(this,Br,"f").removeEventListener}get RemoveEventListeners(){return e(this,Br,"f").removeEventListeners}get RemoveAllEventListeners(){return e(this,Br,"f").removeAllEventListeners}}Tr=new WeakMap,Wr=new WeakMap,Ir=new WeakMap,Lr=new WeakMap,Ur=new WeakMap,Rr=new WeakMap,$r=new WeakMap,Br=new WeakMap,kr=new WeakSet,_r=function(t){e(this,Ir,"f")&&e(this,kr,"m",Or).call(this,t.target)},Fr=function(){jr.assertWithError(i,"localStorage is only available in the browser"),jr.assertWithError(window.localStorage,"localStorage not found")},xr=function(){e(this,kr,"m",Fr).call(this),localStorage.setItem(e(this,Rr,"f"),JSON.stringify(e(this,Ur,"f")))},Ar=async function(){e(this,kr,"m",Fr).call(this);let s=localStorage.getItem(e(this,Rr,"f"));if("string"!=typeof s)return jr.log("no info found in localStorage"),t(this,Ur,Object.assign({},e(this,Lr,"f")),"f"),void e(this,kr,"m",xr).call(this);try{const e=JSON.parse(s);jr.log({configuration:e}),t(this,Ur,e,"f"),this.CanGetDevices&&await this.GetDevices()}catch(e){jr.error(e)}},Or=function(t){if("webBluetooth"!=t.connectionType)return void jr.log("localStorage is only for webBluetooth devices");e(this,kr,"m",Fr).call(this);const s=e(this,Ur,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1!=s&&(e(this,Ur,"f").devices[s].type=t.type,e(this,kr,"m",xr).call(this))},Nr=function(){return e(this,Br,"f").dispatchEvent},Pr=function(t){const{target:s}=t;if(s.isConnected)if(e(this,Wr,"f").includes(s))jr.log("device already included");else{if(jr.log("adding device",s),e(this,Wr,"f").push(s),this.UseLocalStorage&&"webBluetooth"==s.connectionType){const t={type:s.type,bluetoothId:s.bluetoothId},i=e(this,Ur,"f").devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1==i?e(this,Ur,"f").devices.push(t):e(this,Ur,"f").devices[i]=t,e(this,kr,"m",xr).call(this)}e(this,kr,"a",Nr).call(this,"deviceConnected",{device:s}),e(this,kr,"a",Nr).call(this,"deviceIsConnected",{device:s}),e(this,kr,"m",zr).call(this)}else e(this,Wr,"f").includes(s)?(jr.log("removing device",s),e(this,Wr,"f").splice(e(this,Wr,"f").indexOf(s),1),e(this,kr,"a",Nr).call(this,"deviceDisconnected",{device:s}),e(this,kr,"a",Nr).call(this,"deviceIsConnected",{device:s}),e(this,kr,"m",zr).call(this)):jr.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),s.isConnected&&!this.AvailableDevices.includes(s)){const t=this.AvailableDevices.find((e=>e.bluetoothId==s.bluetoothId));jr.log({existingAvailableDevice:t}),t?this.AvailableDevices[this.AvailableDevices.indexOf(t)]=s:this.AvailableDevices.push(s),e(this,kr,"m",Vr).call(this)}},Vr=function(){jr.log({AvailableDevices:this.AvailableDevices}),e(this,kr,"a",Nr).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},zr=function(){jr.log({ConnectedDevices:this.ConnectedDevices}),e(this,kr,"a",Nr).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},Gr.shared=new Gr;var Hr,Jr,Qr,Kr,Zr,Xr,Yr,ea,ta,sa,ia,na,ra,aa,oa,ca,ha,la,ga,fa,ua,da,ma,pa,va,wa,ya,ba,Sa,Ea,Ca,Ma,Da,ka,Ta=Gr.shared;const _a=k("Device",{log:!0}),Wa=["connectionMessage",...Qi,...Xi,...Zi,...ii,...Ls,...Nt,...St,...Be,...bs,...Cr],Ia=["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"];class La{get bluetoothId(){return e(this,Xr,"f")?.bluetoothId}constructor(){Hr.add(this),Kr.set(this,new I(this,Wa)),Xr.set(this,void 0),this.sendTxMessages=e(this,Hr,"m",Yr).bind(this),ea.set(this,!1),aa.set(this,Jr.ReconnectOnDisconnection),oa.set(this,void 0),this.latestConnectionMessage=new Map,da.set(this,new Us),ma.set(this,0),this._informationManager=new ni,va.set(this,new Pt),ya.set(this,Jr.ClearSensorConfigurationOnLeave),ba.set(this,new Et),Sa.set(this,new Li),Ea.set(this,new Ne),Ca.set(this,new Cs),Ma.set(this,new Dr),this.sendSmpMessage=e(this,Hr,"m",Da).bind(this),ka.set(this,!1),e(this,da,"f").eventDispatcher=e(this,Kr,"f"),this._informationManager.sendMessage=this.sendTxMessages,this._informationManager.eventDispatcher=e(this,Kr,"f"),e(this,va,"f").sendMessage=this.sendTxMessages,e(this,va,"f").eventDispatcher=e(this,Kr,"f"),e(this,ba,"f").eventDispatcher=e(this,Kr,"f"),e(this,Sa,"f").sendMessage=this.sendTxMessages,e(this,Ca,"f").sendMessage=this.sendTxMessages,e(this,Ca,"f").eventDispatcher=e(this,Kr,"f"),e(this,Ea,"f").sendMessage=this.sendTxMessages,e(this,Ea,"f").eventDispatcher=e(this,Kr,"f"),e(this,Ma,"f").sendMessage=this.sendSmpMessage,e(this,Ma,"f").eventDispatcher=e(this,Kr,"f"),this.addEventListener("getMtu",(()=>{e(this,Ma,"f").mtu=this.mtu,e(this,Ea,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),Ta.onDevice(this),i&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),n&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()}))}get addEventListener(){return e(this,Kr,"f").addEventListener}get removeEventListener(){return e(this,Kr,"f").removeEventListener}get waitForEvent(){return e(this,Kr,"f").waitForEvent}get removeEventListeners(){return e(this,Kr,"f").removeEventListeners}get removeAllEventListeners(){return e(this,Kr,"f").removeAllEventListeners}get connectionManager(){return e(this,Xr,"f")}set connectionManager(s){this.connectionManager!=s?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0,this.connectionManager.onMessagesReceived=void 0),s&&(s.onStatusUpdated=e(this,Hr,"m",ca).bind(this),s.onMessageReceived=e(this,Hr,"m",fa).bind(this),s.onMessagesReceived=e(this,Hr,"m",ua).bind(this)),t(this,Xr,s,"f"),_a.log("assigned new connectionManager",e(this,Xr,"f"))):_a.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(Jr,Jr,"m",Qr).call(Jr)),e(this,Hr,"m",ga).call(this),this.connectionManager.connect()}get isConnected(){return e(this,ea,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return e(this,Hr,"m",na).call(this),e(this,Hr,"m",ga).call(this),this.connectionManager?.reconnect()}static async Connect(){const e=new Jr;return await e.connect(),e}static get ReconnectOnDisconnection(){return e(this,Jr,"f",ra)}static set ReconnectOnDisconnection(e){_a.assertTypeWithError(e,"boolean"),t(this,Jr,e,"f",ra)}get reconnectOnDisconnection(){return e(this,aa,"f")}set reconnectOnDisconnection(e){_a.assertTypeWithError(e,"boolean"),t(this,aa,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,Hr,"m",ta).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,Xr,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"notConnected":case"connecting":case"disconnecting":return e(this,Xr,"f").status;default:return"notConnected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,da,"f").information}get batteryLevel(){return e(this,ma,"f")}get id(){return this._informationManager.id}get isCharging(){return this._informationManager.isCharging}get batteryCurrent(){return this._informationManager.batteryCurrent}get getBatteryCurrent(){return this._informationManager.getBatteryCurrent}get name(){return this._informationManager.name}get setName(){return this._informationManager.setName}get type(){return this._informationManager.type}get setType(){return this._informationManager.setType}get isInsole(){return this._informationManager.isInsole}get insoleSide(){return this._informationManager.insoleSide}get mtu(){return this._informationManager.mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return yt.filter((e=>this.sensorTypes.includes(e)))}get sensorConfiguration(){return e(this,va,"f").configuration}async setSensorConfiguration(t,s){await e(this,va,"f").setConfiguration(t,s)}async clearSensorConfiguration(){return e(this,va,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return e(this,Jr,"f",wa)}static set ClearSensorConfigurationOnLeave(e){_a.assertTypeWithError(e,"boolean"),t(this,Jr,e,"f",wa)}get clearSensorConfigurationOnLeave(){return e(this,ya,"f")}set clearSensorConfigurationOnLeave(e){_a.assertTypeWithError(e,"boolean"),t(this,ya,e,"f")}get numberOfPressureSensors(){return e(this,ba,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){e(this,ba,"f").pressureSensorDataManager.resetRange()}async triggerVibration(t,s){e(this,Sa,"f").triggerVibration(t,s)}get maxFileLength(){return e(this,Ea,"f").maxLength}async sendFile(t,s){const i=this.waitForEvent("fileTransferComplete");e(this,Ea,"f").send(t,s),await i}async receiveFile(t){const s=this.waitForEvent("fileTransferComplete");e(this,Ea,"f").receive(t),await s}get fileTransferStatus(){return e(this,Ea,"f").status}cancelFileTransfer(){e(this,Ea,"f").cancel()}get tfliteName(){return e(this,Ca,"f").name}get setTfliteName(){return e(this,Ca,"f").setName}get tfliteTask(){return e(this,Ca,"f").task}get setTfliteTask(){return e(this,Ca,"f").setTask}get tfliteSampleRate(){return e(this,Ca,"f").sampleRate}get setTfliteSampleRate(){return e(this,Ca,"f").setSampleRate}get tfliteSensorTypes(){return e(this,Ca,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>Es.includes(e)))}get setTfliteSensorTypes(){return e(this,Ca,"f").setSensorTypes}get tfliteIsReady(){return e(this,Ca,"f").isReady}get tfliteInferencingEnabled(){return e(this,Ca,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return e(this,Ca,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return e(this,Ca,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return e(this,Ca,"f").captureDelay}get setTfliteCaptureDelay(){return e(this,Ca,"f").setCaptureDelay}get tfliteThreshold(){return e(this,Ca,"f").threshold}get setTfliteThreshold(){return e(this,Ca,"f").setThreshold}get uploadFirmware(){return e(this,Ma,"f").uploadFirmware}async reset(){return await e(this,Ma,"f").reset(),e(this,Xr,"f").disconnect()}get firmwareStatus(){return e(this,Ma,"f").status}get getFirmwareImages(){return e(this,Ma,"f").getImages}get firmwareImages(){return e(this,Ma,"f").images}get eraseFirmwareImage(){return e(this,Ma,"f").eraseImage}get confirmFirmwareImage(){return e(this,Ma,"f").confirmImage}get testFirmwareImage(){return e(this,Ma,"f").testImage}get isServerSide(){return e(this,ka,"f")}set isServerSide(s){e(this,ka,"f")!=s?(_a.log({newIsServerSide:s}),t(this,ka,s,"f"),e(this,Ea,"f").isServerSide=this.isServerSide):_a.log("redundant isServerSide assignment")}}Jr=La,Kr=new WeakMap,Xr=new WeakMap,ea=new WeakMap,aa=new WeakMap,oa=new WeakMap,da=new WeakMap,ma=new WeakMap,va=new WeakMap,ya=new WeakMap,ba=new WeakMap,Sa=new WeakMap,Ea=new WeakMap,Ca=new WeakMap,Ma=new WeakMap,ka=new WeakMap,Hr=new WeakSet,Qr=function(){return new Fn},Zr=function(){return e(this,Kr,"f").dispatchEvent},Yr=async function(t,s){await(e(this,Xr,"f")?.sendTxMessages(t,s))},ta=function(){_a.assertWithError(this.isConnected,"notConnected")},sa=function(){return Ia.every((e=>this.latestConnectionMessage.has(e)))},ia=function(){const t=Ia.map((e=>({type:e})));e(this,Hr,"m",Yr).call(this,t)},na=function(){_a.assertWithError(this.canReconnect,"cannot reconnect to device")},ca=function(s){_a.log({connectionStatus:s}),"notConnected"==s?this.canReconnect&&this.reconnectOnDisconnection&&(_a.log("starting reconnect interval..."),t(this,oa,setInterval((()=>{_a.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,oa,"f")&&(_a.log("clearing reconnect interval"),clearInterval(e(this,oa,"f")),t(this,oa,void 0,"f")),e(this,Hr,"m",la).call(this),"connected"!=s||e(this,ea,"f")||e(this,Hr,"m",ia).call(this),Ta.OnDeviceConnectionStatusUpdated(this,s)},ha=function(t=!1){e(this,Hr,"a",Zr).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,Hr,"a",Zr).call(this,this.connectionStatus,{}),t&&e(this,Hr,"a",Zr).call(this,"isConnected",{isConnected:this.isConnected})},la=function(){switch(t(this,ea,Boolean(this.connectionManager?.isConnected)&&e(this,Hr,"a",sa)&&this._informationManager.isCurrentTimeSet,"f"),this.connectionStatus){case"connected":e(this,ea,"f")&&e(this,Hr,"m",ha).call(this,!0);break;case"notConnected":e(this,Hr,"m",ha).call(this,!0);break;default:e(this,Hr,"m",ha).call(this,!1)}},ga=function(){this.latestConnectionMessage.clear(),this._informationManager.clear(),e(this,da,"f").clear()},fa=function(t,s){if(_a.log({messageType:t,dataView:s}),"batteryLevel"===t){const t=s.getUint8(0);_a.log("received battery level",{batteryLevel:t}),e(this,Hr,"m",pa).call(this,t)}else if(Re.includes(t))e(this,Ea,"f").parseMessage(t,s);else if(ys.includes(t))e(this,Ca,"f").parseMessage(t,s);else if(bt.includes(t))e(this,ba,"f").parseMessage(t,s);else if(Er.includes(t))e(this,Ma,"f").parseMessage(t,s);else if(Is.includes(t))e(this,da,"f").parseMessage(t,s);else if(si.includes(t))this._informationManager.parseMessage(t,s);else{if(!Bt.includes(t))throw Error(`uncaught messageType ${t}`);e(this,va,"f").parseMessage(t,s)}this.latestConnectionMessage.set(t,s),e(this,Hr,"a",Zr).call(this,"connectionMessage",{messageType:t,dataView:s})},ua=function(){!this.isConnected&&e(this,Hr,"a",sa)&&e(this,Hr,"m",la).call(this),e(this,Hr,"m",Yr).call(this)},pa=function(s){_a.assertTypeWithError(s,"number"),e(this,ma,"f")!=s?(t(this,ma,s,"f"),_a.log({updatedBatteryLevel:e(this,ma,"f")}),e(this,Hr,"a",Zr).call(this,"batteryLevel",{batteryLevel:e(this,ma,"f")})):_a.log(`duplicate batteryLevel assignment ${s}`)},Da=function(t){return e(this,Xr,"f").sendSmpMessage(t)},ra={value:!1},wa={value:!0};var Ua,Fa,Ra,xa,Aa,Oa=La;const $a=k("DevicePairPressureSensorDataManager",{log:!0});class Ba{constructor(){Ua.add(this),Fa.set(this,{}),Ra.set(this,new Ze)}resetPressureRange(){e(this,Ra,"f").reset()}onDevicePressureData(t){const{pressure:s}=t.message,i=t.target.insoleSide;if($a.log({pressure:s,insoleSide:i}),e(this,Fa,"f")[i]=s,e(this,Ua,"a",xa))return e(this,Ua,"m",Aa).call(this);$a.log("doesn't have all pressure data yet...")}}var Na;Fa=new WeakMap,Ra=new WeakMap,Ua=new WeakSet,xa=function(){return Ys.every((t=>t in e(this,Fa,"f")))},Aa=function(){const t={rawSum:0,normalizedSum:0};return Ys.forEach((s=>{t.rawSum+=e(this,Fa,"f")[s].scaledSum,t.normalizedSum+=e(this,Fa,"f")[s].normalizedSum})),t.normalizedSum>.001&&(t.center={x:0,y:0},Ys.forEach((s=>{const i=e(this,Fa,"f")[s],n=i.normalizedSum/t.normalizedSum;n>0&&(null!=i.normalizedCenter?.y&&(t.center.y+=i.normalizedCenter.y*n),"right"==s&&(t.center.x=n))})),t.normalizedCenter=e(this,Ra,"f").updateAndGetNormalization(t.center)),$a.log({devicePairPressure:t}),t};const Pa=k("DevicePairSensorDataManager",{log:!0}),Va=["pressure","sensorData"];class za{constructor(){Na.set(this,{}),this.pressureSensorDataManager=new Ba}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(t){const{timestamp:s,sensorType:i}=t.message;let n;if(Pa.log({sensorType:i,timestamp:s,event:t}),e(this,Na,"f")[i]||(e(this,Na,"f")[i]={}),e(this,Na,"f")[i][t.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(t);else Pa.log(`uncaught sensorType "${i}"`);if(n){const t=Object.assign({},e(this,Na,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:t,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:t,[i]:n})}else Pa.log("no value received")}}var ja,qa,Ga,Ha,Ja,Qa,Ka,Za,Xa,Ya,eo,to,so,io,no,ro;Na=new WeakMap;const ao=k("DevicePair",{log:!0});function oo(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const co=["isConnected",...Va,...Wa.map((e=>oo(e)))];class ho{constructor(){ja.add(this),Ga.set(this,new I(this,co)),Ja.set(this,void 0),Qa.set(this,void 0),Ya.set(this,{isConnected:e(this,ja,"m",to).bind(this),sensorData:e(this,ja,"m",no).bind(this),getType:e(this,ja,"m",so).bind(this)}),io.set(this,new za),e(this,io,"f").eventDispatcher=e(this,Ga,"f")}get sides(){return Ys}get addEventListener(){return e(this,Ga,"f").addEventListener}get removeEventListener(){return e(this,Ga,"f").removeEventListener}get waitForEvent(){return e(this,Ga,"f").waitForEvent}get removeEventListeners(){return e(this,Ga,"f").removeEventListeners}get removeAllEventListeners(){return e(this,Ga,"f").removeAllEventListeners}get left(){return e(this,Ja,"f")}get right(){return e(this,Qa,"f")}get isConnected(){return Ys.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return Ys.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(s){if(!s.isInsole)return void ao.warn("device is not an insole");const i=s.insoleSide,n=this[i];if(s!=n){switch(n&&e(this,ja,"m",Za).call(this,n),e(this,ja,"m",Ka).call(this,s),i){case"left":t(this,Ja,s,"f");break;case"right":t(this,Qa,s,"f")}return ao.log(`assigned ${i} insole`,s),this.resetPressureRange(),e(this,ja,"a",Ha).call(this,"isConnected",{isConnected:this.isConnected}),e(this,ja,"a",Ha).call(this,"deviceIsConnected",{device:s,isConnected:s.isConnected,side:i}),n}ao.log("device already assigned")}setSensorConfiguration(e){Ys.forEach((t=>{this[t]?.isConnected&&this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){e(this,io,"f").resetPressureRange()}async triggerVibration(e,t){const s=Ys.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return e(this,qa,"f",ro)}}qa=ho,Ga=new WeakMap,Ja=new WeakMap,Qa=new WeakMap,Ya=new WeakMap,io=new WeakMap,ja=new WeakSet,Ha=function(){return e(this,Ga,"f").dispatchEvent},Ka=function(t){sn(t,e(this,Ya,"f")),Wa.forEach((s=>{t.addEventListener(s,e(this,ja,"m",eo).bind(this))}))},Za=function(t){nn(t,e(this,Ya,"f")),Wa.forEach((s=>{t.removeEventListener(s,e(this,ja,"m",eo).bind(this))}))},Xa=function(t){const s=Ys.some((s=>this[s]==t&&(ao.log(`removing ${s} insole`,t),nn(t,e(this,Ya,"f")),delete this[s],!0)));return s&&e(this,ja,"a",Ha).call(this,"isConnected",{isConnected:this.isConnected}),s},eo=function(t){const{type:s,target:i,message:n}=t;e(this,ja,"a",Ha).call(this,oo(s),{...n,device:i,side:i.insoleSide})},to=function(t){e(this,ja,"a",Ha).call(this,"isConnected",{isConnected:this.isConnected})},so=function(t){const{target:s}=t;if(this[s.insoleSide]==s)return;e(this,ja,"m",Xa).call(this,s)&&this.assignInsole(s)},no=function(t){this.isConnected&&e(this,io,"f").onDeviceSensorData(t)},ro={value:new qa},Ta.AddEventListener("deviceConnected",(t=>{const{device:s}=t.message;s.isInsole&&e(qa,qa,"f",ro).assignInsole(s)}));const lo=k("ServerUtils",{log:!1}),go=["isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function fo(e,...t){lo.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=j(...t.data),i=s.byteLength;lo.assertEnumWithError(t.type,e);const n=e.indexOf(t.type),r=new DataView(new ArrayBuffer(2));return r.setUint16(0,i,!0),j(n,r,s)}));return lo.log("messageBuffers",...s),j(...s)}function uo(...e){return lo.log("createServerMessage",...e),fo(go,...e)}function mo(...e){return lo.log("createClientDeviceMessage",...e),fo(Yi,...e)}var po,vo,wo,yo,bo;uo("isScanningAvailable"),uo("isScanning"),uo("startScan"),uo("stopScan"),uo("discoveredDevices");const So=k("ClientConnectionManager",{log:!0}),Eo=[...Is,"batteryLevel"];class Co extends en{constructor(){super(...arguments),po.add(this),vo.set(this,void 0),wo.set(this,!1)}static get isSupported(){return i}static get type(){return"client"}get bluetoothId(){return e(this,vo,"f")}set bluetoothId(s){So.assertTypeWithError(s,"string"),e(this,vo,"f")!=s?t(this,vo,s,"f"):So.log("redundant bluetoothId assignment")}get isConnected(){return e(this,wo,"f")}set isConnected(s){So.assertTypeWithError(s,"boolean"),e(this,wo,"f")!=s?(t(this,wo,s,"f"),this.status=e(this,wo,"f")?"connected":"notConnected",this.isConnected&&e(this,po,"m",yo).call(this)):So.log("redundant newIsConnected assignment",s)}async connect(){await super.connect(),this.sendClientConnectMessage()}async disconnect(){await super.disconnect(),this.sendClientDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),So.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendClientMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendClientMessage({type:"tx",data:e})}onClientMessage(t){So.log({dataView:t}),mt(t,Wa,e(this,po,"m",bo).bind(this),null,!0),this.onMessagesReceived()}}var Mo,Do,ko,To,_o,Wo,Io,Lo,Uo,Fo,Ro,xo,Ao,Oo,$o,Bo,No,Po,Vo;vo=new WeakMap,wo=new WeakMap,po=new WeakSet,yo=function(){this.sendClientMessage(...Eo)},bo=function(e,t){let s=0;switch(So.log({messageType:e},t),e){case"isConnected":const i=Boolean(t.getUint8(s++));So.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}};const zo=k("BaseClient",{log:!0}),jo=["notConnected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class qo{constructor(){Mo.add(this),ko.set(this,{}),To.set(this,new I(this,jo)),this._reconnectOnDisconnection=this.baseConstructor.ReconnectOnDisconnection,_o.set(this,"notConnected"),Io.set(this,!1),Ro.set(this,!1),No.set(this,{})}get baseConstructor(){return this.constructor}get devices(){return e(this,ko,"f")}get addEventListener(){return e(this,To,"f").addEventListener}get dispatchEvent(){return e(this,To,"f").dispatchEvent}get removeEventListener(){return e(this,To,"f").removeEventListener}get waitForEvent(){return e(this,To,"f").waitForEvent}assertConnection(){zo.assertWithError(this.isConnected,"notConnected")}assertDisconnection(){zo.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return this._reconnectOnDisconnection}static set ReconnectOnDisconnection(e){zo.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}get reconnectOnDisconnection(){return this._reconnectOnDisconnection}set reconnectOnDisconnection(e){zo.assertTypeWithError(e,"boolean"),this._reconnectOnDisconnection=e}get _connectionStatus(){return e(this,_o,"f")}set _connectionStatus(s){switch(zo.assertTypeWithError(s,"string"),zo.log({newConnectionStatus:s}),t(this,_o,s,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),s){case"connected":case"notConnected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):e(this,Mo,"m",Do).call(this)}}get connectionStatus(){return this._connectionStatus}parseMessage(t){zo.log("parseMessage",{dataView:t}),mt(t,go,e(this,Mo,"m",Wo).bind(this),null,!0)}get isScanningAvailable(){return e(this,Mo,"a",Lo)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return e(this,Mo,"a",xo)}startScan(){e(this,Mo,"m",Bo).call(this),this.sendServerMessage("startScan")}stopScan(){e(this,Mo,"m",$o).call(this),this.sendServerMessage("stopScan")}toggleScan(){e(this,Mo,"m",Fo).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return e(this,No,"f")}onDiscoveredDevice(t){zo.log({discoveredDevice:t}),e(this,No,"f")[t.bluetoothId]=t,this.dispatchEvent("discoveredDevice",{discoveredDevice:t})}requestDiscoveredDevices(){this.sendServerMessage({type:"discoveredDevices"})}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(t){this.assertConnection(),zo.assertTypeWithError(t,"string");const s=e(this,Mo,"m",Vo).call(this,t);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendServerMessage({type:"connectToDevice",data:e})}createDevice(e){const t=new Oa,s=new Co;return s.bluetoothId=e,s.sendClientMessage=this.sendDeviceMessage.bind(this,e),s.sendClientConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendClientDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}onConnectedBluetoothDeviceIds(t){zo.log({bluetoothIds:t}),t.forEach((t=>{e(this,Mo,"m",Vo).call(this,t).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),zo.assertTypeWithError(e,"string");const t=this.devices[e];return zo.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(e){this.sendServerMessage({type:"disconnectFromDevice",data:e})}sendDeviceMessage(e,...t){this.sendServerMessage({type:"deviceMessage",data:[e,mo(...t)]})}}ko=new WeakMap,To=new WeakMap,_o=new WeakMap,Io=new WeakMap,Ro=new WeakMap,No=new WeakMap,Mo=new WeakSet,Do=function(){t(this,Mo,!1,"a",Uo),t(this,Mo,!1,"a",Ao);for(const t in e(this,ko,"f")){const s=e(this,ko,"f")[t];s.connectionManager.isConnected=!1,s.removeAllEventListeners()}t(this,ko,{},"f")},Wo=function(s,i){let n=0;switch(zo.log({messageType:s},i),s){case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));zo.log({isScanningAvailable:e}),t(this,Mo,e,"a",Uo)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));zo.log({isScanning:e}),t(this,Mo,e,"a",Ao)}break;case"discoveredDevice":{const{string:e}=dt(i,n);zo.log({discoveredDeviceString:e});const t=JSON.parse(e);zo.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:t}=dt(i,n);e(this,Mo,"m",Po).call(this,t)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=dt(i,n);zo.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);zo.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:t,byteOffset:s}=dt(i,n);n=s;const r=e(this,ko,"f")[t];zo.assertWithError(r,`no device found for id ${t}`);const a=r.connectionManager,o=G(i,n);a.onClientMessage(o)}break;default:zo.error(`uncaught messageType "${s}"`)}},Lo=function(){return e(this,Io,"f")},Uo=function(s){zo.assertTypeWithError(s,"boolean"),t(this,Io,s,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&e(this,Mo,"m",Oo).call(this)},Fo=function(){this.assertConnection(),zo.assertWithError(this.isScanningAvailable,"scanning is not available")},xo=function(){return e(this,Ro,"f")},Ao=function(e){zo.assertTypeWithError(e,"boolean"),t(this,Ro,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},Oo=function(){this.sendServerMessage("isScanning")},$o=function(){zo.assertWithError(this.isScanning,"is not scanning")},Bo=function(){zo.assertWithError(!this.isScanning,"is already scanning")},Po=function(t){zo.log({expiredBluetoothDeviceId:t});const s=e(this,No,"f")[t];s?(zo.log({expiredDiscoveredDevice:s}),delete e(this,No,"f")[t],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):zo.warn(`no discoveredDevice found with id "${t}"`)},Vo=function(t){let s=e(this,ko,"f")[t];return s||(s=this.createDevice(t),e(this,ko,"f")[t]=s),s},qo._reconnectOnDisconnection=!0;const Go=k("WebSocketUtils",{log:!1}),Ho=["ping","pong","serverMessage"];function Jo(...e){return Go.log("createWebSocketMessage",...e),fo(Ho,...e)}var Qo,Ko,Zo,Xo,Yo,ec,tc,sc,ic,nc,rc,ac,oc;Jo("ping"),Jo("pong");const cc=k("WebSocketClient",{log:!0});class hc extends qo{constructor(){super(...arguments),Qo.add(this),Ko.set(this,void 0),Xo.set(this,{open:e(this,Qo,"m",Yo).bind(this),message:e(this,Qo,"m",ec).bind(this),close:e(this,Qo,"m",tc).bind(this),error:e(this,Qo,"m",sc).bind(this)}),rc.set(this,new x(e(this,Qo,"m",ac).bind(this),3e7))}get webSocket(){return e(this,Ko,"f")}set webSocket(s){e(this,Ko,"f")!=s?(cc.log("assigning webSocket",s),e(this,Ko,"f")&&nn(e(this,Ko,"f"),e(this,Xo,"f")),sn(s,e(this,Xo,"f")),t(this,Ko,s,"f"),cc.log("assigned webSocket")):cc.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.connect(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(t){this.assertConnection(),e(this,Ko,"f").send(t)}sendServerMessage(...e){this.sendMessage(Jo({type:"serverMessage",data:uo(...e)}))}}Ko=new WeakMap,Xo=new WeakMap,rc=new WeakMap,Qo=new WeakSet,Zo=function(...e){this.sendMessage(Jo(...e))},Yo=function(t){cc.log("webSocket.open",t),e(this,rc,"f").start(),this._connectionStatus="connected"},ec=async function(t){cc.log("webSocket.message",t),e(this,rc,"f").restart();const s=await t.data.arrayBuffer(),i=new DataView(s);e(this,Qo,"m",ic).call(this,i)},tc=function(t){cc.log("webSocket.close",t),this._connectionStatus="notConnected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),e(this,rc,"f").stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},sc=function(e){cc.error("webSocket.error",e.message)},ic=function(t){mt(t,Ho,e(this,Qo,"m",nc).bind(this),null,!0)},nc=function(t,s){switch(t){case"ping":e(this,Qo,"m",oc).call(this);break;case"pong":break;case"serverMessage":this.parseMessage(s);break;default:cc.error(`uncaught messageType "${t}"`)}},ac=function(){e(this,Qo,"m",Zo).call(this,"ping")},oc=function(){e(this,Qo,"m",Zo).call(this,"pong")};export{yt as ContinuousSensorTypes,tt as DefaultNumberOfPressureSensors,Oa as Device,Ta as DeviceManager,ho as DevicePair,Xs as DeviceTypes,w as Environment,$e as FileTransferDirections,xe as FileTypes,Ys as InsoleSides,ti as MaxNameLength,Di as MaxNumberOfVibrationWaveformEffectSegments,Wi as MaxNumberOfVibrationWaveformSegments,Ot as MaxSensorRate,Ti as MaxVibrationWaveformEffectSegmentDelay,_i as MaxVibrationWaveformEffectSegmentLoopCount,Ii as MaxVibrationWaveformEffectSequenceLoopCount,ki as MaxVibrationWaveformSegmentDuration,ei as MinNameLength,$t as SensorRateStep,wt as SensorTypes,Es as TfliteSensorTypes,Ss as TfliteTasks,Ci as VibrationLocations,Mi as VibrationTypes,ri as VibrationWaveformEffects,hc as WebSocketClient,_ as setAllConsoleLevelFlags,T as setConsoleLevelFlagsForType};
//# sourceMappingURL=brilliantsole.module.min.js.map
