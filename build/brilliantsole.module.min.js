/**
 * @copyright Zack Qattan 2024
 * @license MIT
 */
function e(e,t,s,i){if("a"===s&&!i)throw new TypeError("Private accessor was defined without a getter");if("function"==typeof t?e!==t||!i:!t.has(e))throw new TypeError("Cannot read private member from an object whose class did not declare it");return"m"===s?i:"a"===s?i.call(e):i?i.value:t.get(e)}function t(e,t,s,i,n){if("m"===i)throw new TypeError("Private method is not writable");if("a"===i&&!n)throw new TypeError("Private accessor was defined without a setter");if("function"==typeof t?e!==t||!n:!t.has(e))throw new TypeError("Cannot write private member to an object whose class did not declare it");return"a"===i?n.call(e,s):n?n.value=s:t.set(e,s),s}"function"==typeof SuppressedError&&SuppressedError;const s=!0,i="undefined"!=typeof window&&void 0!==window?.document,n="undefined"!=typeof process&&null!=process?.versions?.node,a=i&&navigator.userAgent||"";let r=!1;i?r=Boolean(navigator.bluetooth):n&&(r=!0);const o=i&&/Bluefy/i.test(a),c=i&&/WebBLE/i.test(a),h=i&&/Android/i.test(a),l=i&&/Safari/i.test(a)&&!/Chrome/i.test(a),u=i&&/iPad|iPhone|iPod/i.test(a),f=i&&/Macintosh/i.test(a),g=!i&&!n&&"undefined"!=typeof global&&"undefined"!=typeof Studio;var d,m,p,v,w=Object.freeze({__proto__:null,isAndroid:h,get isBluetoothSupported(){return r},isIOS:u,isInBluefy:o,isInBrowser:i,isInDev:s,isInLensStudio:g,isInNode:n,isInProduction:false,isInWebBLE:c,isMac:f,isSafari:l});if(g){const e=function(...e){Studio.log(e.map((e=>new String(e))).join(","))};(v={}).log=e,v.warn=e.bind(v,"WARNING"),v.error=e.bind(v,"ERROR")}else v=console;if(!v.assert){const e=(e,...t)=>{e||v.warn(...t)};v.assert=e}if(!v.table){const e=(...e)=>{v.log(...e)};v.table=e}function y(){}const b=v.log.bind(v),S=v.warn.bind(v),E=v.error.bind(v),C=v.table.bind(v),M=v.assert.bind(v);class D{constructor(t){if(p.set(this,{log:s,warn:s,assert:!0,error:!0,table:!0}),e(d,d,"f",m)[t])throw new Error(`"${t}" console already exists`);e(d,d,"f",m)[t]=this}setLevelFlags(t){Object.assign(e(this,p,"f"),t)}static setLevelFlagsForType(t,s){if(!e(this,d,"f",m)[t])throw new Error(`no console found with type "${t}"`);e(this,d,"f",m)[t].setLevelFlags(s)}static setAllLevelFlags(t){for(const s in e(this,d,"f",m))e(this,d,"f",m)[s].setLevelFlags(t)}static create(t,s){const i=e(this,d,"f",m)[t]||new d(t);return s&&i.setLevelFlags(s),i}get log(){return e(this,p,"f").log?b:y}get warn(){return e(this,p,"f").warn?S:y}get error(){return e(this,p,"f").error?E:y}get assert(){return e(this,p,"f").assert?M:y}get table(){return e(this,p,"f").table?C:y}assertWithError(e,t){if(!Boolean(e))throw new Error(t)}assertTypeWithError(e,t){this.assertWithError(typeof e==t,`value ${e} of type "${typeof e}" not of type "${t}"`)}assertEnumWithError(e,t){this.assertWithError(t.includes(e),`invalid enum "${e}"`)}}function k(e,t){return D.create(e,t)}function T(e,t){D.setLevelFlagsForType(e,t)}function W(e){D.setAllLevelFlags(e)}d=D,p=new WeakMap,m={value:{}};class I{constructor(e,t){this.target=e,this.validEventTypes=t,this.listeners={},this.addEventListener=this.addEventListener.bind(this),this.removeEventListener=this.removeEventListener.bind(this),this.dispatchEvent=this.dispatchEvent.bind(this),this.waitForEvent=this.waitForEvent.bind(this)}isValidEventType(e){return this.validEventTypes.includes(e)}addEventListener(e,t,s={once:!1}){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]||(this.listeners[e]=[]),this.listeners[e].push({listener:t,once:s.once})}removeEventListener(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);this.listeners[e]&&(this.listeners[e]=this.listeners[e].filter((e=>e.listener!==t)))}dispatchEvent(e,t){if(!this.isValidEventType(e))throw new Error(`Invalid event type: ${e}`);if(!this.listeners[e])return;const s=this.listeners[e];s.forEach(((i,n)=>{i.listener({type:e,target:this.target,message:t}),i.once&&s.splice(n,1)}))}waitForEvent(e){return new Promise((t=>{this.addEventListener(e,(e=>{t(e)}),{once:!0})}))}}var _,L,F;const U=k("Timer",{log:!1});class x{get callback(){return e(this,_,"f")}set callback(e){U.assertTypeWithError(e,"function"),U.log({newCallback:e}),t(this,_,e,"f"),this.isRunning&&this.restart()}get interval(){return e(this,L,"f")}set interval(e){U.assertTypeWithError(e,"number"),U.assertWithError(e>0,"interval must be above 0"),U.log({newInterval:e}),t(this,L,e,"f"),this.isRunning&&this.restart()}constructor(e,t){_.set(this,void 0),L.set(this,void 0),F.set(this,void 0),this.interval=t,this.callback=e}get isRunning(){return null!=e(this,F,"f")}start(){this.isRunning?U.log("interval already running"):(U.log("starting interval"),t(this,F,setInterval(e(this,_,"f"),e(this,L,"f")),"f"))}stop(){this.isRunning?(U.log("stopping interval"),clearInterval(e(this,F,"f")),t(this,F,void 0,"f")):U.log("interval already not running")}restart(){this.stop(),this.start()}}function R(e){for(let t=0;t<8;++t)e=(1&e?0:3988292384)^e>>>1;return 4278190080^e}_=new WeakMap,L=new WeakMap,F=new WeakMap,k("checksum",{log:!0});const A=new Uint32Array(256);for(let e=0;e<256;++e)A[e]=R(e);function O(e){let t=new Uint8Array(e),s=0;for(let e=0;e<t.byteLength;++e){const i=255&s,n=t[e];s=(A[i^n]^s>>>8)>>>0}return s}var $,N;$="undefined"==typeof TextEncoder?class{encode(e){const t=Array.from(e).map((e=>e.charCodeAt(0)));return Uint8Array.from(t)}}:TextEncoder,N="undefined"==typeof TextDecoder?class{decode(e){return Array.from(new Uint8Array(e)).map((e=>String.fromCharCode(e))).join("")}}:TextDecoder;const B=new $,P=new N,V=k("ArrayBufferUtils",{log:!1});function z(...e){const t=(e=(e=(e=e.filter((e=>null!=e||null!=e))).map((e=>{if("number"==typeof e){const t=e;return Uint8Array.from([Math.floor(t)])}if("boolean"==typeof e){const t=e;return Uint8Array.from([t?1:0])}if("string"==typeof e){return j(e)}if(e instanceof Array){return z(...e)}if(e instanceof ArrayBuffer)return e;if("buffer"in e&&e.buffer instanceof ArrayBuffer){return e.buffer}if(e instanceof DataView){return e.buffer}if("object"==typeof e){return function(e){return j(JSON.stringify(e))}(e)}return e}))).filter((e=>e&&"byteLength"in e))).reduce(((e,t)=>e+t.byteLength),0),s=new Uint8Array(t);let i=0;return e.forEach((e=>{s.set(new Uint8Array(e),i),i+=e.byteLength})),s.buffer}function j(e){const t=B.encode(e);return z(t.byteLength,t)}function q(e,t,s){let i;return null!=s&&(i=e.byteOffset+t+s),V.log({dataView:e,begin:t,end:i,length:s}),new DataView(e.buffer.slice(e.byteOffset+t,i))}async function G(e){let t;if(e instanceof Array)t=Uint8Array.from(e);else if(e instanceof DataView)t=e.buffer;else if("string"==typeof e||e instanceof URL){const s=await fetch(e);t=await s.arrayBuffer()}else if(e instanceof File)t=await e.arrayBuffer();else{if(!(e instanceof ArrayBuffer))throw{error:"invalid file type",file:e};t=e}return t}var H,J,Q,Z,K,X,Y,ee,te,se,ie,ne,ae,re,oe,ce,he,le,ue,fe,ge,de,me,pe,ve,we,ye,be,Se,Ee,Ce,Me,De,ke;const Te=k("FileTransferManager",{log:!0}),We=["maxFileLength","getFileType","setFileType","getFileLength","setFileLength","getFileChecksum","setFileChecksum","setFileTransferCommand","fileTransferStatus","getFileBlock","setFileBlock"],Ie=["tflite"],_e=["idle","sending","receiving"],Le=["startReceive","startSend","cancel"],Fe=[...We,"fileTransferProgress","fileTransferComplete","fileReceived"];class Ue{constructor(){H.add(this),te.set(this,J.MaxLength),ae.set(this,void 0),he.set(this,0),ge.set(this,0),we.set(this,"idle"),Ce.set(this,[])}get addEventListener(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}static get MaxLength(){return e(this,J,"f",ee)}get maxLength(){return e(this,te,"f")}get type(){return e(this,ae,"f")}get length(){return e(this,he,"f")}get checksum(){return e(this,ge,"f")}get status(){return e(this,we,"f")}parseMessage(t,s){switch(Te.log({messageType:t}),t){case"maxFileLength":e(this,H,"m",se).call(this,s);break;case"getFileType":case"setFileType":e(this,H,"m",re).call(this,s);break;case"getFileLength":case"setFileLength":e(this,H,"m",le).call(this,s);break;case"getFileChecksum":case"setFileChecksum":e(this,H,"m",de).call(this,s);break;case"fileTransferStatus":e(this,H,"m",ye).call(this,s);break;case"getFileBlock":e(this,H,"m",Me).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}async send(t,s){e(this,H,"m",Se).call(this),e(this,H,"m",Z).call(this,t);const i=await G(s),n=[];n.push(e(this,H,"m",ce).call(this,t,!1));const a=i.byteLength;n.push(e(this,H,"m",fe).call(this,a,!1));const r=O(i);n.push(e(this,H,"m",pe).call(this,r,!1)),n.push(e(this,H,"m",ve).call(this,"startSend",!1)),this.sendMessage(),await Promise.all(n),await e(this,H,"m",De).call(this,i)}async receive(t){e(this,H,"m",Se).call(this),e(this,H,"m",Z).call(this,t),await e(this,H,"m",ce).call(this,t),await e(this,H,"m",ve).call(this,"startReceive")}async cancel(){e(this,H,"m",Ee).call(this),await e(this,H,"m",ve).call(this,"cancel")}}J=Ue,te=new WeakMap,ae=new WeakMap,he=new WeakMap,ge=new WeakMap,we=new WeakMap,Ce=new WeakMap,H=new WeakSet,Q=function(){return this.eventDispatcher.dispatchEvent},Z=function(e){Te.assertEnumWithError(e,Ie)},K=function(e){Te.assertWithError(e in Ie,`invalid typeEnum ${e}`)},X=function(e){Te.assertWithError(e in _e,`invalid statusEnum ${e}`)},Y=function(e){Te.assertEnumWithError(e,Le)},se=function(t){Te.log("parseFileMaxLength",t);const s=t.getUint32(0,!0);Te.log(`maxLength: ${s/1024}kB`),e(this,H,"m",ie).call(this,s)},ie=function(s){Te.log({maxLength:s}),t(this,te,s,"f"),e(this,H,"a",Q).call(this,"maxFileLength",{maxFileLength:s})},ne=function(e){Te.assertWithError(e<=this.maxLength,`file length ${e}kB too large - must be ${this.maxLength}kB or less`)},re=function(t){Te.log("parseFileType",t);const s=t.getUint8(0);e(this,H,"m",K).call(this,s);const i=Ie[s];e(this,H,"m",oe).call(this,i)},oe=function(s){Te.log({fileTransferType:s}),t(this,ae,s,"f"),e(this,H,"a",Q).call(this,"getFileType",{fileType:s})},ce=async function(t,s){if(e(this,H,"m",Z).call(this,t),this.type==t)return void Te.log(`redundant type assignment ${t}`);const i=this.waitForEvent("getFileType"),n=Ie.indexOf(t);this.sendMessage([{type:"setFileType",data:Uint8Array.from([n]).buffer}],s),await i},le=function(t){Te.log("parseFileLength",t);const s=t.getUint32(0,!0);e(this,H,"m",ue).call(this,s)},ue=function(s){Te.log(`length: ${s/1024}kB`),t(this,he,s,"f"),e(this,H,"a",Q).call(this,"getFileLength",{fileLength:s})},fe=async function(t,s){if(Te.assertTypeWithError(t,"number"),e(this,H,"m",ne).call(this,t),this.length==t)return void Te.log(`redundant length assignment ${t}`);const i=this.waitForEvent("getFileLength"),n=new DataView(new ArrayBuffer(4));n.setUint32(0,t,!0),this.sendMessage([{type:"setFileLength",data:n.buffer}],s),await i},de=function(t){Te.log("checksum",t);const s=t.getUint32(0,!0);e(this,H,"m",me).call(this,s)},me=function(s){Te.log({checksum:s}),t(this,ge,s,"f"),e(this,H,"a",Q).call(this,"getFileChecksum",{fileChecksum:s})},pe=async function(e,t){if(Te.assertTypeWithError(e,"number"),this.checksum==e)return void Te.log(`redundant checksum assignment ${e}`);const s=this.waitForEvent("getFileChecksum"),i=new DataView(new ArrayBuffer(4));i.setUint32(0,e,!0),this.sendMessage([{type:"setFileChecksum",data:i.buffer}],t),await s},ve=async function(t,s){e(this,H,"m",Y).call(this,t);const i=this.waitForEvent("fileTransferStatus"),n=Le.indexOf(t);this.sendMessage([{type:"setFileTransferCommand",data:Uint8Array.from([n]).buffer}],s),await i},ye=function(t){Te.log("parseFileStatus",t);const s=t.getUint8(0);e(this,H,"m",X).call(this,s);const i=_e[s];e(this,H,"m",be).call(this,i)},be=function(s){Te.log({status:s}),t(this,we,s,"f"),e(this,H,"a",Q).call(this,"fileTransferStatus",{fileTransferStatus:s}),e(this,Ce,"f").length=0},Se=function(){Te.assertWithError("idle"==e(this,we,"f"),"status is not idle")},Ee=function(){Te.assertWithError("idle"!=e(this,we,"f"),"status is idle")},Me=async function(t){Te.log("parseFileBlock",t),e(this,Ce,"f").push(t.buffer);const s=e(this,Ce,"f").reduce(((e,t)=>e+t.byteLength),0),i=s/e(this,he,"f");if(Te.log(`received ${s} of ${e(this,he,"f")} bytes (${100*i}%)`),e(this,H,"a",Q).call(this,"fileTransferProgress",{progress:i}),s!=e(this,he,"f"))return;Te.log("file transfer complete");let n,a=(new Date).toLocaleString();if("tflite"===this.type)a+=".tflite";n="undefined"!=typeof File?new File(e(this,Ce,"f"),a):new Blob(e(this,Ce,"f"));const r=O(await n.arrayBuffer());Te.log({checksum:r}),r==e(this,ge,"f")?(Te.log("received file",n),e(this,H,"a",Q).call(this,"getFileBlock",{fileTransferBlock:t}),e(this,H,"a",Q).call(this,"fileTransferComplete",{direction:"receiving"}),e(this,H,"a",Q).call(this,"fileReceived",{file:n})):Te.error(`wrong checksum - expected ${e(this,ge,"f")}, got ${r}`)},De=async function(t){return e(this,H,"m",ke).call(this,t)},ke=async function t(s,i=0){if("sending"!=this.status)return;const n=s.slice(i,i+(this.mtu-3-3));Te.log("slicedBuffer",n);const a=1-(s.byteLength-i)/s.byteLength;if(Te.log(`sending bytes ${i}-${i+n.byteLength} of ${s.byteLength} bytes (${100*a}%)`),e(this,H,"a",Q).call(this,"fileTransferProgress",{progress:a}),0!=n.byteLength)return this.sendMessage([{type:"setFileBlock",data:n}]),e(this,H,"m",t).call(this,s,i+n.byteLength);Te.log("finished sending buffer"),e(this,H,"a",Q).call(this,"fileTransferComplete",{direction:"sending"})},ee={value:0};const xe=65536;function Re(e,t){const s=Date.now();var i;return(i=s)-i%xe+e.getUint16(t,!0)}var Ae;const Oe={min:1/0,max:-1/0,range:0};class $e{constructor(){Ae.set(this,Object.assign({},Oe))}reset(){Object.assign(e(this,Ae,"f"),Oe)}update(t){e(this,Ae,"f").min=Math.min(t,e(this,Ae,"f").min),e(this,Ae,"f").max=Math.max(t,e(this,Ae,"f").max),e(this,Ae,"f").range=e(this,Ae,"f").max-e(this,Ae,"f").min}getNormalization(t){return e(this,Ae,"f").range*t||0}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}var Ne,Be,Pe,Ve;Ae=new WeakMap;class ze{constructor(){Ne.set(this,{x:new $e,y:new $e})}reset(){e(this,Ne,"f").x.reset(),e(this,Ne,"f").y.reset()}update(t){e(this,Ne,"f").x.update(t.x),e(this,Ne,"f").y.update(t.y)}getNormalization(t){return{x:e(this,Ne,"f").x.getNormalization(t.x),y:e(this,Ne,"f").y.getNormalization(t.y)}}updateAndGetNormalization(e){return this.update(e),this.getNormalization(e)}}Ne=new WeakMap;const je=k("PressureDataManager",{log:!0}),qe=["pressure"],Ge=qe;class He{constructor(){Be.set(this,[]),Pe.set(this,void 0),Ve.set(this,new ze)}get positions(){return e(this,Be,"f")}get numberOfSensors(){return this.positions.length}parsePositions(e){const s=[];for(let t=0,i=0;i<e.byteLength;t++,i+=2)s.push({x:e.getUint8(i)/256,y:e.getUint8(i+1)/256});var i,n;je.log({positions:s}),t(this,Be,s,"f"),t(this,Pe,(i=this.numberOfSensors,n=()=>new $e,new Array(i).fill(1).map(((e,t)=>{if("function"==typeof n)return n(t);{const e=n;return Object.assign({},e)}}))),"f"),this.resetRange()}resetRange(){e(this,Pe,"f").forEach((e=>e.reset())),e(this,Ve,"f").reset()}parseData(t,s){const i={sensors:[],scaledSum:0,normalizedSum:0};for(let n=0,a=0;a<t.byteLength;n++,a+=2){const r=t.getUint16(a,!0),o=r*s,c=e(this,Pe,"f")[n].updateAndGetNormalization(o),h=this.positions[n];i.sensors[n]={rawValue:r,scaledValue:o,normalizedValue:c,position:h,weightedValue:0},i.scaledSum+=o,i.normalizedSum+=c/this.numberOfSensors}return i.scaledSum>0&&(i.center={x:0,y:0},i.sensors.forEach((e=>{e.weightedValue=e.scaledValue/i.scaledSum,i.center.x+=e.position.x*e.weightedValue,i.center.y+=e.position.y*e.weightedValue})),i.normalizedCenter=e(this,Ve,"f").updateAndGetNormalization(i.center)),je.log({pressure:i}),i}}Be=new WeakMap,Pe=new WeakMap,Ve=new WeakMap;const Je=k("MotionSensorDataManager",{log:!0}),Qe=["still","walking","running","bicycle","vehicle","tilting"],Ze=["portraitUpright","landscapeLeft","portraitUpsideDown","landscapeRight","unknown"];class Ke{parseVector3(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));const a={x:s,y:i,z:n};return Je.log({vector:a}),a}parseQuaternion(e,t){let[s,i,n,a]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0),e.getInt16(6,!0)].map((e=>e*t));const r={x:s,y:i,z:n,w:a};return Je.log({quaternion:r}),r}parseEuler(e,t){let[s,i,n]=[e.getInt16(0,!0),e.getInt16(2,!0),e.getInt16(4,!0)].map((e=>e*t));i*=-1,s*=-1;const a={heading:s,pitch:i,roll:n};return Je.log({euler:a}),a}parseStepCounter(e){Je.log("parseStepCounter",e);const t=e.getUint32(0,!0);return Je.log({stepCount:t}),t}parseActivity(e){Je.log("parseActivity",e);const t={},s=e.getUint8(0);return Je.log("activityBitfield",s.toString(2)),Qe.forEach(((e,i)=>{t[e]=Boolean(s&1<<i)})),Je.log("activity",t),t}parseDeviceOrientation(e){Je.log("parseDeviceOrientation",e);const t=e.getUint8(0),s=Ze[t];return Je.assertWithError(s,"undefined deviceOrientation"),Je.log({deviceOrientation:s}),s}}var Xe,Ye;const et=["barometer"],tt=et,st=k("BarometerSensorDataManager",{log:!0});class it{constructor(){Xe.add(this)}parseData(t,s){const i=t.getUint32(0,!0)*s,n=e(this,Xe,"m",Ye).call(this,i);return st.log({pressure:i,altitude:n}),{pressure:i}}}Xe=new WeakSet,Ye=function(e){const t=.0065;return 288.15/t*(1-Math.pow(e/101325,.19026643566373183))};const nt=k("ParseUtils",{log:!0});function at(e,t=0){const s=e.getUint8(t++);return{string:P.decode(e.buffer.slice(e.byteOffset+t,e.byteOffset+t+s)),byteOffset:t+=s}}function rt(e,t,s,i,n=!1){let a=0;for(;a<e.byteLength;){const r=e.getUint8(a++);nt.assertWithError(r in t,`invalid messageTypeEnum ${r}`);const o=t[r];let c;n?(c=e.getUint16(a,!0),a+=2):c=e.getUint8(a++),nt.log({messageTypeEnum:r,messageType:o,messageLength:c,dataView:e,byteOffset:a});const h=q(e,a,c);nt.log({_dataView:h}),s(o,h,i),a+=c}}const ot=k("SensorDataManager",{log:!0}),ct=["acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation","orientation","activity","stepCounter","stepDetector","deviceOrientation",...qe,...et],ht=["acceleration","gravity","linearAcceleration","gyroscope","magnetometer","gameRotation","rotation",...Ge,...tt],lt=["getPressurePositions","getSensorScalars","sensorData"],ut=[...lt,...ct];class ft{constructor(){this.pressureSensorDataManager=new He,this.motionSensorDataManager=new Ke,this.barometerSensorDataManager=new it,this.scalars=new Map}static AssertValidSensorType(e){ot.assertEnumWithError(e,ct)}static AssertValidSensorTypeEnum(e){ot.assertTypeWithError(e,"number"),ot.assertWithError(e in ct,`invalid sensorTypeEnum ${e}`)}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}parseMessage(e,t){switch(ot.log({messageType:e}),e){case"getSensorScalars":this.parseScalars(t);break;case"getPressurePositions":this.pressureSensorDataManager.parsePositions(t);break;case"sensorData":this.parseData(t);break;default:throw Error(`uncaught messageType ${e}`)}}parseScalars(e){for(let t=0;t<e.byteLength;t+=5){const s=e.getUint8(t),i=ct[s];if(!i){ot.warn(`unknown sensorType index ${s}`);continue}const n=e.getFloat32(t+1,!0);ot.log({sensorType:i,sensorScalar:n}),this.scalars.set(i,n)}}parseData(e){ot.log("sensorData",Array.from(new Uint8Array(e.buffer)));let t=0;const s=Re(e,t);t+=2;rt(new DataView(e.buffer,t),ct,this.parseDataCallback.bind(this),{timestamp:s})}parseDataCallback(e,t,{timestamp:s}){const i=this.scalars.get(e)||1;let n=null;switch(e){case"pressure":n=this.pressureSensorDataManager.parseData(t,i);break;case"acceleration":case"gravity":case"linearAcceleration":case"gyroscope":case"magnetometer":n=this.motionSensorDataManager.parseVector3(t,i);break;case"gameRotation":case"rotation":n=this.motionSensorDataManager.parseQuaternion(t,i);break;case"orientation":n=this.motionSensorDataManager.parseEuler(t,i);break;case"stepCounter":n=this.motionSensorDataManager.parseStepCounter(t);break;case"stepDetector":n={};break;case"activity":n=this.motionSensorDataManager.parseActivity(t);break;case"deviceOrientation":n=this.motionSensorDataManager.parseDeviceOrientation(t);break;case"barometer":n=this.barometerSensorDataManager.parseData(t,i);break;default:ot.error(`uncaught sensorType "${e}"`)}ot.assertWithError(null!=n,`no sensorData defined for sensorType "${e}"`),ot.log({sensorType:e,sensorData:n}),this.dispatchEvent(e,{sensorType:e,[e]:n,timestamp:s}),this.dispatchEvent("sensorData",{sensorType:e,[e]:n,timestamp:s})}}var gt,dt,mt,pt,vt,wt,yt,bt,St,Et,Ct,Mt,Dt,kt,Tt;const Wt=k("SensorConfigurationManager",{log:!0}),It=["getSensorConfiguration","setSensorConfiguration"];class _t{constructor(){gt.add(this),pt.set(this,void 0),wt.set(this,void 0)}get addEventListener(){return this.eventDispatcher.addEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get configuration(){return e(this,wt,"f")}async setConfiguration(t,s){if(s&&(t=Object.assign({...this.zeroSensorConfiguration},t)),Wt.log({newSensorConfiguration:t}),e(this,gt,"m",bt).call(this,t))return void Wt.log("redundant sensor configuration");const i=e(this,gt,"m",kt).call(this,t);Wt.log({setSensorConfigurationData:i});const n=this.waitForEvent("getSensorConfiguration");this.sendMessage([{type:"setSensorConfiguration",data:i.buffer}]),await n}static get MaxSensorRate(){return e(this,dt,"f",Et)}get maxSensorRate(){return dt.MaxSensorRate}static get SensorRateStep(){return e(this,dt,"f",Ct)}get sensorRateStep(){return dt.SensorRateStep}static get ZeroSensorConfiguration(){return e(this,dt,"f",Tt)}get zeroSensorConfiguration(){const e={};return ct.forEach((t=>{e[t]=0})),e}async clearSensorConfiguration(){return this.setConfiguration(this.zeroSensorConfiguration)}parseMessage(t,s){switch(Wt.log({messageType:t}),t){case"getSensorConfiguration":case"setSensorConfiguration":const i=e(this,gt,"m",St).call(this,s);e(this,gt,"m",yt).call(this,i);break;default:throw Error(`uncaught messageType ${t}`)}}}var Lt,Ft,Ut,xt,Rt,At,Ot,$t,Nt,Bt,Pt,Vt,zt,jt,qt,Gt,Ht,Jt,Qt,Zt,Kt,Xt,Yt,es,ts,ss,is,ns,as,rs;dt=_t,pt=new WeakMap,wt=new WeakMap,gt=new WeakSet,mt=function(){return this.eventDispatcher.dispatchEvent},vt=function(t){Wt.assertWithError(e(this,pt,"f"),"must get initial sensorConfiguration");const s=e(this,pt,"f")?.includes(t);return Wt.assert(s,`unavailable sensor type "${t}"`),s},yt=function(s){t(this,wt,s,"f"),Wt.log({updatedConfiguration:e(this,wt,"f")}),e(this,gt,"a",mt).call(this,"getSensorConfiguration",{sensorConfiguration:this.configuration})},bt=function(e){return Object.keys(e).every((t=>this.configuration[t]==e[t]))},St=function(e){const s={};for(let t=0;t<e.byteLength;t+=3){const i=e.getUint8(t),n=ct[i];if(!n){Wt.warn(`unknown sensorType index ${i}`);continue}const a=e.getUint16(t+1,!0);Wt.log({sensorType:n,sensorRate:a}),s[n]=a}return Wt.log({parsedSensorConfiguration:s}),t(this,pt,Object.keys(s),"f"),s},Mt=function(e){Wt.assertTypeWithError(e,"number"),Wt.assertWithError(e>=0,`sensorRate must be 0 or greater (got ${e})`),Wt.assertWithError(e<this.MaxSensorRate,`sensorRate must be 0 or greater (got ${e})`),Wt.assertWithError(e%this.SensorRateStep==0,`sensorRate must be multiple of ${this.SensorRateStep}`)},Dt=function(t){e(dt,dt,"m",Mt).call(dt,t)},kt=function(t){let s=Object.keys(t);s=s.filter((t=>e(this,gt,"m",vt).call(this,t)));const i=new DataView(new ArrayBuffer(3*s.length));return s.forEach(((s,n)=>{ft.AssertValidSensorType(s);const a=ct.indexOf(s);i.setUint8(3*n,a);const r=t[s];e(this,gt,"m",Dt).call(this,r),i.setUint16(3*n+1,r,!0)})),Wt.log({sensorConfigurationData:i}),i},Et={value:65535},Ct={value:5},Tt={value:{}},ct.forEach((t=>{e(dt,dt,"f",Tt)[t]=0}));const os=k("TfliteManager",{log:!0}),cs=["getTfliteName","setTfliteName","getTfliteTask","setTfliteTask","getTfliteSampleRate","setTfliteSampleRate","getTfliteSensorTypes","setTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","setTfliteCaptureDelay","getTfliteThreshold","setTfliteThreshold","getTfliteInferencingEnabled","setTfliteInferencingEnabled","tfliteInference"],hs=cs,ls=["classification","regression"],us=["pressure","linearAcceleration","gyroscope","magnetometer"];class fs{constructor(){Lt.add(this),Rt.set(this,void 0),$t.set(this,void 0),Pt.set(this,void 0),jt.set(this,[]),Ht.set(this,void 0),Kt.set(this,void 0),es.set(this,void 0),is.set(this,void 0)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}get name(){return e(this,Rt,"f")}async setName(e,t){if(os.assertTypeWithError(e,"string"),this.name==e)return void os.log(`redundant name assignment ${e}`);const s=this.waitForEvent("getTfliteName"),i=B.encode(e);this.sendMessage([{type:"setTfliteName",data:i.buffer}],t),await s}get task(){return e(this,$t,"f")}async setTask(t,s){if(e(this,Lt,"m",Ft).call(this,t),this.task==t)return void os.log(`redundant task assignment ${t}`);const i=this.waitForEvent("getTfliteTask"),n=ls.indexOf(t);this.sendMessage([{type:"setTfliteTask",data:Uint8Array.from([n]).buffer}],s),await i}get sampleRate(){return e(this,Pt,"f")}async setSampleRate(t,s){if(os.assertTypeWithError(t,"number"),t-=t%_t.SensorRateStep,os.assertWithError(t>=_t.SensorRateStep,`sampleRate must be multiple of ${_t.SensorRateStep} greater than 0 (got ${t})`),e(this,Pt,"f")==t)return void os.log(`redundant sampleRate assignment ${t}`);const i=this.waitForEvent("getTfliteSampleRate"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteSampleRate",data:n.buffer}],s),await i}static AssertValidSensorType(e){ft.AssertValidSensorType(e),os.assertWithError(us.includes(e),`invalid tflite sensorType "${e}"`)}get sensorTypes(){return e(this,jt,"f").slice()}async setSensorTypes(e,t){e.forEach((e=>{fs.AssertValidSensorType(e)}));const s=this.waitForEvent("getTfliteSensorTypes");var i;const n=(e=(i=e).filter(((e,t)=>i.indexOf(e)==t))).map((e=>ct.indexOf(e))).sort();os.log(e,n),this.sendMessage([{type:"setTfliteSensorTypes",data:Uint8Array.from(n).buffer}],t),await s}get isReady(){return e(this,Ht,"f")}get captureDelay(){return e(this,Kt,"f")}async setCaptureDelay(t,s){if(os.assertTypeWithError(t,"number"),e(this,Kt,"f")==t)return void os.log(`redundant captureDelay assignment ${t}`);const i=this.waitForEvent("getTfliteCaptureDelay"),n=new DataView(new ArrayBuffer(2));n.setUint16(0,t,!0),this.sendMessage([{type:"setTfliteCaptureDelay",data:n.buffer}],s),await i}get threshold(){return e(this,es,"f")}async setThreshold(t,s){if(os.assertTypeWithError(t,"number"),os.assertWithError(t>=0,`threshold must be positive (got ${t})`),e(this,es,"f")==t)return void os.log(`redundant threshold assignment ${t}`);const i=this.waitForEvent("getTfliteThreshold"),n=new DataView(new ArrayBuffer(4));n.setFloat32(0,t,!0),this.sendMessage([{type:"setTfliteThreshold",data:n.buffer}],s),await i}get inferencingEnabled(){return e(this,is,"f")}async setInferencingEnabled(t,s=!0){if(os.assertTypeWithError(t,"boolean"),!t&&!this.isReady)return;if(e(this,Lt,"m",Zt).call(this),e(this,is,"f")==t)return void os.log(`redundant inferencingEnabled assignment ${t}`);const i=this.waitForEvent("getTfliteInferencingEnabled");this.sendMessage([{type:"setTfliteInferencingEnabled",data:Uint8Array.from([Number(t)]).buffer}],s),await i}async toggleInferencingEnabled(){return this.setInferencingEnabled(!this.inferencingEnabled)}async enableInferencing(){this.inferencingEnabled||this.setInferencingEnabled(!0)}async disableInferencing(){this.inferencingEnabled&&this.setInferencingEnabled(!1)}parseMessage(t,s){switch(os.log({messageType:t}),t){case"getTfliteName":case"setTfliteName":e(this,Lt,"m",At).call(this,s);break;case"getTfliteTask":case"setTfliteTask":e(this,Lt,"m",Nt).call(this,s);break;case"getTfliteSampleRate":case"setTfliteSampleRate":e(this,Lt,"m",Vt).call(this,s);break;case"getTfliteSensorTypes":case"setTfliteSensorTypes":e(this,Lt,"m",qt).call(this,s);break;case"tfliteIsReady":e(this,Lt,"m",Jt).call(this,s);break;case"getTfliteCaptureDelay":case"setTfliteCaptureDelay":e(this,Lt,"m",Xt).call(this,s);break;case"getTfliteThreshold":case"setTfliteThreshold":e(this,Lt,"m",ts).call(this,s);break;case"getTfliteInferencingEnabled":case"setTfliteInferencingEnabled":e(this,Lt,"m",ns).call(this,s);break;case"tfliteInference":e(this,Lt,"m",rs).call(this,s);break;default:throw Error(`uncaught messageType ${t}`)}}}var gs,ds,ms,ps,vs;Rt=new WeakMap,$t=new WeakMap,Pt=new WeakMap,jt=new WeakMap,Ht=new WeakMap,Kt=new WeakMap,es=new WeakMap,is=new WeakMap,Lt=new WeakSet,Ft=function(e){os.assertEnumWithError(e,ls)},Ut=function(e){os.assertWithError(e in ls,`invalid taskEnum ${e}`)},xt=function(){return this.eventDispatcher.dispatchEvent},At=function(t){os.log("parseName",t);const s=P.decode(t.buffer);e(this,Lt,"m",Ot).call(this,s)},Ot=function(s){os.log({name:s}),t(this,Rt,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteName",{tfliteName:s})},Nt=function(t){os.log("parseTask",t);const s=t.getUint8(0);e(this,Lt,"m",Ut).call(this,s);const i=ls[s];e(this,Lt,"m",Bt).call(this,i)},Bt=function(s){os.log({task:s}),t(this,$t,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteTask",{tfliteTask:s})},Vt=function(t){os.log("parseSampleRate",t);const s=t.getUint16(0,!0);e(this,Lt,"m",zt).call(this,s)},zt=function(s){os.log({sampleRate:s}),t(this,Pt,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteSampleRate",{tfliteSampleRate:s})},qt=function(t){os.log("parseSensorTypes",t);const s=[];for(let e=0;e<t.byteLength;e++){const i=t.getUint8(e),n=ct[i];n?s.push(n):os.error(`invalid sensorTypeEnum ${i}`)}e(this,Lt,"m",Gt).call(this,s)},Gt=function(s){os.log({sensorTypes:s}),t(this,jt,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteSensorTypes",{tfliteSensorTypes:s})},Jt=function(t){os.log("parseIsReady",t);const s=Boolean(t.getUint8(0));e(this,Lt,"m",Qt).call(this,s)},Qt=function(s){os.log({isReady:s}),t(this,Ht,s,"f"),e(this,Lt,"a",xt).call(this,"tfliteIsReady",{tfliteIsReady:s})},Zt=function(){os.assertWithError(this.isReady,"tflite is not ready")},Xt=function(t){os.log("parseCaptureDelay",t);const s=t.getUint16(0,!0);e(this,Lt,"m",Yt).call(this,s)},Yt=function(s){os.log({captureDelay:s}),t(this,Kt,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteCaptureDelay",{tfliteCaptureDelay:s})},ts=function(t){os.log("parseThreshold",t);const s=t.getFloat32(0,!0);e(this,Lt,"m",ss).call(this,s)},ss=function(s){os.log({threshold:s}),t(this,es,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteThreshold",{tfliteThreshold:s})},ns=function(t){os.log("parseInferencingEnabled",t);const s=Boolean(t.getUint8(0));e(this,Lt,"m",as).call(this,s)},as=function(s){os.log({inferencingEnabled:s}),t(this,is,s,"f"),e(this,Lt,"a",xt).call(this,"getTfliteInferencingEnabled",{tfliteInferencingEnabled:s})},rs=function(t){os.log("parseInference",t);const s=Re(t,0);os.log({timestamp:s});const i=[];for(let e=0,s=2;s<t.byteLength;e++,s+=4){const e=t.getFloat32(s,!0);i.push(e)}os.log("values",i);const n={timestamp:s,values:i};e(this,Lt,"a",xt).call(this,"tfliteInference",{tfliteInference:n})};const ws=k("DeviceInformationManager",{log:!0}),ys=["manufacturerName","modelNumber","softwareRevision","hardwareRevision","firmwareRevision","pnpId","serialNumber"],bs=[...ys,"deviceInformation"];class Ss{constructor(){gs.add(this),ms.set(this,{})}get information(){return e(this,ms,"f")}clear(){t(this,ms,{},"f")}parseMessage(t,s){switch(ws.log({messageType:t}),t){case"manufacturerName":const i=P.decode(s.buffer);ws.log({manufacturerName:i}),e(this,gs,"m",vs).call(this,{manufacturerName:i});break;case"modelNumber":const n=P.decode(s.buffer);ws.log({modelNumber:n}),e(this,gs,"m",vs).call(this,{modelNumber:n});break;case"softwareRevision":const a=P.decode(s.buffer);ws.log({softwareRevision:a}),e(this,gs,"m",vs).call(this,{softwareRevision:a});break;case"hardwareRevision":const r=P.decode(s.buffer);ws.log({hardwareRevision:r}),e(this,gs,"m",vs).call(this,{hardwareRevision:r});break;case"firmwareRevision":const o=P.decode(s.buffer);ws.log({firmwareRevision:o}),e(this,gs,"m",vs).call(this,{firmwareRevision:o});break;case"pnpId":const c={source:1===s.getUint8(0)?"Bluetooth":"USB",productId:s.getUint16(3,!0),productVersion:s.getUint16(5,!0),vendorId:0};"Bluetooth"==c.source&&(c.vendorId=s.getUint16(1,!0)),ws.log({pnpId:c}),e(this,gs,"m",vs).call(this,{pnpId:c});break;case"serialNumber":const h=P.decode(s.buffer);ws.log({serialNumber:h});break;default:throw Error(`uncaught messageType ${t}`)}}}var Es,Cs,Ms,Ds,ks,Ts,Ws,Is,_s,Ls,Fs,Us,xs,Rs,As;ms=new WeakMap,gs=new WeakSet,ds=function(){return this.eventDispatcher.dispatchEvent},ps=function(){return ys.every((t=>t in e(this,ms,"f")))},vs=function(t){ws.log({partialDeviceInformation:t});Object.keys(t).forEach((s=>{e(this,gs,"a",ds).call(this,s,{[s]:t[s]})})),Object.assign(e(this,ms,"f"),t),ws.log({deviceInformation:e(this,ms,"f")}),e(this,gs,"a",ps)&&(ws.log("completed deviceInformation"),e(this,gs,"a",ds).call(this,"deviceInformation",{deviceInformation:this.information}))};const Os=k("InformationManager",{log:!0}),$s=["leftInsole","rightInsole"],Ns=["left","right"],Bs=["isCharging","getBatteryCurrent","getMtu","getId","getName","setName","getType","setType","getCurrentTime","setCurrentTime"],Ps=Bs;class Vs{constructor(){Es.add(this),Ms.set(this,!1),Ds.set(this,void 0),ks.set(this,void 0),Ts.set(this,""),Ws.set(this,void 0),Fs.set(this,0),xs.set(this,!1)}get waitForEvent(){return this.eventDispatcher.waitForEvent}get isCharging(){return e(this,Ms,"f")}updateIsCharging(s){Os.assertTypeWithError(s,"boolean"),t(this,Ms,s,"f"),Os.log({isCharging:e(this,Ms,"f")}),e(this,Es,"a",Cs).call(this,"isCharging",{isCharging:e(this,Ms,"f")})}get batteryCurrent(){return e(this,Ds,"f")}async getBatteryCurrent(){Os.log("getting battery current...");const e=this.waitForEvent("getBatteryCurrent");this.sendMessage([{type:"getBatteryCurrent"}]),await e}updateBatteryCurrent(s){Os.assertTypeWithError(s,"number"),t(this,Ds,s,"f"),Os.log({batteryCurrent:e(this,Ds,"f")}),e(this,Es,"a",Cs).call(this,"getBatteryCurrent",{batteryCurrent:e(this,Ds,"f")})}get id(){return e(this,ks,"f")}updateId(s){Os.assertTypeWithError(s,"string"),t(this,ks,s,"f"),Os.log({id:e(this,ks,"f")}),e(this,Es,"a",Cs).call(this,"getId",{id:e(this,ks,"f")})}get name(){return e(this,Ts,"f")}updateName(s){Os.assertTypeWithError(s,"string"),t(this,Ts,s,"f"),Os.log({updatedName:e(this,Ts,"f")}),e(this,Es,"a",Cs).call(this,"getName",{name:e(this,Ts,"f")})}static get MinNameLength(){return 2}get minNameLength(){return Vs.MinNameLength}static get MaxNameLength(){return 30}get maxNameLength(){return Vs.MaxNameLength}async setName(e){Os.assertTypeWithError(e,"string"),Os.assertWithError(e.length>=this.minNameLength,`name must be greater than ${this.minNameLength} characters long ("${e}" is ${e.length} characters long)`),Os.assertWithError(e.length<this.maxNameLength,`name must be less than ${this.maxNameLength} characters long ("${e}" is ${e.length} characters long)`);const t=B.encode(e);Os.log({setNameData:t});const s=this.waitForEvent("getName");this.sendMessage([{type:"setName",data:t.buffer}]),await s}get type(){return e(this,Ws,"f")}get typeEnum(){return $s.indexOf(this.type)}updateType(s){e(this,Es,"m",Is).call(this,s),s!=this.type?(t(this,Ws,s,"f"),Os.log({updatedType:e(this,Ws,"f")}),e(this,Es,"a",Cs).call(this,"getType",{type:e(this,Ws,"f")})):Os.log("redundant type assignment")}async setType(t){e(this,Es,"m",Is).call(this,t);const s=$s.indexOf(t);e(this,Es,"m",Ls).call(this,s)}get isInsole(){switch(this.type){case"leftInsole":case"rightInsole":return!0;default:return!1}}get insoleSide(){switch(this.type){case"leftInsole":return"left";case"rightInsole":return"right"}}get mtu(){return e(this,Fs,"f")}get isCurrentTimeSet(){return e(this,xs,"f")}parseMessage(t,s){switch(Os.log({messageType:t}),t){case"isCharging":const i=Boolean(s.getUint8(0));Os.log({isCharging:i}),this.updateIsCharging(i);break;case"getBatteryCurrent":const n=s.getFloat32(0,!0);Os.log({batteryCurrent:n}),this.updateBatteryCurrent(n);break;case"getId":const a=P.decode(s.buffer);Os.log({id:a}),this.updateId(a);break;case"getName":case"setName":const r=P.decode(s.buffer);Os.log({name:r}),this.updateName(r);break;case"getType":case"setType":const o=s.getUint8(0),c=$s[o];Os.log({typeEnum:o,type:c}),this.updateType(c);break;case"getMtu":const h=s.getUint16(0,!0);Os.log({mtu:h}),e(this,Es,"m",Us).call(this,h);break;case"getCurrentTime":case"setCurrentTime":const l=Number(s.getBigUint64(0,!0));e(this,Es,"m",Rs).call(this,l);break;default:throw Error(`uncaught messageType ${t}`)}}clear(){t(this,xs,!1,"f")}}Ms=new WeakMap,Ds=new WeakMap,ks=new WeakMap,Ts=new WeakMap,Ws=new WeakMap,Fs=new WeakMap,xs=new WeakMap,Es=new WeakSet,Cs=function(){return this.eventDispatcher.dispatchEvent},Is=function(e){Os.assertEnumWithError(e,$s)},_s=function(e){Os.assertTypeWithError(e,"number"),Os.assertWithError(e in $s,`invalid typeEnum ${e}`)},Ls=async function(t){e(this,Es,"m",_s).call(this,t);const s=Uint8Array.from([t]);Os.log({setTypeData:s});const i=this.waitForEvent("getType");this.sendMessage([{type:"setType",data:s.buffer}]),await i},Us=function(s){Os.assertTypeWithError(s,"number"),e(this,Fs,"f")!=s?(t(this,Fs,s,"f"),e(this,Es,"a",Cs).call(this,"getMtu",{mtu:e(this,Fs,"f")})):Os.log("redundant mtu assignment",s)},Rs=function(s){Os.log({currentTime:s}),t(this,xs,0!=s,"f"),e(this,xs,"f")||e(this,Es,"m",As).call(this)},As=async function(){Os.log("setting current time...");const e=new DataView(new ArrayBuffer(8));e.setBigUint64(0,BigInt(Date.now()),!0);const t=this.waitForEvent("getCurrentTime");this.sendMessage([{type:"setCurrentTime",data:e.buffer}]),await t};const zs=["none","strongClick100","strongClick60","strongClick30","sharpClick100","sharpClick60","sharpClick30","softBump100","softBump60","softBump30","doubleClick100","doubleClick60","tripleClick100","softFuzz60","strongBuzz100","alert750ms","alert1000ms","strongClick1_100","strongClick2_80","strongClick3_60","strongClick4_30","mediumClick100","mediumClick80","mediumClick60","sharpTick100","sharpTick80","sharpTick60","shortDoubleClickStrong100","shortDoubleClickStrong80","shortDoubleClickStrong60","shortDoubleClickStrong30","shortDoubleClickMedium100","shortDoubleClickMedium80","shortDoubleClickMedium60","shortDoubleSharpTick100","shortDoubleSharpTick80","shortDoubleSharpTick60","longDoubleSharpClickStrong100","longDoubleSharpClickStrong80","longDoubleSharpClickStrong60","longDoubleSharpClickStrong30","longDoubleSharpClickMedium100","longDoubleSharpClickMedium80","longDoubleSharpClickMedium60","longDoubleSharpTick100","longDoubleSharpTick80","longDoubleSharpTick60","buzz100","buzz80","buzz60","buzz40","buzz20","pulsingStrong100","pulsingStrong60","pulsingMedium100","pulsingMedium60","pulsingSharp100","pulsingSharp60","transitionClick100","transitionClick80","transitionClick60","transitionClick40","transitionClick20","transitionClick10","transitionHum100","transitionHum80","transitionHum60","transitionHum40","transitionHum20","transitionHum10","transitionRampDownLongSmooth2_100","transitionRampDownLongSmooth1_100","transitionRampDownMediumSmooth1_100","transitionRampDownMediumSmooth2_100","transitionRampDownShortSmooth1_100","transitionRampDownShortSmooth2_100","transitionRampDownLongSharp1_100","transitionRampDownLongSharp2_100","transitionRampDownMediumSharp1_100","transitionRampDownMediumSharp2_100","transitionRampDownShortSharp1_100","transitionRampDownShortSharp2_100","transitionRampUpLongSmooth1_100","transitionRampUpLongSmooth2_100","transitionRampUpMediumSmooth1_100","transitionRampUpMediumSmooth2_100","transitionRampUpShortSmooth1_100","transitionRampUpShortSmooth2_100","transitionRampUpLongSharp1_100","transitionRampUpLongSharp2_100","transitionRampUpMediumSharp1_100","transitionRampUpMediumSharp2_100","transitionRampUpShortSharp1_100","transitionRampUpShortSharp2_100","transitionRampDownLongSmooth1_50","transitionRampDownLongSmooth2_50","transitionRampDownMediumSmooth1_50","transitionRampDownMediumSmooth2_50","transitionRampDownShortSmooth1_50","transitionRampDownShortSmooth2_50","transitionRampDownLongSharp1_50","transitionRampDownLongSharp2_50","transitionRampDownMediumSharp1_50","transitionRampDownMediumSharp2_50","transitionRampDownShortSharp1_50","transitionRampDownShortSharp2_50","transitionRampUpLongSmooth1_50","transitionRampUpLongSmooth2_50","transitionRampUpMediumSmooth1_50","transitionRampUpMediumSmooth2_50","transitionRampUpShortSmooth1_50","transitionRampUpShortSmooth2_50","transitionRampUpLongSharp1_50","transitionRampUpLongSharp2_50","transitionRampUpMediumSharp1_50","transitionRampUpMediumSharp2_50","transitionRampUpShortSharp1_50","transitionRampUpShortSharp2_50","longBuzz100","smoothHum50","smoothHum40","smoothHum30","smoothHum20","smoothHum10"];var js,qs,Gs,Hs,Js,Qs,Zs,Ks,Xs,Ys,ei,ti,si,ii,ni,ai,ri,oi,ci,hi,li,ui,fi;const gi=k("VibrationManager"),di=["front","rear"],mi=["waveformEffect","waveform"];class pi{constructor(){js.add(this)}static get MaxWaveformEffectSegmentDelay(){return e(this,qs,"f",Ks)}get maxWaveformEffectSegmentDelay(){return qs.MaxWaveformEffectSegmentDelay}static get MaxWaveformEffectSegmentLoopCount(){return e(this,qs,"f",Ys)}get maxWaveformEffectSegmentLoopCount(){return qs.MaxWaveformEffectSegmentLoopCount}static get MaxNumberOfWaveformEffectSegments(){return e(this,qs,"f",ti)}get maxNumberOfWaveformEffectSegments(){return qs.MaxNumberOfWaveformEffectSegments}static get MaxWaveformEffectSequenceLoopCount(){return e(this,qs,"f",ii)}get maxWaveformEffectSequenceLoopCount(){return qs.MaxWaveformEffectSequenceLoopCount}static get MaxWaveformSegmentDuration(){return e(this,qs,"f",ai)}get maxWaveformSegmentDuration(){return qs.MaxWaveformSegmentDuration}static get MaxNumberOfWaveformSegments(){return e(this,qs,"f",oi)}get maxNumberOfWaveformSegments(){return qs.MaxNumberOfWaveformSegments}async triggerVibration(t,s=!0){let i;t.forEach((t=>{const{type:s}=t;let n,{locations:a}=t;switch(a=a||di.slice(),s){case"waveformEffect":{const{segments:s,loopCount:i}=t;n=e(this,js,"m",hi).call(this,a,s,i)}break;case"waveform":{const{segments:s}=t;n=e(this,js,"m",li).call(this,a,s)}break;default:throw Error(`invalid vibration type "${s}"`)}gi.log({type:s,arrayBuffer:n}),i=z(i,n)})),await this.sendMessage([{type:"triggerVibration",data:i}],s)}}var vi,wi,yi,bi,Si,Ei,Ci,Mi,Di,ki,Ti,Wi,Ii,_i,Li,Fi;qs=pi,js=new WeakSet,Gs=function(e){gi.assertTypeWithError(e,"string"),gi.assertWithError(di.includes(e),`invalid location "${e}"`)},Hs=function(t){e(this,js,"m",Qs).call(this,t),t.forEach((t=>{e(this,js,"m",Gs).call(this,t)}))},Js=function(t){e(this,js,"m",Hs).call(this,t);let s=0;return t.forEach((e=>{const t=di.indexOf(e);s|=1<<t})),gi.log({locationsBitmask:s}),gi.assertWithError(s>0,"locationsBitmask must not be zero"),s},Qs=function(e){gi.assertWithError(Array.isArray(e),"passed non-array"),gi.assertWithError(e.length>0,"passed empty array")},Zs=function(e){gi.assertWithError(zs.includes(e),`invalid waveformEffect "${e}"`)},Xs=function(t){if(null!=t.effect){const s=t.effect;e(this,js,"m",Zs).call(this,s)}else{if(null==t.delay)throw Error("no effect or delay found in waveformEffectSegment");{const{delay:e}=t;gi.assertWithError(e>=0,`delay must be 0ms or greater (got ${e})`),gi.assertWithError(e<=this.maxWaveformEffectSegmentDelay,`delay must be ${this.maxWaveformEffectSegmentDelay}ms or less (got ${e})`)}}if(null!=t.loopCount){const{loopCount:s}=t;e(this,js,"m",ei).call(this,s)}},ei=function(e){gi.assertTypeWithError(e,"number"),gi.assertWithError(e>=0,`waveformEffectSegmentLoopCount must be 0 or greater (got ${e})`),gi.assertWithError(e<=this.maxWaveformEffectSegmentLoopCount,`waveformEffectSegmentLoopCount must be ${this.maxWaveformEffectSegmentLoopCount} or fewer (got ${e})`)},si=function(t){e(this,js,"m",Qs).call(this,t),gi.assertWithError(t.length<=this.maxNumberOfWaveformEffectSegments,`must have ${this.maxNumberOfWaveformEffectSegments} waveformEffectSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,js,"m",Xs).call(this,t)}))},ni=function(e){gi.assertTypeWithError(e,"number"),gi.assertWithError(e>=0,`waveformEffectSequenceLoopCount must be 0 or greater (got ${e})`),gi.assertWithError(e<=this.maxWaveformEffectSequenceLoopCount,`waveformEffectSequenceLoopCount must be ${this.maxWaveformEffectSequenceLoopCount} or fewer (got ${e})`)},ri=function(e){gi.assertTypeWithError(e.amplitude,"number"),gi.assertWithError(e.amplitude>=0,`amplitude must be 0 or greater (got ${e.amplitude})`),gi.assertWithError(e.amplitude<=1,`amplitude must be 1 or less (got ${e.amplitude})`),gi.assertTypeWithError(e.duration,"number"),gi.assertWithError(e.duration>0,`duration must be greater than 0ms (got ${e.duration}ms)`),gi.assertWithError(e.duration<=this.maxWaveformSegmentDuration,`duration must be ${this.maxWaveformSegmentDuration}ms or less (got ${e.duration}ms)`)},ci=function(t){e(this,js,"m",Qs).call(this,t),gi.assertWithError(t.length<=this.maxNumberOfWaveformSegments,`must have ${this.maxNumberOfWaveformSegments} waveformSegments or fewer (got ${t.length})`),t.forEach((t=>{e(this,js,"m",ri).call(this,t)}))},hi=function(t,s,i=0){e(this,js,"m",si).call(this,s),e(this,js,"m",ni).call(this,i);let n=[],a=0;const r=s.some((e=>{const{loopCount:t}=e;return null!=t&&t>0}))||0!=i;for(let e=0;e<s.length||r&&e<this.maxNumberOfWaveformEffectSegments;e++){const t=s[e]||{effect:"none"};if(null!=t.effect){const e=t.effect;n[a++]=zs.indexOf(e)}else{if(null==t.delay)throw Error("invalid waveformEffectSegment");{const{delay:e}=t;n[a++]=128|Math.floor(e/10)}}}const o=0!=i;for(let e=0;e<s.length||o&&e<this.maxNumberOfWaveformEffectSegments;e++){const t=s[e]?.loopCount||0;0!=e&&4!=e||(n[a]=0);const i=e%4*2;n[a]|=t<<i,3!=e&&7!=e||a++}0!=i&&(n[a++]=i);const c=new DataView(Uint8Array.from(n).buffer);return gi.log({dataArray:n,dataView:c}),e(this,js,"m",fi).call(this,t,"waveformEffect",c)},li=function(t,s){e(this,js,"m",ci).call(this,s);const i=new DataView(new ArrayBuffer(2*s.length));return s.forEach(((e,t)=>{i.setUint8(2*t,Math.floor(127*e.amplitude)),i.setUint8(2*t+1,Math.floor(e.duration/10))})),gi.log({dataView:i}),e(this,js,"m",fi).call(this,t,"waveform",i)},ui=function(e){gi.assertTypeWithError(e,"string"),gi.assertWithError(mi.includes(e),`invalid vibrationType "${e}"`)},fi=function(t,s,i){gi.assertWithError(i?.byteLength>0,"no data received");const n=e(this,js,"m",Js).call(this,t);e(this,js,"m",ui).call(this,s);const a=mi.indexOf(s);gi.log({locationsBitmask:n,vibrationTypeIndex:a,dataView:i});const r=z(n,a,i.byteLength,i);return gi.log({data:r}),r},Ks={value:1270},Ys={value:3},ti={value:8},ii={value:6},ai={value:2550},oi={value:20};const Ui=k("BaseConnectionManager",{log:!0}),xi=["not connected","connecting","connected","disconnecting"],Ri=[...Bs,...It,...lt,"triggerVibration",...cs,...We],Ai=[...ys,"batteryLevel","smp","rx","tx",...Ri];class Oi{static get isSupported(){return!1}get isSupported(){return e(this,vi,"a",bi).isSupported}get type(){return e(this,vi,"a",bi).type}constructor(){vi.add(this),Ci.set(this,"not connected"),Ii.set(this,[]),Li.set(this,new x(e(this,vi,"m",Fi).bind(this),5e3)),e(this,vi,"m",Ei).call(this),e(this,vi,"m",Si).call(this),this.sendSmpMessage=this.sendSmpMessage.bind(this)}get status(){return e(this,Ci,"f")}set status(s){Ui.assertEnumWithError(s,xi),e(this,Ci,"f")!=s?(Ui.log(`new connection status "${s}"`),t(this,Ci,s,"f"),this.onStatusUpdated(this.status),this.isConnected?e(this,Li,"f").start():e(this,Li,"f").stop(),"not connected"==e(this,Ci,"f")&&(this.mtu=void 0)):Ui.log(`tried to assign same connection status "${s}"`)}get isConnected(){return"connected"==this.status}async connect(){e(this,vi,"m",Mi).call(this),e(this,vi,"m",Di).call(this),this.status="connecting"}get canReconnect(){return!1}async reconnect(){e(this,vi,"m",Mi).call(this),e(this,vi,"m",Di).call(this),Ui.assert(this.canReconnect,"unable to reconnect")}async disconnect(){e(this,vi,"m",ki).call(this),e(this,vi,"m",Ti).call(this),this.status="disconnecting",Ui.log("disconnecting from device...")}async sendSmpMessage(t){e(this,vi,"m",Wi).call(this),Ui.log("sending smp message",t)}async sendTxMessages(t,s=!0){if(e(this,vi,"m",Wi).call(this),t&&e(this,Ii,"f").push(...t),!s)return;Ui.log("sendTxMessages",e(this,Ii,"f").slice());const i=e(this,Ii,"f").map((t=>{e(wi,wi,"m",yi).call(wi,t.type);const s=Ri.indexOf(t.type),i=new DataView(new ArrayBuffer(2));return i.setUint16(0,t.data?.byteLength||0,!0),z(s,i,t.data)}));if(this.mtu)for(;i.length>0;){let e=0,t=0;i.some((s=>{if(e+s.byteLength>this.mtu-3)return!0;t++,e+=s.byteLength}));const s=i.splice(0,t);Ui.log({arrayBufferCount:t,arrayBuffersToSend:s});const n=z(...s);Ui.log("sending arrayBuffer",n),await this.sendTxData(n)}else{const e=z(...i);Ui.log("sending arrayBuffer",e),await this.sendTxData(e)}e(this,Ii,"f").length=0}async sendTxData(e){Ui.log("sendTxData",e)}parseRxMessage(t){rt(t,Ri,e(this,vi,"m",_i).bind(this),null,!0)}}wi=Oi,Ci=new WeakMap,Ii=new WeakMap,Li=new WeakMap,vi=new WeakSet,yi=function(e){Ui.assertEnumWithError(e,Ri)},bi=function(){return this.constructor},Si=function(){Ui.assertWithError(this.isSupported,`${this.constructor.name} is not supported`)},Ei=function(){Ui.assertWithError(this.constructor!=wi,`${this.constructor.name} must be subclassed`)},Mi=function(){Ui.assertWithError(!this.isConnected,"device is already connected")},Di=function(){Ui.assertWithError("connecting"!=this.status,"device is already connecting")},ki=function(){Ui.assertWithError(this.isConnected,"device is not connected")},Ti=function(){Ui.assertWithError("disconnecting"!=this.status,"device is already disconnecting")},Wi=function(){e(this,vi,"m",ki).call(this),e(this,vi,"m",Ti).call(this)},_i=function(e,t){Ui.log({messageType:e,dataView:t}),this.onMessageReceived(e,t)},Fi=function(){this.isConnected||(Ui.log("timer detected disconnection"),this.status="not connected")};const $i=k("EventUtils",{log:!1});function Ni(e,t){let s=e.addEventListener||e.addListener||e.on||e.AddEventListener;$i.assertWithError(s,"no add listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}function Bi(e,t){let s=e.removeEventListener||e.removeListener||e.RemoveEventListener;$i.assertWithError(s,"no remove listener function found for target"),s=s.bind(e),Object.entries(t).forEach((([e,t])=>{s(e,t)}))}const Pi=k("bluetoothUUIDs",{log:!1});if(i)var Vi=window.BluetoothUUID;function zi(e){return Pi.assertTypeWithError(e,"string"),Pi.assertWithError(4==e.length,"value must be 4 characters long"),`ea6da725-${e}-4f9b-893d-c3913e33b39f`}function ji(e){return Vi?.getCharacteristic?.(e)}function qi(e){return Vi?.getService?.(e)}const Gi=Object.freeze({services:{deviceInformation:{uuid:qi("device_information"),characteristics:{manufacturerName:{uuid:ji("manufacturer_name_string")},modelNumber:{uuid:ji("model_number_string")},hardwareRevision:{uuid:ji("hardware_revision_string")},firmwareRevision:{uuid:ji("firmware_revision_string")},softwareRevision:{uuid:ji("software_revision_string")},pnpId:{uuid:ji("pnp_id")},serialNumber:{uuid:ji("serial_number_string")}}},battery:{uuid:qi("battery_service"),characteristics:{batteryLevel:{uuid:ji("battery_level")}}},main:{uuid:zi("0000"),characteristics:{rx:{uuid:zi("1000")},tx:{uuid:zi("1001")}}},smp:{uuid:"8d53dc1d-1db7-4cd3-868b-8a527460aa84",characteristics:{smp:{uuid:"da2e7828-fbce-4e01-ae9e-261174997c48"}}}}}),Hi=[Gi.services.main.uuid],Ji=[Gi.services.deviceInformation.uuid,Gi.services.battery.uuid,Gi.services.smp.uuid];function Qi(e){e=e.toString().toLowerCase();return Object.keys(Gi.services).find((t=>{let s=Gi.services[t].uuid.toString();return 4==e.length&&(s=s.slice(4,8)),e.includes("-")||(s=s.replaceAll("-","")),e==s}))}const Zi=[],Ki=[];function Xi(e){var t;return e=e.toString().toLowerCase(),Object.values(Gi.services).some((s=>{const i=Object.keys(s.characteristics);return t=i.find((t=>{let i=s.characteristics[t].uuid.toString();return 4==e.length&&(i=i.slice(4,8)),e.includes("-")||(i=i.replaceAll("-","")),e==i}))})),t}function Yi(e){const t={broadcast:!1,read:!0,writeWithoutResponse:!1,write:!1,notify:!1,indicate:!1,authenticatedSignedWrites:!1,reliableWrite:!1,writableAuxiliaries:!1};switch(e){case"rx":case"tx":case"smp":t.read=!1}switch(e){case"batteryLevel":case"rx":case"smp":t.notify=!0}switch(e){case"tx":case"smp":t.writeWithoutResponse=!0}return t}Object.values(Gi.services).forEach((e=>{if(!e.characteristics)return;const t=Object.keys(e.characteristics);t.forEach((s=>{const i=e.characteristics[s];Hi.includes(e.uuid)&&(Zi.push(i.uuid),t.push(s)),Ki.push(i.uuid)}))}),[]);const en=k("BluetoothConnectionManager",{log:!0});class tn extends Oi{constructor(){super(...arguments),this.isInRange=!0}onCharacteristicValueChanged(e,t){"rx"==e?this.parseRxMessage(t):this.onMessageReceived?.(e,t)}async writeCharacteristic(e,t){en.log("writeCharacteristic",...arguments)}async sendSmpMessage(e){super.sendSmpMessage(e),await this.writeCharacteristic("smp",e)}async sendTxData(e){super.sendTxData(e),await this.writeCharacteristic("tx",e)}}var sn,nn,an,rn,on,cn,hn,ln,un,fn,gn;const dn=k("WebBluetoothConnectionManager",{log:!0});var mn;i&&(mn=window.navigator.bluetooth);class pn extends tn{constructor(){super(...arguments),sn.add(this),nn.set(this,{characteristicvaluechanged:e(this,sn,"m",un).bind(this)}),an.set(this,{gattserverdisconnected:e(this,sn,"m",gn).bind(this)}),rn.set(this,void 0),on.set(this,new Map),cn.set(this,new Map)}get bluetoothId(){return this.device.id}static get isSupported(){return Boolean(mn)}static get type(){return"webBluetooth"}get device(){return e(this,rn,"f")}set device(s){e(this,rn,"f")!=s?(e(this,rn,"f")&&Bi(e(this,rn,"f"),e(this,an,"f")),s&&Ni(s,e(this,an,"f")),t(this,rn,s,"f")):dn.log("tried to assign the same BluetoothDevice")}get server(){return e(this,rn,"f")?.gatt}get isConnected(){return this.server?.connected||!1}async connect(){await super.connect();try{const t=await mn.requestDevice({filters:[{services:Hi}],optionalServices:i?Ji:[]});dn.log("got BluetoothDevice"),this.device=t,dn.log("connecting to device...");const s=await this.server.connect();dn.log(`connected to device? ${s.connected}`),await e(this,sn,"m",hn).call(this),dn.log("fully connected"),this.status="connected"}catch(t){dn.error(t),this.status="not connected",this.server?.disconnect(),e(this,sn,"m",ln).call(this)}}async disconnect(){await e(this,sn,"m",ln).call(this),await super.disconnect(),this.server?.disconnect(),this.status="not connected"}async writeCharacteristic(t,s){super.writeCharacteristic(t,s);const i=e(this,cn,"f").get(t);dn.assertWithError(i,`${t} characteristic not found`),dn.log("writing characteristic",i,s);const n=i.properties||Yi(t);n.writeWithoutResponse?(dn.log("writing without response"),await i.writeValueWithoutResponse(s)):(dn.log("writing with response"),await i.writeValueWithResponse(s)),dn.log("wrote characteristic"),n.read&&!n.notify&&(dn.log("reading value after write..."),await i.readValue(),(o||c)&&e(this,sn,"m",fn).call(this,i))}get canReconnect(){return Boolean(this.server&&!this.server.connected&&this.isInRange)}async reconnect(){await super.reconnect(),dn.log("attempting to reconnect..."),this.status="connecting";try{await this.server.connect()}catch(e){dn.error(e),this.isInRange=!1}this.isConnected?(dn.log("successfully reconnected!"),await e(this,sn,"m",hn).call(this),this.status="connected"):(dn.log("unable to reconnect"),this.status="not connected")}}nn=new WeakMap,an=new WeakMap,rn=new WeakMap,on=new WeakMap,cn=new WeakMap,sn=new WeakSet,hn=async function(){e(this,sn,"m",ln).call(this),dn.log("getting services...");const t=await this.server.getPrimaryServices();dn.log("got services",t.length),await this.server.getPrimaryService("8d53dc1d-1db7-4cd3-868b-8a527460aa84"),dn.log("getting characteristics...");for(const s in t){const i=t[s];dn.log({service:i});const n=Qi(i.uuid);dn.assertWithError(n,`no name found for service uuid "${i.uuid}"`),dn.log(`got "${n}" service`),i.name=n,e(this,on,"f").set(n,i),dn.log(`getting characteristics for "${n}" service`);const a=await i.getCharacteristics();dn.log(`got characteristics for "${n}" service`);for(const t in a){const s=a[t];dn.log({characteristic:s});const i=Xi(s.uuid);dn.assertWithError(Boolean(i),`no name found for characteristic uuid "${s.uuid}" in "${n}" service`),dn.log(`got "${i}" characteristic in "${n}" service`),s.name=i,e(this,cn,"f").set(i,s),Ni(s,e(this,nn,"f"));const r=s.properties||Yi(i);r.notify&&(dn.log(`starting notifications for "${i}" characteristic`),await s.startNotifications()),r.read&&(dn.log(`reading "${i}" characteristic...`),await s.readValue(),(o||c)&&e(this,sn,"m",fn).call(this,s))}}},ln=async function(){this.device&&Bi(this.device,e(this,an,"f"));const t=Array.from(e(this,cn,"f").keys()).map((t=>{const s=e(this,cn,"f").get(t);Bi(s,e(this,nn,"f"));if((s.properties||Yi(t)).notify)return dn.log(`stopping notifications for "${t}" characteristic`),s.stopNotifications()}));return Promise.allSettled(t)},un=function(t){dn.log("oncharacteristicvaluechanged");const s=t.target;e(this,sn,"m",fn).call(this,s)},fn=function(e){dn.log("onCharacteristicValue");const t=e.name;dn.assertWithError(Boolean(t),`no name found for characteristic with uuid "${e.uuid}"`),dn.log(`oncharacteristicvaluechanged for "${t}" characteristic`);const s=e.value;dn.assertWithError(s,`no data found for "${t}" characteristic`),dn.log(`data for "${t}" characteristic`,Array.from(new Uint8Array(s.buffer)));try{this.onCharacteristicValueChanged(t,s)}catch(e){dn.error(e)}},gn=function(){dn.log("gattserverdisconnected"),this.status="not connected"};const vn=4294967296,wn=9007199254740992;const yn={encode:function(e){let t,s=new ArrayBuffer(256),i=new DataView(s),n=0;function a(e){let a=s.byteLength;const r=n+e;for(;a<r;)a<<=1;if(a!==s.byteLength){const e=i;s=new ArrayBuffer(a),i=new DataView(s);const t=n+3>>2;for(let s=0;s<t;++s)i.setUint32(s<<2,e.getUint32(s<<2))}return t=e,i}function r(){n+=t}function o(e){r(a(1).setUint8(n,e))}function c(e){const t=a(e.length);for(let s=0;s<e.length;++s)t.setUint8(n+s,e[s]);r()}function h(e,t){t<24?o(e<<5|t):t<256?(o(e<<5|24),o(t)):t<65536?(o(e<<5|25),function(e){r(a(2).setUint16(n,e))}(t)):t<4294967296?(o(e<<5|26),function(e){r(a(4).setUint32(n,e))}(t)):(o(e<<5|27),function(e){const t=e%vn,s=(e-t)/vn,i=a(8);i.setUint32(n,s),i.setUint32(n+4,t),r()}(t))}if(function e(t){let s;const i=[];let l;if(!1===t)return o(244);if(!0===t)return o(245);if(null===t)return o(246);if(void 0===t)return o(247);switch(typeof t){case"number":if(Math.floor(t)===t){if(t>=0&&t<=wn)return h(0,t);if(-wn<=t&&t<0)return h(1,-(t+1))}return o(251),function(e){r(a(8).setFloat64(n,e))}(t);case"string":for(s=0;s<t.length;++s){let e=t.charCodeAt(s);e<128?i.push(e):e<2048?(i.push(192|e>>6),i.push(128|63&e)):e<55296?(i.push(224|e>>12),i.push(128|e>>6&63),i.push(128|63&e)):(e=(1023&e)<<10,e|=1023&t.charCodeAt(++s),e+=65536,i.push(240|e>>18),i.push(128|e>>12&63),i.push(128|e>>6&63),i.push(128|63&e))}return h(3,i.length),c(i);default:if(Array.isArray(t))for(l=t.length,h(4,l),s=0;s<l;++s)e(t[s]);else if(t instanceof Uint8Array)h(2,t.length),c(t);else{const i=Object.keys(t);for(l=i.length,h(5,l),s=0;s<l;++s){const n=i[s];e(n),e(t[n])}}}}(e),"slice"in s)return s.slice(0,n);const l=new ArrayBuffer(n),u=new DataView(l);for(let e=0;e<n;++e)u.setUint8(e,i.getUint8(e));return l},decode:function(e,t,s){const i=new DataView(e);let n=0;function a(e,t){return n+=e,t}function r(t){return a(t,new Uint8Array(e,n,t))}function o(){return a(1,i.getUint8(n))}function c(){return a(2,i.getUint16(n))}function h(){return a(4,i.getUint32(n))}function l(){return 255===i.getUint8(n)&&(n+=1,!0)}function u(e){if(e<24)return e;if(24===e)return o();if(25===e)return c();if(26===e)return h();if(27===e)return h()*vn+h();if(31===e)return-1;throw new Error("Invalid length encoding")}function f(e){const t=o();if(255===t)return-1;const s=u(31&t);if(s<0||t>>5!==e)throw new Error("Invalid indefinite length element");return s}function g(e,t){for(let s=0;s<t;++s){let s=o();128&s&&(s<224?(s=(31&s)<<6|63&o(),t-=1):s<240?(s=(15&s)<<12|(63&o())<<6|63&o(),t-=2):(s=(15&s)<<18|(63&o())<<12|(63&o())<<6|63&o(),t-=3)),s<65536?e.push(s):(s-=65536,e.push(55296|s>>10),e.push(56320|1023&s))}}"function"!=typeof t&&(t=function(e){return e}),"function"!=typeof s&&(s=function(){});const d=function e(){const h=o(),d=h>>5,m=31&h;let p,v;if(7===d)switch(m){case 25:return function(){const e=new ArrayBuffer(4),t=new DataView(e),s=c(),i=32768&s;let n=31744&s;const a=1023&s;if(31744===n)n=261120;else if(0!==n)n+=114688;else if(0!==a)return(i?-1:1)*a*5.960464477539063e-8;return t.setUint32(0,i<<16|n<<13|a<<13),t.getFloat32(0)}();case 26:return a(4,i.getFloat32(n));case 27:return a(8,i.getFloat64(n))}if(v=u(m),v<0&&(d<2||d>6))throw new Error("Invalid length");const w=[];let y;const b={};switch(d){case 0:return v;case 1:return-1-v;case 2:if(v<0){const e=[];let t=0;for(;(v=f(d))>=0;)t+=v,e.push(r(v));const s=new Uint8Array(t);let i=0;for(p=0;p<e.length;++p)s.set(e[p],i),i+=e[p].length;return s}return r(v);case 3:if(v<0)for(;(v=f(d))>=0;)g(w,v);else g(w,v);return String.fromCharCode.apply(null,w);case 4:if(v<0)for(y=[];!l();)y.push(e());else for(y=new Array(v),p=0;p<v;++p)y[p]=e();return y;case 5:for(p=0;p<v||v<0&&!l();++p){b[e()]=e()}return b;case 6:return t(e(),v);case 7:switch(v){case 20:return!1;case 21:return!0;case 22:return null;case 23:return;default:return s(v)}}}();if(n!==e.byteLength)throw new Error("Remaining bytes");return d}},bn=k("mcumgr",{log:!0}),Sn=0,En=1,Cn=2,Mn=3,Dn=0,kn=1,Tn=8,Wn=0,In=2,_n=3,Ln=5,Fn=0,Un=1,xn=5,Rn=0;class An{constructor(){this._mtu=256,this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}onMessage(e){return this._messageCallback=e,this}onImageUploadNext(e){return this._imageUploadNextCallback=e,this}onImageUploadProgress(e){return this._imageUploadProgressCallback=e,this}onImageUploadFinished(e){return this._imageUploadFinishedCallback=e,this}onFileUploadNext(e){return this._fileUploadNextCallback=e,this}onFileUploadProgress(e){return this._fileUploadProgressCallback=e,this}onFileUploadFinished(e){return this._fileUploadFinishedCallback=e,this}onFileDownloadNext(e){return this._fileDownloadNextCallback=e,this}onFileDownloadProgress(e){return this._fileDownloadProgressCallback=e,this}onFileDownloadFinished(e){return this._fileDownloadFinishedCallback=e,this}_getMessage(e,t,s,i){let n=[];void 0!==i&&(n=[...new Uint8Array(yn.encode(i))]);const a=255&n.length,r=[e,0,n.length>>8,a,t>>8,255&t,this._seq,s,...n];return this._seq=(this._seq+1)%256,r}_notification(e){bn.log("mcumgr - message received");const t=new Uint8Array(e);this._buffer=new Uint8Array([...this._buffer,...t]);const s=256*this._buffer[2]+this._buffer[3];this._buffer.length<s+8||(this._processMessage(this._buffer.slice(0,s+8)),this._buffer=this._buffer.slice(s+8))}_processMessage(e){const[t,,s,i,n,a,,r]=e,o=yn.decode(e.slice(8).buffer),c=256*s+i,h=256*n+a;return bn.log("mcumgr - Process Message - Group: "+h+", Id: "+r+", Off: "+o.off),h===kn&&r===Un&&o.off?(this._uploadOffset=o.off,void this._uploadNext()):t===Mn&&h===Tn&&r===Rn&&o.off?(this._uploadFileOffset=o.off,void this._uploadFileNext()):t===En&&h===Tn&&r===Rn?(this._downloadFileOffset+=o.data.length,null!=o.len&&(this._downloadFileLength=o.len),bn.log("downloaded "+this._downloadFileOffset+" bytes of "+this._downloadFileLength),this._downloadFileLength>0&&this._fileDownloadProgressCallback({percentage:Math.floor(this._downloadFileOffset/this._downloadFileLength*100)}),this._messageCallback&&this._messageCallback({op:t,group:h,id:r,data:o,length:c}),void this._downloadFileNext()):void(this._messageCallback&&this._messageCallback({op:t,group:h,id:r,data:o,length:c}))}cmdReset(){return this._getMessage(Cn,Dn,Ln)}smpEcho(e){return this._getMessage(Cn,Dn,Wn,{d:e})}cmdImageState(){return this._getMessage(Sn,kn,Fn)}cmdImageErase(){return this._getMessage(Cn,kn,xn,{})}cmdImageTest(e){return this._getMessage(Cn,kn,Fn,{hash:e,confirm:!1})}cmdImageConfirm(e){return this._getMessage(Cn,kn,Fn,{hash:e,confirm:!0})}_hash(e){return crypto.subtle.digest("SHA-256",e)}async _uploadNext(){if(!this._uploadImage)return;if(this._uploadOffset>=this._uploadImage.byteLength)return this._uploadIsInProgress=!1,void this._imageUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadOffset};0===this._uploadOffset&&(e.len=this._uploadImage.byteLength,e.sha=new Uint8Array(await this._hash(this._uploadImage))),this._imageUploadProgressCallback({percentage:Math.floor(this._uploadOffset/this._uploadImage.byteLength*100)});const t=this._mtu-yn.encode(e).byteLength-8-3-5;e.data=new Uint8Array(this._uploadImage.slice(this._uploadOffset,this._uploadOffset+t)),this._uploadOffset+=t;const s=this._getMessage(Cn,kn,Un,e);bn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._imageUploadNextCallback({packet:s})}async reset(){this._messageCallback=null,this._imageUploadProgressCallback=null,this._imageUploadNextCallback=null,this._fileUploadProgressCallback=null,this._fileUploadNextCallback=null,this._uploadIsInProgress=!1,this._downloadIsInProgress=!1,this._buffer=new Uint8Array,this._seq=0}async cmdUpload(e,t=0){this._uploadIsInProgress?bn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadOffset=0,this._uploadImage=e,this._uploadSlot=t,this._uploadNext())}async cmdUploadFile(e,t){this._uploadIsInProgress?bn.error("Upload is already in progress."):(this._uploadIsInProgress=!0,this._uploadFileOffset=0,this._uploadFile=e,this._uploadFilename=t,this._uploadFileNext())}async _uploadFileNext(){if(bn.log("uploadFileNext - offset: "+this._uploadFileOffset+", length: "+this._uploadFile.byteLength),this._uploadFileOffset>=this._uploadFile.byteLength)return this._uploadIsInProgress=!1,void this._fileUploadFinishedCallback();const e={data:new Uint8Array,off:this._uploadFileOffset};0===this._uploadFileOffset&&(e.len=this._uploadFile.byteLength),e.name=this._uploadFilename,this._fileUploadProgressCallback({percentage:Math.floor(this._uploadFileOffset/this._uploadFile.byteLength*100)});const t=this._mtu-yn.encode(e).byteLength-8;e.data=new Uint8Array(this._uploadFile.slice(this._uploadFileOffset,this._uploadFileOffset+t)),this._uploadFileOffset+=t;const s=this._getMessage(Cn,Tn,Rn,e);bn.log("mcumgr - _uploadNext: Message Length: "+s.length),this._fileUploadNextCallback({packet:s})}async cmdDownloadFile(e,t){this._downloadIsInProgress?bn.error("Download is already in progress."):(this._downloadIsInProgress=!0,this._downloadFileOffset=0,this._downloadFileLength=0,this._downloadRemoteFilename=e,this._downloadLocalFilename=t,this._downloadFileNext())}async _downloadFileNext(){if(this._downloadFileLength>0&&this._downloadFileOffset>=this._downloadFileLength)return this._downloadIsInProgress=!1,void this._fileDownloadFinishedCallback();const e={off:this._downloadFileOffset};0===this._downloadFileOffset&&(e.name=this._downloadRemoteFilename);const t=this._getMessage(Sn,Tn,Rn,e);bn.log("mcumgr - _downloadNext: Message Length: "+t.length),this._fileDownloadNextCallback({packet:t})}async imageInfo(e){const t={},s=new Uint8Array(e);if(s.length<32)throw new Error("Invalid image (too short file)");if(61!==s[0]||184!==s[1]||243!==s[2]||150!==s[3])throw new Error("Invalid image (wrong magic bytes)");if(0!==s[4]||0!==s[5]||0!==s[6]||0!==s[7])throw new Error("Invalid image (wrong load address)");const i=s[8]+256*s[9];if(0!==s[10]||0!==s[11])throw new Error("Invalid image (wrong protected TLV area size)");const n=s[12]+256*s[13]+65536*s[14]+s[15]*2**24;if(t.imageSize=n,s.length<n+i)throw new Error("Invalid image (wrong image size)");if(0!==s[16]||0!==s[17]||0!==s[18]||0!==s[19])throw new Error("Invalid image (wrong flags)");const a=`${s[20]}.${s[21]}.${s[22]+256*s[23]}`;return t.version=a,t.hash=[...new Uint8Array(await this._hash(e.slice(0,n+32)))].map((e=>e.toString(16).padStart(2,"0"))).join(""),t}}var On,$n,Nn,Bn,Pn,Vn,zn,jn,qn,Gn,Hn,Jn,Qn,Zn,Kn,Xn,Yn,ea,ta,sa,ia;const na=k("FirmwareManager",{log:!0}),aa=["smp"],ra=[...aa,"firmwareImages","firmwareUploadProgress","firmwareStatus","firmwareUploadComplete"],oa=["idle","uploading","uploaded","pending","testing","erasing"];class ca{constructor(){On.add(this),Nn.set(this,"idle"),Pn.set(this,void 0),jn.set(this,void 0),qn.set(this,new An),e(this,On,"m",Gn).call(this)}get addEventListenter(){return this.eventDispatcher.addEventListener}get removeEventListener(){return this.eventDispatcher.removeEventListener}get waitForEvent(){return this.eventDispatcher.waitForEvent}parseMessage(t,s){if(na.log({messageType:t}),"smp"!==t)throw Error(`uncaught messageType ${t}`);e(this,qn,"f")._notification(Array.from(new Uint8Array(s.buffer))),e(this,On,"a",$n).call(this,"smp",{dataView:s})}async uploadFirmware(t){na.log("uploadFirmware",t);const s=this.waitForEvent("firmwareUploadComplete");await this.getImages();const i=await G(t),n=await e(this,qn,"f").imageInfo(i);na.log({imageInfo:n}),e(this,qn,"f").cmdUpload(i,1),e(this,On,"m",Bn).call(this,"uploading"),await s}get status(){return e(this,Nn,"f")}get images(){return e(this,Pn,"f")}async getImages(){const t=this.waitForEvent("firmwareImages");na.log("getting firmware image state..."),this.sendMessage(Uint8Array.from(e(this,qn,"f").cmdImageState()).buffer),await t}async testImage(t=1){if(e(this,On,"m",zn).call(this,t),e(this,On,"m",Vn).call(this),!e(this,Pn,"f")[t])return void na.log(`image ${t} not found`);if(1==e(this,Pn,"f")[t].pending)return void na.log(`image ${t} is already pending`);if(e(this,Pn,"f")[t].empty)return void na.log(`image ${t} is empty`);const s=this.waitForEvent("smp");na.log("testing firmware image..."),this.sendMessage(Uint8Array.from(e(this,qn,"f").cmdImageTest(e(this,Pn,"f")[t].hash)).buffer),await s}async eraseImage(){e(this,On,"m",Vn).call(this);const t=this.waitForEvent("smp");na.log("erasing image..."),this.sendMessage(Uint8Array.from(e(this,qn,"f").cmdImageErase()).buffer),e(this,On,"m",Bn).call(this,"erasing"),await t,await this.getImages()}async confirmImage(t=0){if(e(this,On,"m",zn).call(this,t),e(this,On,"m",Vn).call(this),!0===e(this,Pn,"f")[t].confirmed)return void na.log(`image ${t} is already confirmed`);const s=this.waitForEvent("smp");na.log("confirming image..."),this.sendMessage(Uint8Array.from(e(this,qn,"f").cmdImageConfirm(e(this,Pn,"f")[t].hash)).buffer),await s}async echo(t){na.assertTypeWithError(t,"string");const s=this.waitForEvent("smp");na.log("sending echo..."),this.sendMessage(Uint8Array.from(e(this,qn,"f").smpEcho(t)).buffer),await s}async reset(){const t=this.waitForEvent("smp");na.log("resetting..."),this.sendMessage(Uint8Array.from(e(this,qn,"f").cmdReset()).buffer),await t}get mtu(){return e(this,jn,"f")}set mtu(s){t(this,jn,s,"f"),e(this,qn,"f")._mtu=s}}var ha,la,ua,fa,ga,da,ma,pa,va,wa,ya,ba,Sa,Ea,Ca,Ma,Da,ka,Ta,Wa,Ia,_a,La,Fa,Ua,xa,Ra,Aa,Oa,$a,Na,Ba,Pa,Va,za,ja,qa,Ga,Ha,Ja,Qa,Za,Ka,Xa,Ya,er,tr,sr,ir;Nn=new WeakMap,Pn=new WeakMap,jn=new WeakMap,qn=new WeakMap,On=new WeakSet,$n=function(){return this.eventDispatcher.dispatchEvent},Bn=function(s){na.assertEnumWithError(s,oa),e(this,Nn,"f")!=s?(t(this,Nn,s,"f"),na.log({firmwareStatus:e(this,Nn,"f")}),e(this,On,"a",$n).call(this,"firmwareStatus",{firmwareStatus:e(this,Nn,"f")})):na.log(`redundant firmwareStatus assignment "${s}"`)},Vn=function(){na.assertWithError(e(this,Pn,"f"),"didn't get imageState")},zn=function(e){na.assertTypeWithError(e,"number"),na.assertWithError(0==e||1==e,"imageIndex must be 0 or 1")},Gn=function(){e(this,qn,"f").onMessage(e(this,On,"m",Hn).bind(this)),e(this,qn,"f").onFileDownloadNext(e(this,On,"m",Jn)),e(this,qn,"f").onFileDownloadProgress(e(this,On,"m",Qn).bind(this)),e(this,qn,"f").onFileDownloadFinished(e(this,On,"m",Zn).bind(this)),e(this,qn,"f").onFileUploadNext(e(this,On,"m",Kn).bind(this)),e(this,qn,"f").onFileUploadProgress(e(this,On,"m",Xn).bind(this)),e(this,qn,"f").onFileUploadFinished(e(this,On,"m",Yn).bind(this)),e(this,qn,"f").onImageUploadNext(e(this,On,"m",ea).bind(this)),e(this,qn,"f").onImageUploadProgress(e(this,On,"m",ta).bind(this)),e(this,qn,"f").onImageUploadFinished(e(this,On,"m",sa).bind(this))},Hn=function({op:t,group:s,id:i,data:n,length:a}){switch(na.log("onMcuMessage",...arguments),s){case Dn:switch(i){case Wn:na.log(`echo "${n.r}"`);break;case In:na.table(n.tasks);break;case _n:na.log(n)}break;case kn:if(i===Fn)e(this,On,"m",ia).call(this,n);break;default:throw Error(`uncaught mcuMessage group ${s}`)}},Jn=function(){na.log("onMcuFileDownloadNext",...arguments)},Qn=function(){na.log("onMcuFileDownloadProgress",...arguments)},Zn=function(){na.log("onMcuFileDownloadFinished",...arguments)},Kn=function(){na.log("onMcuFileUploadNext")},Xn=function(){na.log("onMcuFileUploadProgress")},Yn=function(){na.log("onMcuFileUploadFinished")},ea=function({packet:e}){na.log("onMcuImageUploadNext"),this.sendMessage(Uint8Array.from(e).buffer)},ta=function({percentage:t}){const s=t/100;na.log("onMcuImageUploadProgress",...arguments),e(this,On,"a",$n).call(this,"firmwareUploadProgress",{progress:s})},sa=async function(){na.log("onMcuImageUploadFinished",...arguments),await this.getImages(),e(this,On,"a",$n).call(this,"firmwareUploadProgress",{progress:100}),e(this,On,"a",$n).call(this,"firmwareUploadComplete",{})},ia=function({images:s}){if(!s)return void na.log("no images found");t(this,Pn,s,"f"),na.log("images",e(this,Pn,"f"));let i="idle";2==e(this,Pn,"f").length&&(e(this,Pn,"f")[1].bootable?e(this,Pn,"f")[0].confirmed?e(this,Pn,"f")[1].pending?(na.log("reset to upload to the new firmware image"),i="pending"):(na.log("Slot 1 has a valid image. run testImage() to test it or upload a different image."),i="uploaded"):(na.log('Slot 0 has a valid image. Click "Confirm Image" to confirm it or wait and the device will swap images back.'),i="testing"):na.warn('Slot 1 has a invalid image. Click "Erase Image" to erase it or upload a different image')),1==e(this,Pn,"f").length&&(e(this,Pn,"f").push({slot:1,empty:!0,version:"Empty",pending:!1,confirmed:!1,bootable:!1,active:!1,permanent:!1}),na.log("Select a firmware upload image to upload to slot 1.")),e(this,On,"m",Bn).call(this,i),e(this,On,"a",$n).call(this,"firmwareImages",{firmwareImages:e(this,Pn,"f")})};const nr=k("Device",{log:!0}),ar=[...[...xi,"connectionStatus","isConnected"],...Ai,"connectionMessage",...Ps,...bs,...ut,...Fe,...hs,...ra];class rr{get bluetoothId(){return e(this,da,"f")?.bluetoothId}constructor(){ha.add(this),fa.set(this,new I(this,ar)),da.set(this,void 0),this.sendTxMessages=e(this,ha,"m",ma).bind(this),pa.set(this,!1),Ca.set(this,la.ReconnectOnDisconnection),Ma.set(this,void 0),this.latestConnectionMessage=new Map,_a.set(this,new Ss),La.set(this,0),Ua.set(this,new Vs),xa.set(this,new _t),Aa.set(this,la.ClearSensorConfigurationOnLeave),$a.set(this,new ft),Na.set(this,new pi),Ba.set(this,new Ue),Pa.set(this,new fs),Va.set(this,new ca),e(this,_a,"f").eventDispatcher=e(this,fa,"f"),e(this,Ua,"f").sendMessage=this.sendTxMessages,e(this,Ua,"f").eventDispatcher=e(this,fa,"f"),e(this,xa,"f").sendMessage=this.sendTxMessages,e(this,xa,"f").eventDispatcher=e(this,fa,"f"),e(this,$a,"f").eventDispatcher=e(this,fa,"f"),e(this,Na,"f").sendMessage=this.sendTxMessages,e(this,Pa,"f").sendMessage=this.sendTxMessages,e(this,Pa,"f").eventDispatcher=e(this,fa,"f"),e(this,Ba,"f").sendMessage=this.sendTxMessages,e(this,Ba,"f").eventDispatcher=e(this,fa,"f"),e(this,Va,"f").sendMessage=this.sendSmpMessage,e(this,Va,"f").eventDispatcher=e(this,fa,"f"),this.addEventListener("getMtu",(()=>{e(this,Va,"f").mtu=this.mtu,e(this,Ba,"f").mtu=this.mtu,this.connectionManager.mtu=this.mtu})),this.addEventListener("getType",(()=>{e(la,la,"f",ja)&&e(la,la,"m",Ka).call(la,this)})),i&&window.addEventListener("beforeunload",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),n&&process.on("exit",(()=>{this.isConnected&&this.clearSensorConfigurationOnLeave&&this.clearSensorConfiguration()})),this.addEventListener("isConnected",(()=>{e(la,la,"m",tr).call(la,this)}))}get addEventListener(){return e(this,fa,"f").addEventListener}get removeEventListener(){return e(this,fa,"f").removeEventListener}get waitForEvent(){return e(this,fa,"f").waitForEvent}get connectionManager(){return e(this,da,"f")}set connectionManager(s){this.connectionManager!=s?(this.connectionManager&&(this.connectionManager.onStatusUpdated=void 0,this.connectionManager.onMessageReceived=void 0),s&&(s.onStatusUpdated=e(this,ha,"m",Da).bind(this),s.onMessageReceived=e(this,ha,"m",Ia).bind(this)),t(this,da,s,"f"),nr.log("assigned new connectionManager",e(this,da,"f"))):nr.log("same connectionManager is already assigned")}async connect(){return this.connectionManager||(this.connectionManager=e(la,la,"m",ua).call(la)),e(this,ha,"m",Wa).call(this),this.connectionManager.connect()}get isConnected(){return e(this,pa,"f")}get canReconnect(){return this.connectionManager?.canReconnect}async reconnect(){return e(this,ha,"m",Wa).call(this),this.connectionManager?.reconnect()}static get ReconnectOnDisconnection(){return e(this,la,"f",Ea)}static set ReconnectOnDisconnection(e){nr.assertTypeWithError(e,"boolean"),t(this,la,e,"f",Ea)}get reconnectOnDisconnection(){return e(this,Ca,"f")}set reconnectOnDisconnection(e){nr.assertTypeWithError(e,"boolean"),t(this,Ca,e,"f")}get connectionType(){return this.connectionManager?.type}async disconnect(){return e(this,ha,"m",va).call(this),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.addEventListener("isConnected",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this.connectionManager.disconnect()}toggleConnection(){this.isConnected?this.disconnect():this.canReconnect?this.reconnect():this.connect()}get connectionStatus(){switch(e(this,da,"f")?.status){case"connected":return this.isConnected?"connected":"connecting";case"not connected":case"connecting":case"disconnecting":return e(this,da,"f").status;default:return"not connected"}}get isConnectionBusy(){return"connecting"==this.connectionStatus||"disconnecting"==this.connectionStatus}get deviceInformation(){return e(this,_a,"f").information}get batteryLevel(){return e(this,La,"f")}get id(){return e(this,Ua,"f").id}get isCharging(){return e(this,Ua,"f").isCharging}get batteryCurrent(){return e(this,Ua,"f").batteryCurrent}async getBatteryCurrent(){await e(this,Ua,"f").getBatteryCurrent()}get name(){return e(this,Ua,"f").name}get setName(){return e(this,Ua,"f").setName}get type(){return e(this,Ua,"f").type}get setType(){return e(this,Ua,"f").setType}get isInsole(){return e(this,Ua,"f").isInsole}get insoleSide(){return e(this,Ua,"f").insoleSide}get mtu(){return e(this,Ua,"f").mtu}get sensorTypes(){return Object.keys(this.sensorConfiguration)}get continuousSensorTypes(){return this.sensorTypes.filter((e=>ht.includes(e)))}get sensorConfiguration(){return e(this,xa,"f").configuration}async setSensorConfiguration(t,s){await e(this,xa,"f").setConfiguration(t,s)}async clearSensorConfiguration(){return e(this,xa,"f").clearSensorConfiguration()}static get ClearSensorConfigurationOnLeave(){return e(this,la,"f",Ra)}static set ClearSensorConfigurationOnLeave(e){nr.assertTypeWithError(e,"boolean"),t(this,la,e,"f",Ra)}get clearSensorConfigurationOnLeave(){return e(this,Aa,"f")}set clearSensorConfigurationOnLeave(e){nr.assertTypeWithError(e,"boolean"),t(this,Aa,e,"f")}static get DefaultNumberOfPressureSensors(){return e(this,la,"f",Oa)}get numberOfPressureSensors(){return e(this,$a,"f").pressureSensorDataManager.numberOfSensors}resetPressureRange(){e(this,$a,"f").pressureSensorDataManager.resetRange()}async triggerVibration(t,s){e(this,Na,"f").triggerVibration(t,s)}get maxFileLength(){return e(this,Ba,"f").maxLength}async sendFile(t,s){const i=this.waitForEvent("fileTransferComplete");e(this,Ba,"f").send(t,s),await i}async receiveFile(t){const s=this.waitForEvent("fileTransferComplete");e(this,Ba,"f").receive(t),await s}get fileTransferStatus(){return e(this,Ba,"f").status}cancelFileTransfer(){e(this,Ba,"f").cancel()}get tfliteName(){return e(this,Pa,"f").name}get setTfliteName(){return e(this,Pa,"f").setName}static get TfliteTasks(){return ls}get tfliteTask(){return e(this,Pa,"f").task}get setTfliteTask(){return e(this,Pa,"f").setTask}get tfliteSampleRate(){return e(this,Pa,"f").sampleRate}get setTfliteSampleRate(){return e(this,Pa,"f").setSampleRate}get tfliteSensorTypes(){return e(this,Pa,"f").sensorTypes}get allowedTfliteSensorTypes(){return this.sensorTypes.filter((e=>us.includes(e)))}get setTfliteSensorTypes(){return e(this,Pa,"f").setSensorTypes}get tfliteIsReady(){return e(this,Pa,"f").isReady}get tfliteInferencingEnabled(){return e(this,Pa,"f").inferencingEnabled}get setTfliteInferencingEnabled(){return e(this,Pa,"f").setInferencingEnabled}async enableTfliteInferencing(){return this.setTfliteInferencingEnabled(!0)}async disableTfliteInferencing(){return this.setTfliteInferencingEnabled(!1)}get toggleTfliteInferencing(){return e(this,Pa,"f").toggleInferencingEnabled}get tfliteCaptureDelay(){return e(this,Pa,"f").captureDelay}get setTfliteCaptureDelay(){return e(this,Pa,"f").setCaptureDelay}get tfliteThreshold(){return e(this,Pa,"f").threshold}get setTfliteThreshold(){return e(this,Pa,"f").setThreshold}sendSmpMessage(t){return e(this,da,"f").sendSmpMessage(t)}get uploadFirmware(){return e(this,Va,"f").uploadFirmware}async reset(){return await e(this,Va,"f").reset(),e(this,da,"f").disconnect()}get firmwareStatus(){return e(this,Va,"f").status}get getFirmwareImages(){return e(this,Va,"f").getImages}get firmwareImages(){return e(this,Va,"f").images}get eraseFirmwareImage(){return e(this,Va,"f").eraseImage}get confirmFirmwareImage(){return e(this,Va,"f").confirmImage}get testFirmwareImage(){return e(this,Va,"f").testImage}static get ConnectedDevices(){return e(this,la,"f",za)}static get UseLocalStorage(){return e(this,la,"f",ja)}static set UseLocalStorage(s){e(this,la,"m",Ha).call(this),nr.assertTypeWithError(s,"boolean"),t(this,la,s,"f",ja),e(this,la,"f",ja)&&!e(this,la,"f",Ga)&&e(this,la,"m",Za).call(this)}static get CanUseLocalStorage(){return i&&window.localStorage}static get AvailableDevices(){return e(this,la,"f",Xa)}static get CanGetDevices(){return i&&navigator.bluetooth?.getDevices&&!o}static async GetDevices(){if(!i)return void nr.warn("GetDevices is only available in the browser");if(!navigator.bluetooth)return void nr.warn("bluetooth is not available in this browser");if(o)return void nr.warn("bluefy lists too many devices...");if(!navigator.bluetooth.getDevices)return void nr.warn("bluetooth.getDevices() is not available in this browser");e(this,la,"f",Ga)||e(this,la,"m",Za).call(this);const t=e(this,la,"f",Ga);if(!t.devices||0==t.devices.length)return void nr.log("no devices found in configuration");const s=await navigator.bluetooth.getDevices();return nr.log({bluetoothDevices:s}),s.forEach((s=>{if(!s.gatt)return;let i=t.devices.find((e=>s.id==e.bluetoothId));if(!i)return;let n=this.ConnectedDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));const a=this.AvailableDevices.filter((e=>"webBluetooth"==e.connectionType)).find((e=>e.bluetoothId==s.id));if(a)return void(n&&n?.bluetoothId==a.bluetoothId&&n!=a&&(this.AvailableDevices[e(this,la,"f",Xa).indexOf(a)]=n));if(n)return void this.AvailableDevices.push(n);const r=new la,o=new pn;o.device=s,s.name&&e(r,Ua,"f").updateName(s.name),e(r,Ua,"f").updateType(i.type),r.connectionManager=o,this.AvailableDevices.push(r)})),e(this,la,"m",sr).call(this),this.AvailableDevices}static get AddEventListener(){return e(this,la,"f",Ya).addEventListener}static get RemoveEventListener(){return e(this,la,"f",Ya).removeEventListener}static async Connect(){const e=new la;return await e.connect(),e}}var or,cr,hr,lr,ur;la=rr,fa=new WeakMap,da=new WeakMap,pa=new WeakMap,Ca=new WeakMap,Ma=new WeakMap,_a=new WeakMap,La=new WeakMap,Ua=new WeakMap,xa=new WeakMap,Aa=new WeakMap,$a=new WeakMap,Na=new WeakMap,Ba=new WeakMap,Pa=new WeakMap,Va=new WeakMap,ha=new WeakSet,ua=function(){return new pn},ga=function(){return e(this,fa,"f").dispatchEvent},ma=async function(t,s){await(e(this,da,"f")?.sendTxMessages(t,s))},va=function(){nr.assertWithError(this.isConnected,"not connected")},ya=function(){return e(la,la,"f",wa)},ba=function(){return e(this,ha,"a",ya).every((e=>this.latestConnectionMessage.has(e)))},Sa=function(){const t=e(this,ha,"a",ya).map((e=>({type:e})));e(this,ha,"m",ma).call(this,t)},Da=function(s){if(nr.log({connectionStatus:s}),"not connected"==s?this.canReconnect&&this.reconnectOnDisconnection&&(nr.log("starting reconnect interval..."),t(this,Ma,setInterval((()=>{nr.log("attempting reconnect..."),this.reconnect()}),1e3),"f")):null!=e(this,Ma,"f")&&(nr.log("clearing reconnect interval"),clearInterval(e(this,Ma,"f")),t(this,Ma,void 0,"f")),e(this,ha,"m",Ta).call(this),"connected"!=s||e(this,pa,"f")||e(this,ha,"m",Sa).call(this),"not connected"==s&&!this.canReconnect&&e(la,la,"f",Xa).includes(this)){const t=e(la,la,"f",Xa).indexOf(this);la.AvailableDevices.splice(t,1),e(la,la,"m",sr).call(la)}},ka=function(t=!1){e(this,ha,"a",ga).call(this,"connectionStatus",{connectionStatus:this.connectionStatus}),e(this,ha,"a",ga).call(this,this.connectionStatus,{}),t&&e(this,ha,"a",ga).call(this,"isConnected",{isConnected:this.isConnected})},Ta=function(){switch(t(this,pa,Boolean(this.connectionManager?.isConnected)&&e(this,ha,"a",ba)&&e(this,Ua,"f").isCurrentTimeSet,"f"),this.connectionStatus){case"connected":e(this,pa,"f")&&e(this,ha,"m",ka).call(this,!0);break;case"not connected":e(this,ha,"m",ka).call(this,!0);break;default:e(this,ha,"m",ka).call(this,!1)}},Wa=function(){this.latestConnectionMessage.clear(),e(this,Ua,"f").clear(),e(this,_a,"f").clear()},Ia=function(t,s){if(nr.log({messageType:t,dataView:s}),"batteryLevel"===t){const t=s.getUint8(0);nr.log("received battery level",{batteryLevel:t}),e(this,ha,"m",Fa).call(this,t)}else if(We.includes(t))e(this,Ba,"f").parseMessage(t,s);else if(cs.includes(t))e(this,Pa,"f").parseMessage(t,s);else if(lt.includes(t))e(this,$a,"f").parseMessage(t,s);else if(aa.includes(t))e(this,Va,"f").parseMessage(t,s);else if(ys.includes(t))e(this,_a,"f").parseMessage(t,s);else if(Bs.includes(t))e(this,Ua,"f").parseMessage(t,s);else{if(!It.includes(t))throw Error(`uncaught messageType ${t}`);e(this,xa,"f").parseMessage(t,s)}this.latestConnectionMessage.set(t,s),e(this,ha,"a",ga).call(this,"connectionMessage",{messageType:t,dataView:s}),!this.isConnected&&e(this,ha,"a",ba)&&e(this,ha,"m",Ta).call(this)},Fa=function(s){nr.assertTypeWithError(s,"number"),e(this,La,"f")!=s?(t(this,La,s,"f"),nr.log({updatedBatteryLevel:e(this,La,"f")}),e(this,ha,"a",ga).call(this,"batteryLevel",{batteryLevel:e(this,La,"f")})):nr.log(`duplicate batteryLevel assignment ${s}`)},Ha=function(){nr.assertWithError(i,"localStorage is only available in the browser"),nr.assertWithError(window.localStorage,"localStorage not found")},Qa=function(){e(this,la,"m",Ha).call(this),localStorage.setItem(e(this,la,"f",Ja),JSON.stringify(e(this,la,"f",Ga)))},Za=async function(){e(this,la,"m",Ha).call(this);let s=localStorage.getItem(e(this,la,"f",Ja));if("string"!=typeof s)return nr.log("no info found in localStorage"),t(this,la,Object.assign({},e(this,la,"f",qa)),"f",Ga),void e(this,la,"m",Qa).call(this);try{const e=JSON.parse(s);nr.log({configuration:e}),t(this,la,e,"f",Ga),this.CanGetDevices&&await this.GetDevices()}catch(e){nr.error(e)}},Ka=function(t){if("webBluetooth"!=t.connectionType)return void nr.log("localStorage is only for webBluetooth devices");e(this,la,"m",Ha).call(this);const s=e(this,la,"f",Ga).devices.findIndex((e=>e.bluetoothId==t.bluetoothId));-1!=s&&(e(this,la,"f",Ga).devices[s].type=t.type,e(this,la,"m",Qa).call(this))},er=function(){return e(this,la,"f",Ya).dispatchEvent},tr=function(t){if(t.isConnected)if(e(this,la,"f",za).includes(t))nr.log("device already included");else{if(nr.log("adding device",t),e(this,la,"f",za).push(t),this.UseLocalStorage&&"webBluetooth"==t.connectionType){const s={type:t.type,bluetoothId:t.bluetoothId},i=e(this,la,"f",Ga).devices.findIndex((e=>e.bluetoothId==s.bluetoothId));-1==i?e(this,la,"f",Ga).devices.push(s):e(this,la,"f",Ga).devices[i]=s,e(this,la,"m",Qa).call(this)}e(this,la,"a",er).call(this,"deviceConnected",{device:t}),e(this,la,"a",er).call(this,"deviceIsConnected",{device:t}),e(this,la,"m",ir).call(this)}else e(this,la,"f",za).includes(t)?(nr.log("removing device",t),e(this,la,"f",za).splice(e(this,la,"f",za).indexOf(t),1),e(this,la,"a",er).call(this,"deviceDisconnected",{device:t}),e(this,la,"a",er).call(this,"deviceIsConnected",{device:t}),e(this,la,"m",ir).call(this)):nr.log("device already not included");if(this.CanGetDevices&&this.GetDevices(),t.isConnected&&!this.AvailableDevices.includes(t)){const s=this.AvailableDevices.find((e=>e.bluetoothId==t.bluetoothId));nr.log({existingAvailableDevice:s}),s?this.AvailableDevices[this.AvailableDevices.indexOf(s)]=t:this.AvailableDevices.push(t),e(this,la,"m",sr).call(this)}},sr=function(){nr.log({AvailableDevices:this.AvailableDevices}),e(this,la,"a",er).call(this,"availableDevices",{availableDevices:this.AvailableDevices})},ir=function(){nr.log({ConnectedDevices:this.ConnectedDevices}),e(this,la,"a",er).call(this,"connectedDevices",{connectedDevices:this.ConnectedDevices})},wa={value:["isCharging","getBatteryCurrent","getId","getMtu","getName","getType","getCurrentTime","getSensorConfiguration","getSensorScalars","getPressurePositions","maxFileLength","getFileLength","getFileChecksum","getFileType","fileTransferStatus","getTfliteName","getTfliteTask","getTfliteSampleRate","getTfliteSensorTypes","tfliteIsReady","getTfliteCaptureDelay","getTfliteThreshold","getTfliteInferencingEnabled"]},Ea={value:!1},Ra={value:!0},Oa={value:8},za={value:[]},ja={value:!1},qa={value:{devices:[]}},Ga={value:void 0},Ja={value:"BS.Device"},Xa={value:[]},Ya={value:new I(la,["deviceConnected","deviceDisconnected","deviceIsConnected","availableDevices","connectedDevices"])},la.CanUseLocalStorage&&(la.UseLocalStorage=!0);const fr=k("DevicePairPressureSensorDataManager",{log:!0});class gr{constructor(){or.add(this),cr.set(this,{}),hr.set(this,new ze)}resetPressureRange(){e(this,hr,"f").reset()}onDevicePressureData(t){const{pressure:s}=t.message,i=t.target.insoleSide;if(fr.log({pressure:s,insoleSide:i}),e(this,cr,"f")[i]=s,e(this,or,"a",lr))return e(this,or,"m",ur).call(this);fr.log("doesn't have all pressure data yet...")}}var dr;cr=new WeakMap,hr=new WeakMap,or=new WeakSet,lr=function(){return Ns.every((t=>t in e(this,cr,"f")))},ur=function(){const t={rawSum:0,normalizedSum:0};return Ns.forEach((s=>{t.rawSum+=e(this,cr,"f")[s].scaledSum,t.normalizedSum+=e(this,cr,"f")[s].normalizedSum})),t.normalizedSum>0&&(t.center={x:0,y:0},Ns.forEach((s=>{const i=e(this,cr,"f")[s],n=i.normalizedSum/t.normalizedSum;n>0&&(t.center.y+=i.normalizedCenter.y*n,"right"==s&&(t.center.x=n))})),t.normalizedCenter=e(this,hr,"f").updateAndGetNormalization(t.center)),fr.log({devicePairPressure:t}),t};const mr=k("DevicePairSensorDataManager",{log:!0}),pr=["pressure","sensorData"];class vr{constructor(){dr.set(this,{}),this.pressureSensorDataManager=new gr}get dispatchEvent(){return this.eventDispatcher.dispatchEvent}resetPressureRange(){this.pressureSensorDataManager.resetPressureRange()}onDeviceSensorData(t){const{timestamp:s,sensorType:i}=t.message;let n;if(mr.log({sensorType:i,timestamp:s,event:t}),e(this,dr,"f")[i]||(e(this,dr,"f")[i]={}),e(this,dr,"f")[i][t.target.insoleSide]=s,"pressure"===i)n=this.pressureSensorDataManager.onDevicePressureData(t);else mr.log(`uncaught sensorType "${i}"`);if(n){const t=Object.assign({},e(this,dr,"f")[i]);this.dispatchEvent(i,{sensorType:i,timestamps:t,[i]:n}),this.dispatchEvent("sensorData",{sensorType:i,timestamps:t,[i]:n})}else mr.log("no value received")}}var wr,yr,br,Sr,Er,Cr,Mr,Dr,kr,Tr,Wr,Ir,_r,Lr;dr=new WeakMap;const Fr=k("DevicePair",{log:!0});function Ur(e){return`device${t=e,t[0].toUpperCase()+t.slice(1)}`;var t}const xr=["isConnected",...pr,...ar.map((e=>Ur(e)))];class Rr{constructor(){wr.add(this),br.set(this,new I(this,xr)),Er.set(this,void 0),Cr.set(this,void 0),Dr.set(this,{connectionStatus:e(this,wr,"m",kr).bind(this),isConnected:e(this,wr,"m",Tr).bind(this),sensorData:e(this,wr,"m",_r).bind(this),getSensorConfiguration:e(this,wr,"m",kr).bind(this),getType:e(this,wr,"m",Wr).bind(this)}),Ir.set(this,new vr),e(this,Ir,"f").eventDispatcher=e(this,br,"f")}get addEventListener(){return e(this,br,"f").addEventListener}get removeEventListener(){return e(this,br,"f").removeEventListener}get waitForEvent(){return e(this,br,"f").waitForEvent}get left(){return e(this,Er,"f")}get right(){return e(this,Cr,"f")}get isConnected(){return Ns.every((e=>this[e]?.isConnected))}get isPartiallyConnected(){return Ns.some((e=>this[e]?.isConnected))}get isHalfConnected(){return this.isPartiallyConnected&&!this.isConnected}assignInsole(s){if(!s.isInsole)return void Fr.warn("device is not an insole");const i=s.insoleSide,n=this[i];if(s!=n){switch(n&&Bi(n,e(this,Dr,"f")),Ni(s,e(this,Dr,"f")),i){case"left":t(this,Er,s,"f");break;case"right":t(this,Cr,s,"f")}return Fr.log(`assigned ${i} insole`,s),this.resetPressureRange(),e(this,wr,"a",Sr).call(this,"isConnected",{isConnected:this.isConnected}),e(this,wr,"a",Sr).call(this,"deviceIsConnected",{device:s,isConnected:s.isConnected,side:i}),n}Fr.log("device already assigned")}setSensorConfiguration(e){Ns.forEach((t=>{this[t]?.setSensorConfiguration(e)}))}resetPressureRange(){e(this,Ir,"f").resetPressureRange()}async triggerVibration(e,t){const s=Ns.map((s=>this[s]?.triggerVibration(e,t))).filter(Boolean);return Promise.allSettled(s)}static get shared(){return e(this,yr,"f",Lr)}}yr=Rr,br=new WeakMap,Er=new WeakMap,Cr=new WeakMap,Dr=new WeakMap,Ir=new WeakMap,wr=new WeakSet,Sr=function(){return e(this,br,"f").dispatchEvent},Mr=function(t){const s=Ns.some((s=>this[s]==t&&(Fr.log(`removing ${s} insole`,t),Bi(t,e(this,Dr,"f")),delete this[s],!0)));return s&&e(this,wr,"a",Sr).call(this,"isConnected",{isConnected:this.isConnected}),s},kr=function(t){const{type:s,target:i,message:n}=t;e(this,wr,"a",Sr).call(this,Ur(s),{...n,device:i,side:i.insoleSide})},Tr=function(t){e(this,wr,"m",kr).call(this,t),e(this,wr,"a",Sr).call(this,"isConnected",{isConnected:this.isConnected})},Wr=function(t){const{target:s}=t;if(this[s.insoleSide]==s)return;e(this,wr,"m",Mr).call(this,s)&&this.assignInsole(s)},_r=function(t){e(this,wr,"m",kr).call(this,t),this.isConnected&&e(this,Ir,"f").onDeviceSensorData(t)},Lr={value:new yr},rr.AddEventListener("deviceConnected",(t=>{const s=t.message.device;s.isInsole&&e(yr,yr,"f",Lr).assignInsole(s)}));const Ar=k("ServerUtils",{log:!1}),Or=["ping","pong","isScanningAvailable","isScanning","startScan","stopScan","discoveredDevice","discoveredDevices","expiredDiscoveredDevice","connectToDevice","disconnectFromDevice","connectedDevices","deviceMessage"];function $r(e,...t){Ar.log("createMessage",...t);const s=t.map((t=>{"string"==typeof t&&(t={type:t}),null!=t.data?Array.isArray(t.data)||(t.data=[t.data]):t.data=[];const s=z(...t.data),i=s.byteLength;Ar.assertEnumWithError(t.type,e);return z(e.indexOf(t.type),Uint16Array.from([i]),s)}));return Ar.log("messageBuffers",...s),z(...s)}function Nr(...e){return Ar.log("createServerMessage",...e),$r(Or,...e)}function Br(...e){return Ar.log("createClientDeviceMessage",...e),$r(Ai,...e)}Nr("ping"),Nr("pong"),Nr("isScanningAvailable"),Nr("isScanning"),Nr("startScan"),Nr("stopScan");const Pr=Nr("discoveredDevices");var Vr,zr,jr,qr,Gr,Hr,Jr,Qr;const Zr=k("WebSocketClientConnectionManager",{log:!0});class Kr extends Oi{constructor(){super(...arguments),Vr.add(this),jr.set(this,void 0),qr.set(this,!1)}static get isSupported(){return i}static get type(){return"webSocketClient"}get bluetoothId(){return e(this,jr,"f")}set bluetoothId(s){Zr.assertTypeWithError(s,"string"),e(this,jr,"f")!=s?t(this,jr,s,"f"):Zr.log("redundant bluetoothId assignment")}get isConnected(){return e(this,qr,"f")}set isConnected(s){Zr.assertTypeWithError(s,"boolean"),e(this,qr,"f")!=s?(t(this,qr,s,"f"),this.status=e(this,qr,"f")?"connected":"not connected",this.isConnected&&e(this,Vr,"m",Jr).call(this)):Zr.log("redundant newIsConnected assignment",s)}async connect(){await super.connect(),this.sendWebSocketConnectMessage()}async disconnect(){await super.disconnect(),this.sendWebSocketDisconnectMessage()}get canReconnect(){return!0}async reconnect(){await super.reconnect(),Zr.log("attempting to reconnect..."),this.connect()}async sendSmpMessage(e){super.sendSmpMessage(e),this.sendWebSocketMessage({type:"smp",data:e})}async sendTxData(e){super.sendTxData(e),this.sendWebSocketMessage({type:"tx",data:e})}onWebSocketMessage(t){Zr.log({dataView:t}),rt(t,ar,e(this,Vr,"m",Qr).bind(this),null,!0)}}var Xr,Yr,eo,to,so,io,no,ao,ro,oo,co,ho,lo,uo,fo,go,mo,po,vo,wo,yo,bo,So,Eo,Co;zr=Kr,jr=new WeakMap,qr=new WeakMap,Vr=new WeakSet,Hr=function(){return e(zr,zr,"f",Gr)},Jr=function(){this.sendWebSocketMessage(...e(this,Vr,"a",Hr))},Qr=function(e,t){let s=0;switch(e){case"isConnected":const i=Boolean(t.getUint8(s++));Zr.log({isConnected:i}),this.isConnected=i;break;case"rx":this.parseRxMessage(t);break;default:this.onMessageReceived(e,t)}},Gr={value:[...ys,"batteryLevel"]};const Mo=k("WebSocketClient",{log:!0}),Do=["not connected","connecting","connected","disconnecting","connectionStatus","isConnected","isScanningAvailable","isScanning","discoveredDevice","expiredDiscoveredDevice"];class ko{constructor(){Xr.add(this),to.set(this,{}),so.set(this,new I(this,Do)),no.set(this,e(e(this,Xr,"a",eo),Yr,"f",io)),ao.set(this,"not connected"),this.pingTimer=new x(e(this,Xr,"m",oo).bind(this),3e7),ho.set(this,!1),go.set(this,!1),bo.set(this,{})}get devices(){return e(this,to,"f")}get addEventListener(){return e(this,so,"f").addEventListener}get dispatchEvent(){return e(this,so,"f").dispatchEvent}get removeEventListener(){return e(this,so,"f").removeEventListener}get waitForEvent(){return e(this,so,"f").waitForEvent}assertConnection(){Mo.assertWithError(this.isConnected,"not connected")}assertDisconnection(){Mo.assertWithError(this.isDisconnected,"not disconnected")}static get ReconnectOnDisconnection(){return e(this,Yr,"f",io)}static set ReconnectOnDisconnection(e){Mo.assertTypeWithError(e,"boolean"),t(this,Yr,e,"f",io)}get reconnectOnDisconnection(){return e(this,no,"f")}set reconnectOnDisconnection(e){Mo.assertTypeWithError(e,"boolean"),t(this,no,e,"f")}sendServerMessage(...e){this.sendMessage(Nr(...e))}get _connectionStatus(){return e(this,ao,"f")}set _connectionStatus(e){switch(Mo.assertTypeWithError(e,"string"),Mo.log({newConnectionStatus:e}),t(this,ao,e,"f"),this.dispatchEvent("connectionStatus",{connectionStatus:this.connectionStatus}),this.dispatchEvent(this.connectionStatus,{}),e){case"connected":case"not connected":this.dispatchEvent("isConnected",{isConnected:this.isConnected}),this.isConnected?this.sendServerMessage("isScanningAvailable","discoveredDevices","connectedDevices"):(t(this,Xr,!1,"a",uo),t(this,Xr,!1,"a",po))}}get connectionStatus(){return this._connectionStatus}parseMessage(t){Mo.log("parseMessage",{dataView:t}),rt(t,Or,e(this,Xr,"m",ro).bind(this),null,!0)}get isScanningAvailable(){return e(this,Xr,"a",lo)}requestIsScanningAvailable(){this.sendServerMessage("isScanningAvailable")}get isScanning(){return e(this,Xr,"a",mo)}startScan(){e(this,Xr,"m",yo).call(this),this.sendServerMessage("startScan")}stopScan(){e(this,Xr,"m",wo).call(this),this.sendServerMessage("stopScan")}toggleScan(){e(this,Xr,"m",fo).call(this),this.isScanning?this.stopScan():this.startScan()}get discoveredDevices(){return e(this,bo,"f")}onDiscoveredDevice(t){Mo.log({discoveredDevice:t}),e(this,bo,"f")[t.bluetoothId]=t,this.dispatchEvent("discoveredDevice",{discoveredDevice:t})}requestDiscoveredDevices(){this.sendMessage(Pr)}connectToDevice(e){return this.requestConnectionToDevice(e)}requestConnectionToDevice(t){this.assertConnection(),Mo.assertTypeWithError(t,"string");const s=e(this,Xr,"m",Eo).call(this,t);return s.connect(),s}sendConnectToDeviceMessage(e){this.sendMessage(this.createConnectToDeviceMessage(e))}createConnectToDeviceMessage(e){return Nr({type:"connectToDevice",data:e})}onConnectedBluetoothDeviceIds(t){Mo.log({bluetoothIds:t}),t.forEach((t=>{e(this,Xr,"m",Eo).call(this,t).connectionManager.isConnected=!0}))}disconnectFromDevice(e){this.requestDisconnectionFromDevice(e)}requestDisconnectionFromDevice(e){this.assertConnection(),Mo.assertTypeWithError(e,"string");const t=this.devices[e];return Mo.assertWithError(t,`no device found with id ${e}`),t.disconnect(),t}sendDisconnectFromDeviceMessage(t){this.sendMessage(e(this,Xr,"m",Co).call(this,t))}sendDeviceMessage(e,...t){this.sendMessage(this.createDeviceMessage(e,...t))}createDeviceMessage(e,...t){return Nr({type:"deviceMessage",data:[e,Br(...t)]})}}var To,Wo,Io,_o,Lo,Fo,Uo;Yr=ko,to=new WeakMap,so=new WeakMap,no=new WeakMap,ao=new WeakMap,ho=new WeakMap,go=new WeakMap,bo=new WeakMap,Xr=new WeakSet,eo=function(){return this.constructor},ro=function(s,i){let n=0;switch(s){case"ping":e(this,Xr,"m",co).call(this);break;case"pong":break;case"isScanningAvailable":{const e=Boolean(i.getUint8(n++));Mo.log({isScanningAvailable:e}),t(this,Xr,e,"a",uo)}break;case"isScanning":{const e=Boolean(i.getUint8(n++));Mo.log({isScanning:e}),t(this,Xr,e,"a",po)}break;case"discoveredDevice":{const{string:e}=at(i,n);Mo.log({discoveredDeviceString:e});const t=JSON.parse(e);Mo.log({discoveredDevice:t}),this.onDiscoveredDevice(t)}break;case"expiredDiscoveredDevice":{const{string:t}=at(i,n);e(this,Xr,"m",So).call(this,t)}break;case"connectedDevices":{if(0==i.byteLength)break;const{string:e}=at(i,n);Mo.log({connectedBluetoothDeviceIdStrings:e});const t=JSON.parse(e);Mo.log({connectedBluetoothDeviceIds:t}),this.onConnectedBluetoothDeviceIds(t)}break;case"deviceMessage":{const{string:t,byteOffset:s}=at(i,n);n=s;const a=e(this,to,"f")[t];Mo.assertWithError(a,`no device found for id ${t}`);const r=a.connectionManager,o=q(i,n);r.onWebSocketMessage(o)}break;default:Mo.error(`uncaught messageType "${s}"`)}},oo=function(){this.sendServerMessage("ping")},co=function(){this.sendServerMessage("pong")},lo=function(){return e(this,ho,"f")},uo=function(s){Mo.assertTypeWithError(s,"boolean"),t(this,ho,s,"f"),this.dispatchEvent("isScanningAvailable",{isScanningAvailable:this.isScanningAvailable}),this.isScanningAvailable&&e(this,Xr,"m",vo).call(this)},fo=function(){this.assertConnection(),Mo.assertWithError(this.isScanningAvailable,"scanning is not available")},mo=function(){return e(this,go,"f")},po=function(e){Mo.assertTypeWithError(e,"boolean"),t(this,go,e,"f"),this.dispatchEvent("isScanning",{isScanning:this.isScanning})},vo=function(){this.sendServerMessage("isScanning")},wo=function(){Mo.assertWithError(this.isScanning,"is not scanning")},yo=function(){Mo.assertWithError(!this.isScanning,"is already scanning")},So=function(t){Mo.log({expiredBluetoothDeviceId:t});const s=e(this,bo,"f")[t];s?(Mo.log({expiredDiscoveredDevice:s}),delete e(this,bo,"f")[t],this.dispatchEvent("expiredDiscoveredDevice",{discoveredDevice:s})):Mo.warn(`no discoveredDevice found with id "${t}"`)},Eo=function(t){let s=e(this,to,"f")[t];return s||(s=this.createDevice(t),e(this,to,"f")[t]=s),s},Co=function(e){return Nr({type:"disconnectFromDevice",data:e})},io={value:!0};const xo=k("WebSocketClient",{log:!0});class Ro extends ko{constructor(){super(...arguments),To.add(this),Wo.set(this,void 0),Io.set(this,{open:e(this,To,"m",_o).bind(this),message:e(this,To,"m",Lo).bind(this),close:e(this,To,"m",Fo).bind(this),error:e(this,To,"m",Uo).bind(this)})}get webSocket(){return e(this,Wo,"f")}set webSocket(s){e(this,Wo,"f")!=s?(xo.log("assigning webSocket",s),e(this,Wo,"f")&&Bi(e(this,Wo,"f"),e(this,Io,"f")),Ni(s,e(this,Io,"f")),t(this,Wo,s,"f"),xo.log("assigned webSocket")):xo.log("redundant webSocket assignment")}get readyState(){return this.webSocket?.readyState}get isConnected(){return this.readyState==WebSocket.OPEN}get isDisconnected(){return this.readyState==WebSocket.CLOSED}connect(e=`wss://${location.host}`){this.webSocket&&this.assertDisconnection(),this._connectionStatus="connecting",this.webSocket=new WebSocket(e)}disconnect(){this.assertConnection(),this.reconnectOnDisconnection&&(this.reconnectOnDisconnection=!1,this.webSocket.addEventListener("close",(()=>{this.reconnectOnDisconnection=!0}),{once:!0})),this._connectionStatus="disconnecting",this.webSocket.close()}reconnect(){this.assertDisconnection(),this.webSocket=new WebSocket(this.webSocket.url)}toggleConnection(e){this.isConnected?this.disconnect():e&&this.webSocket?.url==e?this.reconnect():this.connect(e)}sendMessage(t){this.assertConnection(),e(this,Wo,"f").send(t)}createDevice(e){const t=new rr,s=new Kr;return s.bluetoothId=e,s.sendWebSocketMessage=this.sendDeviceMessage.bind(this,e),s.sendWebSocketConnectMessage=this.sendConnectToDeviceMessage.bind(this,e),s.sendWebSocketDisconnectMessage=this.sendDisconnectFromDeviceMessage.bind(this,e),t.connectionManager=s,t}}Wo=new WeakMap,Io=new WeakMap,To=new WeakSet,_o=function(e){xo.log("webSocket.open",e),this.pingTimer.start(),this._connectionStatus="connected"},Lo=async function(e){xo.log("webSocket.message",e),this.pingTimer.restart();const t=await e.data.arrayBuffer(),s=new DataView(t);this.parseMessage(s)},Fo=function(e){xo.log("webSocket.close",e),this._connectionStatus="not connected",Object.entries(this.devices).forEach((([e,t])=>{t.connectionManager.isConnected=!1})),this.pingTimer.stop(),this.reconnectOnDisconnection&&setTimeout((()=>{this.reconnect()}),3e3)},Uo=function(e){xo.error("webSocket.error",e.message)};export{ht as ContinuousSensorTypes,rr as Device,Rr as DevicePair,$s as DeviceTypes,w as Environment,Ie as FileTypes,ct as SensorTypes,us as TfliteSensorTypes,di as VibrationLocations,mi as VibrationTypes,zs as VibrationWaveformEffects,Ro as WebSocketClient,W as setAllConsoleLevelFlags,T as setConsoleLevelFlagsForType};
//# sourceMappingURL=brilliantsole.module.min.js.map
